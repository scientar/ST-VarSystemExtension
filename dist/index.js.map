{"version":3,"mappings":"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","names":["stylePromises","Map","modulePromises","assetFailures","createVariableBlockEditor","options","container","containerId","initialValue","styleUrl","scriptUrl","readOnly","onChange","onFallback","onReady","defaultMode","targetContainer","resolveContainer","editorInstance","fallbackInstance","mounted","currentValue","cloneValue","pendingValue","silentUpdate","containerOrElement","id","HTMLElement","document","getElementById","value","structuredClone","_error","JSON","parse","stringify","setValue","silent","normalized","set","json","error","console","ensureReady","async","url","Promise","resolve","has","get","querySelector","CSS","escape","promise","reject","link","createElement","rel","href","dataset","jsoneditorStyle","addEventListener","event","remove","delete","head","appendChild","ensureStyle","moduleExports","createJSONEditor","globalThis","Error","import","then","module","catch","ensureModule","savedMode","localStorage","getItem","target","props","content","mode","mainMenuBar","navigationBar","statusBar","previousContent","metadata","isFallback","innerHTML","style","display","flexDirection","alignItems","notice","fontSize","padding","background","borderBottom","textContent","textarea","width","height","minHeight","color","border","resize","fontFamily","lineHeight","borderRadius","Boolean","handleInput","parsed","contentErrors","trim","length","push","message","String","destroy","removeEventListener","initial","ensureFallback","getValue","setMode","updateProps","setItem","warn","getMode","setContainer","nextContainer","PREFIX","log","args","EXTENSION_LOG_PREFIX","functionExecutor","constructor","this","safeGlobals","_","window","Object","Array","Number","Math","Date","parseInt","parseFloat","isNaN","isFinite","bind","compileExecutor","executorCode","params","keys","Function","e","executeFunction","functionDef","snapshot","context","executor","success","snapshotCopy","result","values","name","executeAll","inputSnapshot","activeCalls","passiveFunctions","currentSnapshot","errors","before","func","functionName","call","after","toastr","warning","executeFunctionPipeline","functionRegistry","__vitePreload","registry","__VITE_PRELOAD__","getPassiveFunctions","timestamp","now","FunctionRegistry","globalFunctions","localFunctions","loadGlobalFunctions","functions","clear","isArray","validateFunction","size","loadLocalFunctions","includes","type","enabled","order","pattern","RegExp","timing","getEnabledFunctions","allFunctions","from","getActiveFunctions","filter","f","sort","a","b","parseFunctionCalls","text","activeFunctions","allMatches","regex","match","exec","slice","index","fullMatch","getFunction","upsertGlobalFunction","upsertLocalFunction","deleteFunction","scope","exportGlobalFunctions","exportLocalFunctions","isAIMessage","is_user","role","getCurrentSwipeId","swipe_id","SNAPSHOT_ID_KEY","getSnapshotId","swipeId","swipes_info","swipeInfo","identifier","loadSnapshot","response","fetch","method","headers","ok","status","statusText","saveSnapshotToPlugin","messageId","SillyTavern","getContext","chatFile","getCurrentChatId","chatId","chat","chatLength","crypto","randomUUID","random","toString","substring","payload","getRequestHeaders","body","saveSnapshot","snapshotId","targetSwipeId","setSnapshotId","actualSwipeId","MODULE_NAME","injectSnapshotVariables","TavernHelper","updateVariablesWith","variables","vs_stat_data","getCharacterTemplate","character","characters","characterId","data","extensions","st_var_system","templateBody","fetchSnapshotFromPlugin","processMessage","targetMessageId","existing","checkExistingSnapshot","anchorResult","startMessageId","i","record","anchorMessageId","findSnapshotAnchor","baseSnapshot","aiMessages","startId","endId","swipes","mes","getAIMessageRange","msg","isLastMessage","calls","layerSwipeId","reprocessFromMessage","fromMessageId","lastMessageId","cachedCsrfToken","isVariableSystemEnabled","handleMessageReceived","handleMessageSwiped","handleChatChanged","chatFileName","handleMessageDeleted","deletedMessageId","handleChatDeleted","csrfToken","token","getCsrfToken","encodeURIComponent","deletedCount","EXTENSION_SETTINGS_KEY","currentScope","initFunctionLibrary","extension_settings","loadFunctionsFromStorage","initBuiltinFunctions","$","on","loadFunctionList","openFunctionEditor","$input","file","files","version","imported","newFunc","generateFunctionId","saveFunctions","trigger","importFunctions","exportData","blob","Blob","URL","createObjectURL","$a","attr","click","revokeObjectURL","exportFunctions","prompt","description","example","inferExampleFromPattern","template","html","$dialog","find","navigator","clipboard","writeText","callGenericPopup","POPUP_TYPE","DISPLAY","wide","generatePrompt","listContainer","empty","card","createFunctionCard","append","sortable","items","handle","cursor","tolerance","placeholder","stop","$cards","newOrder","each","functionId","reordered","item","handleDragStop","setupDraggable","$card","prop","checked","$badge","removeClass","addClass","timingText","confirmation","CONFIRM","okButton","cancelButton","POPUP_RESULT","AFFIRMATIVE","$editor","val","updateFieldsVisibility","show","hide","functionData","assign","saveSettingsDebounced","writeExtensionField","_pattern","funcName","replace","c","r","editorController","snapshotState","currentFloor","currentSwipeId","currentSnapshotId","draftBody","dirty","hasErrors","initMessageSnapshots","floorNumber","loadFloorSnapshot","hasSnapshot","st_var_system_snapshot_id","checkFloorHasSnapshot","info","tags","INPUT","rows","tagArray","split","map","t","saveAsGlobalSnapshot","exportSnapshot","importSnapshot","stripped","stripMvuMetadata","stripSchemaFromMessageSnapshot","$select","hasSnapshots","$option","loadFloorList","messageTime","send_date","toLocaleString","_previousContent","hasContent","hasJson","jsonType","hasContentErrors","initializeEditor","obj","isObject","isDate","key","startsWith","retryCount","initReprocessButton","setTimeout","off","handleReprocessClick","updateButtonVisibility","lastAiMessageIndex","saveChat","hasChat","handleCleanupSnapshots","updateCleanupProgress","activeChatFiles","chatFiles","characterName","chats","getAllChatFiles","errorText","cleanupOrphanedSnapshots","totalScanned","deletedChatFiles","detailsText","join","showCleanupResult","percentage","css","TEMPLATE_EXTENSION_KEY","TEMPLATE_STATUS_ID","templateState","currentCharacterId","loading","JSON_EDITOR_VERSION","JSON_EDITOR_STYLE_URL","JSON_EDITOR_SCRIPT_URL","templateButtons","pendingTemplateRefresh","STATUS_COLORS","bindTemplateSection","rootElement","save","saveAsGlobal","discard","reload","enableToggle","updateTemplateStatus","controller","ensureEditorInstance","updateTemplateControls","cloneJSON","saveCurrentTemplate","TEXT","defaultName","snapshotName","snapshotBody","callPluginAPI","loadGlobalSnapshots","errorMsg","saveTemplateAsGlobalSnapshot","discardTemplateChanges","refreshTemplateForActiveCharacter","confirmationMessage","confirm","defaultTemplate","clearTemplateForActiveCharacter","nextEnabled","updateEnableToggleUI","previousValue","setEnabledForActiveCharacter","exportBtn","importBtn","stripSchemaBtn","toISOString","filename","exportJSONToFile","exportTemplate","importJSONFromFile","normalizeSnapshotBody","importTemplate","stripMvuSchema","stripSchemaFromTemplate","level","element","hasTemplate","disableAll","disabled","shouldDisable","scheduleTemplateRefresh","force","clearTimeout","handleEditorChange","activeCharacterId","extensionData","loadedBody","onContextChanged","animateDrawer","shouldOpen","editor","EDITOR","slideToggle","getSlideToggleOptions","onAnimationEnd","el","closest","classList","add","$el","slideDown","slideUp","closeDrawer","$icon","$content","hasClass","toggleClass","currentTab","switchTab","tabName","querySelectorAll","forEach","btn","tab","borderBottomColor","PLUGIN_BASE_URL","snapshotsState","snapshots","filteredSnapshots","searchQuery","selectedTag","viewMode","editingSnapshotId","draftSnapshot","snapshotButtons","snapshotEditorButtons","download","input","accept","onchange","stripSchema","endpoint","finalHeaders","switchSnapshotView","listView","editorView","ensureSnapshotEditorInstance","updateSnapshotEditorStatus","statusElement","updateSnapshotsListUI","applySnapshotFilters","renderSnapshotsList","tagFilter","allTags","Set","tag","sortedTags","option","updateTagFilterOptions","errorMessage","filtered","query","toLowerCase","s","emptyState","className","cssText","borderColor","boxShadow","title","desc","tagsContainer","tagSpan","meta","createdDate","createdAt","actions","buttons","icon","action","normalizedBody","editSnapshot","loadSnapshotToCharacter","confirmed","deleteSnapshot","danger","btnDef","dangerStyle","createSnapshotCard","insertBefore","cancelSnapshotEditor","nameChanged","descChanged","bindSnapshotsSection","search","newBtn","refreshBtn","back","cancel","export","createNewSnapshot","tagsInput","saveCurrentSnapshot","exportGlobalSnapshot","importGlobalSnapshot","stripSchemaFromGlobalSnapshot","bindSettingsSection","settingsContainer","settingsHtml","res","initSettings","injectAppHeaderEntry","$drawer","needsInjection","templateHtml","renderExtensionTemplateAsync","$anchor","not","$otherIcon","$otherContent","first","openDrawer","bindTabSwitching","functionsContainer","functionLibraryHtml","bindFunctionsSection","messagesContainer","messageSnapshotsHtml","bindMessagesSection","initExtension","eventSource","event_types","CHAT_CHANGED","CHARACTER_EDITOR_OPENED","MESSAGE_RECEIVED","MESSAGE_SWIPED","MESSAGE_DELETED","CHAT_DELETED","STVarSystemExtension","init","exit","removeListener"],"ignoreList":[],"sources":["../src/editor/variableBlockEditor.ts","../src/logger.ts","../src/functions/executor.ts","../src/functions/registry.ts","../src/snapshots/messageUtils.ts","../src/snapshots/snapshotIdentifier.ts","../src/events/variableInjector.ts","../src/events/processor.ts","../src/snapshots/snapshotResolver.ts","../src/events/listeners.ts","../src/ui/functionLibrary.ts","../src/ui/messageSnapshots.ts","../src/ui/reprocessButton.ts","../src/ui/settings.ts","../src/index.ts"],"sourcesContent":["const stylePromises = new Map();\r\nconst modulePromises = new Map();\r\nconst assetFailures = new Map();\r\n\r\nexport function createVariableBlockEditor(options = {}) {\r\n  const {\r\n    container,\r\n    containerId,\r\n    initialValue,\r\n    styleUrl,\r\n    scriptUrl,\r\n    readOnly = false,\r\n    onChange,\r\n    onFallback,\r\n    onReady,\r\n    defaultMode = null, // 新增：默认模式（'tree', 'text', 'table'）\r\n  } = options;\r\n\r\n  let targetContainer = resolveContainer(container, containerId);\r\n  let editorInstance = null;\r\n  let fallbackInstance = null;\r\n  let mounted = false;\r\n  let currentValue = cloneValue(initialValue ?? {});\r\n  let pendingValue = null;\r\n  let silentUpdate = false;\r\n\r\n  function resolveContainer(containerOrElement, id) {\r\n    if (containerOrElement instanceof HTMLElement) {\r\n      return containerOrElement;\r\n    }\r\n    if (typeof containerOrElement === \"string\") {\r\n      return document.getElementById(containerOrElement);\r\n    }\r\n    if (typeof id === \"string\") {\r\n      return document.getElementById(id);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function cloneValue(value) {\r\n    if (value == null) {\r\n      return value;\r\n    }\r\n    if (typeof structuredClone === \"function\") {\r\n      try {\r\n        return structuredClone(value);\r\n      } catch (_error) {\r\n        return JSON.parse(JSON.stringify(value));\r\n      }\r\n    }\r\n    return JSON.parse(JSON.stringify(value));\r\n  }\r\n\r\n  async function ensureReady() {\r\n    if (editorInstance) {\r\n      return editorInstance;\r\n    }\r\n\r\n    targetContainer =\r\n      targetContainer || resolveContainer(container, containerId);\r\n\r\n    if (!targetContainer) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      await ensureStyle(styleUrl);\r\n      const moduleExports = await ensureModule(scriptUrl);\r\n      const createJSONEditor =\r\n        moduleExports?.createJSONEditor ?? globalThis.createJSONEditor;\r\n\r\n      if (typeof createJSONEditor !== \"function\") {\r\n        throw new Error(\"JSON 编辑器模块未提供 createJSONEditor\");\r\n      }\r\n\r\n      // 从 localStorage 读取用户偏好的模式，或使用传入的默认模式\r\n      const savedMode = localStorage.getItem(\"varSystemEditorMode\");\r\n      const initialMode = savedMode || defaultMode || \"text\";\r\n\r\n      editorInstance = createJSONEditor({\r\n        target: targetContainer,\r\n        props: {\r\n          content: { json: currentValue ?? {} },\r\n          mode: initialMode, // 使用保存的或默认的模式\r\n          mainMenuBar: true, // 保留主菜单（格式化、压缩等功能）\r\n          navigationBar: false, // 隐藏导航栏（节省空间）\r\n          statusBar: false, // 隐藏状态栏（节省空间）\r\n          readOnly,\r\n          onChange: (content, previousContent, metadata) => {\r\n            if (silentUpdate) {\r\n              return;\r\n            }\r\n            currentValue = cloneValue(content?.json ?? currentValue ?? {});\r\n            if (typeof onChange === \"function\") {\r\n              onChange(content, previousContent, metadata);\r\n            }\r\n          },\r\n        },\r\n      });\r\n\r\n      mounted = true;\r\n\r\n      if (!editorInstance || typeof editorInstance.set !== \"function\") {\r\n        throw new Error(\"JSON 编辑器实例缺少 set 方法\");\r\n      }\r\n\r\n      editorInstance.isFallback = false;\r\n\r\n      if (pendingValue !== null) {\r\n        setValue(pendingValue, { silent: true });\r\n        pendingValue = null;\r\n      }\r\n\r\n      if (typeof onReady === \"function\") {\r\n        onReady(editorInstance);\r\n      }\r\n\r\n      return editorInstance;\r\n    } catch (error) {\r\n      console.error(\"[VariableBlockEditor] 初始化 JSON 编辑器失败\", error);\r\n      return ensureFallback();\r\n    }\r\n  }\r\n\r\n  function ensureFallback() {\r\n    targetContainer =\r\n      targetContainer || resolveContainer(container, containerId);\r\n    if (!targetContainer) {\r\n      return null;\r\n    }\r\n\r\n    if (fallbackInstance) {\r\n      return fallbackInstance;\r\n    }\r\n\r\n    targetContainer.innerHTML = \"\";\r\n    targetContainer.style.display = \"flex\";\r\n    targetContainer.style.flexDirection = \"column\";\r\n    targetContainer.style.alignItems = \"stretch\";\r\n\r\n    const notice = document.createElement(\"div\");\r\n    notice.style.fontSize = \"12px\";\r\n    notice.style.padding = \"6px\";\r\n    notice.style.background = \"rgba(255, 255, 255, 0.05)\";\r\n    notice.style.borderBottom = \"1px solid var(--SmartThemeBorderColor, #333)\";\r\n    notice.textContent = \"JSON 编辑器资源加载失败，已降级为纯文本模式。\";\r\n\r\n    const textarea = document.createElement(\"textarea\");\r\n    textarea.style.width = \"100%\";\r\n    textarea.style.height = \"calc(100% - 32px)\";\r\n    textarea.style.minHeight = \"220px\";\r\n    textarea.style.background = \"transparent\";\r\n    textarea.style.color = \"inherit\";\r\n    textarea.style.border = \"none\";\r\n    textarea.style.padding = \"10px\";\r\n    textarea.style.resize = \"vertical\";\r\n    textarea.style.fontFamily = \"var(--monospaceFont, monospace)\";\r\n    textarea.style.fontSize = \"13px\";\r\n    textarea.style.lineHeight = \"1.4\";\r\n    textarea.style.borderRadius = \"0\";\r\n    textarea.readOnly = Boolean(readOnly);\r\n\r\n    targetContainer.appendChild(notice);\r\n    targetContainer.appendChild(textarea);\r\n\r\n    const handleInput = () => {\r\n      if (silentUpdate) {\r\n        return;\r\n      }\r\n\r\n      let parsed;\r\n      const contentErrors = [];\r\n\r\n      if (textarea.value.trim().length === 0) {\r\n        parsed = {};\r\n      } else {\r\n        try {\r\n          parsed = JSON.parse(textarea.value);\r\n        } catch (error) {\r\n          contentErrors.push({ message: error?.message ?? String(error) });\r\n        }\r\n      }\r\n\r\n      const content =\r\n        contentErrors.length > 0 ? { json: undefined } : { json: parsed };\r\n\r\n      currentValue = cloneValue(content?.json ?? currentValue ?? {});\r\n\r\n      if (typeof onChange === \"function\") {\r\n        onChange(content, null, { contentErrors });\r\n      }\r\n    };\r\n\r\n    textarea.addEventListener(\"input\", handleInput);\r\n\r\n    fallbackInstance = {\r\n      isFallback: true,\r\n      set({ json }) {\r\n        silentUpdate = true;\r\n        try {\r\n          const value = json === undefined || json === null ? {} : json;\r\n          textarea.value = JSON.stringify(value, null, 2);\r\n        } catch (_error) {\r\n          textarea.value = \"{}\";\r\n        }\r\n        silentUpdate = false;\r\n      },\r\n      get() {\r\n        try {\r\n          const json = textarea.value.trim().length\r\n            ? JSON.parse(textarea.value)\r\n            : {};\r\n          return { json };\r\n        } catch (_error) {\r\n          return { json: undefined };\r\n        }\r\n      },\r\n      destroy() {\r\n        textarea.removeEventListener(\"input\", handleInput);\r\n        targetContainer.innerHTML = \"\";\r\n      },\r\n    };\r\n\r\n    editorInstance = fallbackInstance;\r\n    mounted = true;\r\n\r\n    const initial = pendingValue !== null ? pendingValue : (currentValue ?? {});\r\n    fallbackInstance.set({ json: initial });\r\n    pendingValue = null;\r\n\r\n    if (typeof onFallback === \"function\") {\r\n      onFallback();\r\n    }\r\n\r\n    return fallbackInstance;\r\n  }\r\n\r\n  function setValue(value, { silent = false } = {}) {\r\n    const normalized = value === undefined || value === null ? {} : value;\r\n    currentValue = cloneValue(normalized);\r\n\r\n    if (!mounted || !editorInstance) {\r\n      pendingValue = cloneValue(normalized);\r\n      return;\r\n    }\r\n\r\n    if (silent) {\r\n      silentUpdate = true;\r\n    }\r\n\r\n    try {\r\n      editorInstance.set({ json: cloneValue(normalized) });\r\n    } catch (error) {\r\n      console.error(\"[VariableBlockEditor] 设置编辑内容失败\", error);\r\n    }\r\n\r\n    if (silent) {\r\n      silentUpdate = false;\r\n    }\r\n  }\r\n\r\n  function getValue() {\r\n    if (!editorInstance) {\r\n      return cloneValue(currentValue ?? {});\r\n    }\r\n\r\n    try {\r\n      const content = editorInstance.get();\r\n      if (content?.json !== undefined) {\r\n        return cloneValue(content.json);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"[VariableBlockEditor] 读取编辑内容失败\", error);\r\n    }\r\n\r\n    return cloneValue(currentValue ?? {});\r\n  }\r\n\r\n  function destroy() {\r\n    if (!mounted) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      editorInstance?.destroy?.();\r\n    } catch (error) {\r\n      console.error(\"[VariableBlockEditor] 销毁编辑器失败\", error);\r\n    }\r\n\r\n    editorInstance = null;\r\n    fallbackInstance = null;\r\n    mounted = false;\r\n    targetContainer = null;\r\n  }\r\n\r\n  function isFallback() {\r\n    return Boolean(fallbackInstance);\r\n  }\r\n\r\n  function setContainer(nextContainer) {\r\n    targetContainer = resolveContainer(nextContainer, containerId);\r\n  }\r\n\r\n  // 代理方法：直接调用底层编辑器实例的 set/get（如果已初始化）\r\n  function set(content) {\r\n    if (editorInstance && typeof editorInstance.set === \"function\") {\r\n      return editorInstance.set(content);\r\n    }\r\n    // 如果还没初始化，通过 setValue 缓存\r\n    if (content?.json !== undefined) {\r\n      setValue(content.json);\r\n    }\r\n  }\r\n\r\n  function get() {\r\n    if (editorInstance && typeof editorInstance.get === \"function\") {\r\n      return editorInstance.get();\r\n    }\r\n    // 降级：返回当前值\r\n    return { json: cloneValue(currentValue ?? {}) };\r\n  }\r\n\r\n  /**\r\n   * 切换编辑器模式\r\n   * @param {string} mode - 'tree', 'text', 或 'table'\r\n   */\r\n  function setMode(mode) {\r\n    if (!editorInstance || typeof editorInstance.updateProps !== \"function\") {\r\n      console.warn(\"[VariableBlockEditor] 编辑器未初始化或不支持 updateProps\");\r\n      return;\r\n    }\r\n\r\n    // 保存用户偏好到 localStorage\r\n    localStorage.setItem(\"varSystemEditorMode\", mode);\r\n\r\n    // 更新编辑器模式\r\n    editorInstance.updateProps({ mode });\r\n  }\r\n\r\n  /**\r\n   * 获取当前编辑器模式\r\n   * @returns {string|null}\r\n   */\r\n  function getMode() {\r\n    return localStorage.getItem(\"varSystemEditorMode\");\r\n  }\r\n\r\n  return {\r\n    ensureReady,\r\n    setValue,\r\n    getValue,\r\n    set, // 新增：代理底层实例的 set 方法\r\n    get, // 新增：代理底层实例的 get 方法\r\n    setMode, // 新增：切换编辑器模式\r\n    getMode, // 新增：获取当前模式\r\n    destroy,\r\n    isFallback,\r\n    setContainer,\r\n  };\r\n}\r\n\r\nfunction ensureStyle(url) {\r\n  if (!url) {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  if (stylePromises.has(url)) {\r\n    return stylePromises.get(url);\r\n  }\r\n\r\n  const existing = document.querySelector(\r\n    `link[data-jsoneditor-style=\"${CSS.escape(url)}\"]`,\r\n  );\r\n  if (existing) {\r\n    stylePromises.set(url, Promise.resolve());\r\n    return stylePromises.get(url);\r\n  }\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"stylesheet\";\r\n    link.href = url;\r\n    link.dataset.jsoneditorStyle = url;\r\n    link.addEventListener(\"load\", () => resolve());\r\n    link.addEventListener(\"error\", (event) => {\r\n      link.remove();\r\n      stylePromises.delete(url);\r\n      reject(event);\r\n    });\r\n    document.head.appendChild(link);\r\n  });\r\n\r\n  stylePromises.set(url, promise);\r\n  return promise;\r\n}\r\n\r\nfunction ensureModule(url) {\r\n  if (!url) {\r\n    return Promise.resolve({ createJSONEditor: globalThis.createJSONEditor });\r\n  }\r\n\r\n  if (assetFailures.get(url)) {\r\n    return Promise.reject(new Error(\"JSON 编辑器模块加载已失败\"));\r\n  }\r\n\r\n  if (modulePromises.has(url)) {\r\n    return modulePromises.get(url);\r\n  }\r\n\r\n  const promise = import(/* webpackIgnore: true */ /* @vite-ignore */ url)\r\n    .then((module) => {\r\n      if (!module?.createJSONEditor && !globalThis.createJSONEditor) {\r\n        throw new Error(\"JSON 编辑器模块未提供 createJSONEditor\");\r\n      }\r\n      return module;\r\n    })\r\n    .catch((error) => {\r\n      modulePromises.delete(url);\r\n      assetFailures.set(url, true);\r\n      throw error;\r\n    });\r\n\r\n  modulePromises.set(url, promise);\r\n  return promise;\r\n}\r\n","/**\n * @file logger.js\n * @description 日志工具模块\n * 提供统一的日志输出接口，带有扩展前缀\n */\n\nconst PREFIX = '[ST-VarSystemExtension]';\n\n/**\n * 输出普通日志\n * @param {...any} args - 要输出的内容\n */\nexport const log = (...args) => console.log(PREFIX, ...args);\n\n/**\n * 输出警告日志\n * @param {...any} args - 要输出的内容\n */\nexport const warn = (...args) => console.warn(PREFIX, ...args);\n\n/**\n * 输出错误日志\n * @param {...any} args - 要输出的内容\n */\nexport const error = (...args) => console.error(PREFIX, ...args);\n","/**\r\n * 函数执行引擎 - 执行函数调用，生成新快照\r\n */\r\n\r\nimport { error, log, warn } from \"../logger\";\r\n\r\nconst EXTENSION_LOG_PREFIX = \"[ST-VarSystemExtension]\";\r\n\r\n/**\r\n * 执行上下文\r\n * @typedef {Object} ExecutionContext\r\n * @property {number} messageId - 当前消息 ID\r\n * @property {string} messageContent - 当前消息内容\r\n * @property {string} characterName - 角色名称\r\n * @property {string} chatFile - 聊天文件名\r\n * @property {number} timestamp - 时间戳\r\n */\r\n\r\n/**\r\n * 执行结果\r\n * @typedef {Object} ExecutionResult\r\n * @property {any} snapshot - 最终快照\r\n * @property {Array<{functionName: string, error: string}>} errors - 执行错误列表\r\n */\r\n\r\n/**\r\n * 函数执行引擎类\r\n */\r\nexport class FunctionExecutor {\r\n  constructor() {\r\n    // 沙箱环境中可用的安全工具函数\r\n    this.safeGlobals = {\r\n      // Lodash (假设已全局可用)\r\n      _: window._,\r\n\r\n      // 基础 JavaScript 对象\r\n      Object,\r\n      Array,\r\n      String,\r\n      Number,\r\n      Boolean,\r\n      Math,\r\n      Date,\r\n      JSON,\r\n\r\n      // 常用工具函数\r\n      parseInt,\r\n      parseFloat,\r\n      isNaN,\r\n      isFinite,\r\n\r\n      // 日志函数（仅 console.log，不允许 eval/Function）\r\n      console: {\r\n        log: console.log.bind(console),\r\n        warn: console.warn.bind(console),\r\n        error: console.error.bind(console),\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 编译函数执行器代码\r\n   * @param {string} executorCode - 函数代码字符串\r\n   * @returns {Function|null}\r\n   */\r\n  compileExecutor(executorCode) {\r\n    try {\r\n      // 构建参数列表\r\n      const params = [\r\n        \"snapshot\",\r\n        \"args\",\r\n        \"context\",\r\n        ...Object.keys(this.safeGlobals),\r\n      ];\r\n\r\n      // 使用 Function 构造器创建函数（相对安全，不会访问外部作用域）\r\n      const func = new Function(...params, executorCode);\r\n\r\n      return func;\r\n    } catch (e) {\r\n      error(`${EXTENSION_LOG_PREFIX} 编译函数失败:`, e);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行单个函数\r\n   * @param {import('./registry.js').FunctionDefinition} functionDef - 函数定义\r\n   * @param {any} snapshot - 输入快照\r\n   * @param {Array<string>} args - 参数（主动函数）\r\n   * @param {ExecutionContext} context - 执行上下文\r\n   * @returns {{success: boolean, snapshot: any, error?: string}}\r\n   */\r\n  executeFunction(functionDef, snapshot, args = [], context = {}) {\r\n    try {\r\n      // 编译函数\r\n      const executor = this.compileExecutor(functionDef.executor);\r\n      if (!executor) {\r\n        return {\r\n          success: false,\r\n          snapshot,\r\n          error: \"函数编译失败\",\r\n        };\r\n      }\r\n\r\n      // 深拷贝快照，避免函数执行失败时污染原快照\r\n      const snapshotCopy = JSON.parse(JSON.stringify(snapshot));\r\n\r\n      // 准备参数\r\n      const funcParams = [\r\n        snapshotCopy,\r\n        args,\r\n        context,\r\n        ...Object.values(this.safeGlobals),\r\n      ];\r\n\r\n      // 执行函数\r\n      const result = executor(...funcParams);\r\n\r\n      // 函数应该返回修改后的快照\r\n      if (result === undefined || result === null) {\r\n        warn(\r\n          `${EXTENSION_LOG_PREFIX} 函数 ${functionDef.name} 未返回快照，使用原快照`,\r\n        );\r\n        return {\r\n          success: true,\r\n          snapshot: snapshotCopy,\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        snapshot: result,\r\n      };\r\n    } catch (e) {\r\n      error(`${EXTENSION_LOG_PREFIX} 执行函数 ${functionDef.name} 失败:`, e);\r\n      return {\r\n        success: false,\r\n        snapshot,\r\n        error: e.message || String(e),\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行完整的函数处理流程\r\n   * @param {any} inputSnapshot - 输入快照（上一层 AI 消息的快照或角色模板）\r\n   * @param {Array<import('./registry.js').ParsedFunctionCall>} activeCalls - 主动函数调用列表\r\n   * @param {{before: Array, after: Array}} passiveFunctions - 被动函数列表\r\n   * @param {ExecutionContext} context - 执行上下文\r\n   * @returns {ExecutionResult}\r\n   */\r\n  executeAll(inputSnapshot, activeCalls, passiveFunctions, context) {\r\n    let currentSnapshot = JSON.parse(JSON.stringify(inputSnapshot));\r\n    const errors = [];\r\n\r\n    // 1. 执行前置被动函数\r\n    log(\r\n      `${EXTENSION_LOG_PREFIX} 执行 ${passiveFunctions.before.length} 个前置被动函数`,\r\n    );\r\n    for (const func of passiveFunctions.before) {\r\n      const result = this.executeFunction(func, currentSnapshot, [], context);\r\n      if (result.success) {\r\n        currentSnapshot = result.snapshot;\r\n      } else {\r\n        errors.push({\r\n          functionName: func.name,\r\n          error: result.error || \"未知错误\",\r\n        });\r\n      }\r\n    }\r\n\r\n    // 2. 执行主动函数调用\r\n    log(`${EXTENSION_LOG_PREFIX} 执行 ${activeCalls.length} 个主动函数调用`);\r\n    for (const call of activeCalls) {\r\n      const result = this.executeFunction(\r\n        call.functionDef,\r\n        currentSnapshot,\r\n        call.args,\r\n        context,\r\n      );\r\n      if (result.success) {\r\n        currentSnapshot = result.snapshot;\r\n      } else {\r\n        errors.push({\r\n          functionName: call.functionDef.name,\r\n          error: result.error || \"未知错误\",\r\n        });\r\n      }\r\n    }\r\n\r\n    // 3. 执行后置被动函数\r\n    log(\r\n      `${EXTENSION_LOG_PREFIX} 执行 ${passiveFunctions.after.length} 个后置被动函数`,\r\n    );\r\n    for (const func of passiveFunctions.after) {\r\n      const result = this.executeFunction(func, currentSnapshot, [], context);\r\n      if (result.success) {\r\n        currentSnapshot = result.snapshot;\r\n      } else {\r\n        errors.push({\r\n          functionName: func.name,\r\n          error: result.error || \"未知错误\",\r\n        });\r\n      }\r\n    }\r\n\r\n    // 报告错误\r\n    if (errors.length > 0) {\r\n      warn(\r\n        `${EXTENSION_LOG_PREFIX} 有 ${errors.length} 个函数调用失败:`,\r\n        errors,\r\n      );\r\n\r\n      // 使用 toastr 通知用户（如果可用）\r\n      if (window.toastr) {\r\n        window.toastr.warning(\r\n          `本次解析有 ${errors.length} 个函数调用失败，请检查控制台日志`,\r\n          \"变量系统\",\r\n        );\r\n      }\r\n    }\r\n\r\n    return {\r\n      snapshot: currentSnapshot,\r\n      errors,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * 全局单例实例\r\n */\r\nexport const functionExecutor = new FunctionExecutor();\r\n\r\n/**\r\n * 执行函数调用流程的简化接口\r\n * @param {Array<{functionDef, args, index, fullMatch}>} activeCalls - 主动函数调用列表\r\n * @param {any} inputSnapshot - 输入快照\r\n * @returns {Promise<any>} 处理后的快照\r\n */\r\nexport async function executeFunctionPipeline(activeCalls, inputSnapshot) {\r\n  // 动态导入 functionRegistry 以获取被动函数\r\n  const { functionRegistry } = await import('./registry.js');\r\n\r\n  // 获取被动函数列表\r\n  const passiveFunctions = functionRegistry.getPassiveFunctions();\r\n\r\n  // 构建执行上下文（基本信息）\r\n  const context = {\r\n    timestamp: Date.now(),\r\n  };\r\n\r\n  // 执行完整流程\r\n  const result = functionExecutor.executeAll(\r\n    inputSnapshot,\r\n    activeCalls,\r\n    passiveFunctions,\r\n    context\r\n  );\r\n\r\n  // 返回最终快照\r\n  return result.snapshot;\r\n}\r\n","/**\r\n * 函数注册表 - 管理全局和本地函数库\r\n *\r\n * 全局函数：存储在 extension_settings.st_var_system.functions (所有角色共享)\r\n * 本地函数：存储在 character.data.extensions.st_var_system.functions (角色专属)\r\n */\r\n\r\nimport { error, log, warn } from \"../logger\";\r\n\r\nconst EXTENSION_LOG_PREFIX = \"[ST-VarSystemExtension]\";\r\n\r\n/**\r\n * 函数定义接口\r\n * @typedef {Object} FunctionDefinition\r\n * @property {string} id - 唯一标识符(UUID)\r\n * @property {string} name - 函数名称(用户可读)\r\n * @property {'active'|'passive'} type - 主动函数(AI调用) | 被动函数(自动执行)\r\n * @property {boolean} enabled - 是否启用\r\n * @property {number} order - 执行顺序(数字越小越先执行)\r\n * @property {string} description - 说明文本(用于生成提示词)\r\n * @property {boolean} [builtin] - 是否为内置函数（内置函数不可编辑/删除）\r\n * @property {string} [pattern] - 正则表达式(主动函数必需)\r\n * @property {'before_active'|'after_active'} [timing] - 执行时机(被动函数必需)\r\n * @property {string} executor - 函数代码字符串\r\n */\r\n\r\n/**\r\n * 解析后的函数调用\r\n * @typedef {Object} ParsedFunctionCall\r\n * @property {FunctionDefinition} functionDef - 函数定义\r\n * @property {Array<string>} args - 参数数组\r\n * @property {number} index - 在原文中的位置\r\n * @property {string} fullMatch - 完整匹配文本\r\n */\r\n\r\n/**\r\n * 函数注册表类\r\n */\r\nexport class FunctionRegistry {\r\n  constructor() {\r\n    /** @type {Map<string, FunctionDefinition>} */\r\n    this.globalFunctions = new Map();\r\n\r\n    /** @type {Map<string, FunctionDefinition>} */\r\n    this.localFunctions = new Map();\r\n  }\r\n\r\n  /**\r\n   * 加载全局函数库\r\n   * @param {Array<FunctionDefinition>} functions\r\n   */\r\n  loadGlobalFunctions(functions) {\r\n    this.globalFunctions.clear();\r\n\r\n    if (!Array.isArray(functions)) {\r\n      warn(`${EXTENSION_LOG_PREFIX} 全局函数库格式错误，应为数组`);\r\n      return;\r\n    }\r\n\r\n    for (const func of functions) {\r\n      if (this.validateFunction(func)) {\r\n        this.globalFunctions.set(func.id, func);\r\n      } else {\r\n        warn(`${EXTENSION_LOG_PREFIX} 跳过无效的全局函数:`, func);\r\n      }\r\n    }\r\n\r\n    log(\r\n      `${EXTENSION_LOG_PREFIX} 已加载 ${this.globalFunctions.size} 个全局函数`,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 加载本地函数库（角色专属）\r\n   * @param {Array<FunctionDefinition>} functions\r\n   */\r\n  loadLocalFunctions(functions) {\r\n    this.localFunctions.clear();\r\n\r\n    if (!Array.isArray(functions)) {\r\n      // 本地函数库可选，不存在不报警告\r\n      return;\r\n    }\r\n\r\n    for (const func of functions) {\r\n      if (this.validateFunction(func)) {\r\n        this.localFunctions.set(func.id, func);\r\n      } else {\r\n        warn(`${EXTENSION_LOG_PREFIX} 跳过无效的本地函数:`, func);\r\n      }\r\n    }\r\n\r\n    log(\r\n      `${EXTENSION_LOG_PREFIX} 已加载 ${this.localFunctions.size} 个本地函数`,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 验证函数定义\r\n   * @param {any} func\r\n   * @returns {boolean}\r\n   */\r\n  validateFunction(func) {\r\n    if (!func || typeof func !== \"object\") {\r\n      return false;\r\n    }\r\n\r\n    // 必需字段\r\n    if (!func.id || typeof func.id !== \"string\") {\r\n      return false;\r\n    }\r\n    if (!func.name || typeof func.name !== \"string\") {\r\n      return false;\r\n    }\r\n    if (![\"active\", \"passive\"].includes(func.type)) {\r\n      return false;\r\n    }\r\n    if (typeof func.enabled !== \"boolean\") {\r\n      return false;\r\n    }\r\n    if (typeof func.order !== \"number\") {\r\n      return false;\r\n    }\r\n    if (!func.executor || typeof func.executor !== \"string\") {\r\n      return false;\r\n    }\r\n\r\n    // 类型特定字段\r\n    if (func.type === \"active\") {\r\n      if (!func.pattern || typeof func.pattern !== \"string\") {\r\n        return false;\r\n      }\r\n      // 验证正则表达式是否有效\r\n      try {\r\n        new RegExp(func.pattern);\r\n      } catch (e) {\r\n        error(`${EXTENSION_LOG_PREFIX} 函数 ${func.name} 的正则表达式无效:`, e);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (func.type === \"passive\") {\r\n      if (![\"before_active\", \"after_active\"].includes(func.timing)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 获取所有启用的函数（全局 + 本地，本地优先）\r\n   * @returns {Array<FunctionDefinition>}\r\n   */\r\n  getEnabledFunctions() {\r\n    const allFunctions = new Map();\r\n\r\n    // 先加载全局函数\r\n    for (const [id, func] of this.globalFunctions) {\r\n      if (func.enabled) {\r\n        allFunctions.set(id, func);\r\n      }\r\n    }\r\n\r\n    // 本地函数覆盖同名全局函数\r\n    for (const [id, func] of this.localFunctions) {\r\n      if (func.enabled) {\r\n        allFunctions.set(id, func);\r\n      }\r\n    }\r\n\r\n    return Array.from(allFunctions.values());\r\n  }\r\n\r\n  /**\r\n   * 获取启用的主动函数列表\r\n   * @returns {Array<FunctionDefinition>}\r\n   */\r\n  getActiveFunctions() {\r\n    return this.getEnabledFunctions()\r\n      .filter((f) => f.type === \"active\")\r\n      .sort((a, b) => a.order - b.order);\r\n  }\r\n\r\n  /**\r\n   * 获取启用的被动函数列表（按时机分组）\r\n   * @returns {{before: Array<FunctionDefinition>, after: Array<FunctionDefinition>}}\r\n   */\r\n  getPassiveFunctions() {\r\n    const passiveFunctions = this.getEnabledFunctions().filter(\r\n      (f) => f.type === \"passive\",\r\n    );\r\n\r\n    const before = passiveFunctions\r\n      .filter((f) => f.timing === \"before_active\")\r\n      .sort((a, b) => a.order - b.order);\r\n\r\n    const after = passiveFunctions\r\n      .filter((f) => f.timing === \"after_active\")\r\n      .sort((a, b) => a.order - b.order);\r\n\r\n    return { before, after };\r\n  }\r\n\r\n  /**\r\n   * 从 AI 消息文本中解析所有函数调用\r\n   * @param {string} text - AI 消息文本\r\n   * @returns {Array<ParsedFunctionCall>}\r\n   */\r\n  parseFunctionCalls(text) {\r\n    const activeFunctions = this.getActiveFunctions();\r\n    const allMatches = [];\r\n\r\n    // 对每个启用的主动函数执行匹配\r\n    for (const func of activeFunctions) {\r\n      try {\r\n        const regex = new RegExp(func.pattern, \"g\");\r\n        let match = regex.exec(text);\r\n\r\n        while (match !== null) {\r\n          allMatches.push({\r\n            functionDef: func,\r\n            args: match.slice(1), // 捕获组作为参数\r\n            index: match.index,\r\n            fullMatch: match[0],\r\n          });\r\n          match = regex.exec(text);\r\n        }\r\n      } catch (e) {\r\n        error(`${EXTENSION_LOG_PREFIX} 函数 ${func.name} 匹配失败:`, e);\r\n      }\r\n    }\r\n\r\n    // 按位置排序，保证执行顺序\r\n    allMatches.sort((a, b) => a.index - b.index);\r\n\r\n    log(\r\n      `${EXTENSION_LOG_PREFIX} 从消息中解析到 ${allMatches.length} 个函数调用`,\r\n    );\r\n\r\n    return allMatches;\r\n  }\r\n\r\n  /**\r\n   * 根据 ID 获取函数\r\n   * @param {string} id\r\n   * @returns {FunctionDefinition|null}\r\n   */\r\n  getFunction(id) {\r\n    return this.localFunctions.get(id) || this.globalFunctions.get(id) || null;\r\n  }\r\n\r\n  /**\r\n   * 添加或更新函数（到全局库）\r\n   * @param {FunctionDefinition} func\r\n   */\r\n  upsertGlobalFunction(func) {\r\n    if (!this.validateFunction(func)) {\r\n      throw new Error(\"函数定义无效\");\r\n    }\r\n    this.globalFunctions.set(func.id, func);\r\n  }\r\n\r\n  /**\r\n   * 添加或更新函数（到本地库）\r\n   * @param {FunctionDefinition} func\r\n   */\r\n  upsertLocalFunction(func) {\r\n    if (!this.validateFunction(func)) {\r\n      throw new Error(\"函数定义无效\");\r\n    }\r\n    this.localFunctions.set(func.id, func);\r\n  }\r\n\r\n  /**\r\n   * 删除函数\r\n   * @param {string} id\r\n   * @param {'global'|'local'} scope\r\n   */\r\n  deleteFunction(id, scope) {\r\n    if (scope === \"global\") {\r\n      this.globalFunctions.delete(id);\r\n    } else if (scope === \"local\") {\r\n      this.localFunctions.delete(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 导出全局函数库（用于保存到 extension_settings）\r\n   * @returns {Array<FunctionDefinition>}\r\n   */\r\n  exportGlobalFunctions() {\r\n    return Array.from(this.globalFunctions.values());\r\n  }\r\n\r\n  /**\r\n   * 导出本地函数库（用于保存到角色卡）\r\n   * @returns {Array<FunctionDefinition>}\r\n   */\r\n  exportLocalFunctions() {\r\n    return Array.from(this.localFunctions.values());\r\n  }\r\n}\r\n\r\n/**\r\n * 全局单例实例\r\n */\r\nexport const functionRegistry = new FunctionRegistry();\r\n","/**\r\n * 消息相关工具函数\r\n * 用于判断消息类型、获取消息信息等\r\n */\r\n\r\n/**\r\n * 判断消息是否为 AI 消息\r\n * @param {Object} message - 消息对象\r\n * @returns {boolean} 是否为 AI 消息\r\n */\r\nexport function isAIMessage(message) {\r\n  if (!message) {\r\n    return false;\r\n  }\r\n\r\n  // 检查 is_user 字段(SillyTavern 标准字段)\r\n  if (message.is_user === false) {\r\n    return true;\r\n  }\r\n\r\n  // 检查 role 字段(新版 API)\r\n  if (message.role === \"assistant\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * 获取消息的当前 swipe ID\r\n * @param {Object} message - 消息对象\r\n * @returns {number} 当前激活的 swipe ID,默认为 0\r\n */\r\nexport function getCurrentSwipeId(message) {\r\n  if (!message) {\r\n    return 0;\r\n  }\r\n\r\n  // swipe_id 可能是 undefined 或 0\r\n  return message.swipe_id ?? 0;\r\n}\r\n\r\n/**\r\n * 获取消息的内容(当前 swipe 的内容)\r\n * @param {Object} message - 消息对象\r\n * @returns {string} 消息内容\r\n */\r\nexport function getMessageContent(message) {\r\n  if (!message) {\r\n    return \"\";\r\n  }\r\n\r\n  const swipeId = getCurrentSwipeId(message);\r\n\r\n  // 如果有 swipes 数组,从中获取\r\n  if (Array.isArray(message.swipes) && message.swipes[swipeId]) {\r\n    return message.swipes[swipeId];\r\n  }\r\n\r\n  // 否则返回 mes 字段\r\n  return message.mes || \"\";\r\n}\r\n\r\n/**\r\n * 获取消息的层号(在 chat 数组中的索引)\r\n * @param {Object} message - 消息对象\r\n * @param {Array} chat - 聊天记录数组\r\n * @returns {number} 消息层号,找不到返回 -1\r\n */\r\nexport function getMessageId(message, chat) {\r\n  if (!message || !Array.isArray(chat)) {\r\n    return -1;\r\n  }\r\n\r\n  return chat.indexOf(message);\r\n}\r\n\r\n/**\r\n * 判断消息是否为系统消息(隐藏消息)\r\n * @param {Object} message - 消息对象\r\n * @returns {boolean} 是否为系统消息\r\n */\r\nexport function isSystemMessage(message) {\r\n  if (!message) {\r\n    return false;\r\n  }\r\n\r\n  // 检查 is_system 字段\r\n  if (message.is_system === true) {\r\n    return true;\r\n  }\r\n\r\n  // 检查 role 字段\r\n  if (message.role === \"system\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n","/**\r\n * 快照标识符管理模块\r\n * 负责生成、读写、管理消息快照的唯一标识符\r\n */\r\n\r\nimport { getRequestHeaders } from \"@sillytavern/script\";\r\nimport { getCurrentSwipeId } from \"./messageUtils\";\r\n\r\nconst SNAPSHOT_ID_KEY = \"st_var_system_snapshot_id\";\r\n\r\n/**\r\n * 生成快照唯一标识符(UUID v4)\r\n * @returns {string} UUID 格式的唯一标识符\r\n */\r\nexport function generateSnapshotId() {\r\n  // 使用 crypto.randomUUID() (浏览器原生 API)\r\n  // 如果不支持,降级到简单的随机 ID\r\n  if (\r\n    typeof crypto !== \"undefined\" &&\r\n    typeof crypto.randomUUID === \"function\"\r\n  ) {\r\n    return crypto.randomUUID();\r\n  }\r\n\r\n  // 降级方案:生成简单的唯一 ID\r\n  return `${Date.now()}-${Math.random().toString(36).substring(2, 15)}`;\r\n}\r\n\r\n/**\r\n * 从消息获取当前 swipe 的快照标识符\r\n * @param {Object} message - 消息对象\r\n * @returns {string|null} 快照标识符,不存在返回 null\r\n */\r\nexport function getSnapshotId(message) {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n\r\n  const swipeId = getCurrentSwipeId(message);\r\n\r\n  // 检查 swipes_info 数组\r\n  if (!Array.isArray(message.swipes_info)) {\r\n    return null;\r\n  }\r\n\r\n  const swipeInfo = message.swipes_info[swipeId];\r\n  if (!swipeInfo) {\r\n    return null;\r\n  }\r\n\r\n  // 获取标识符\r\n  const identifier = swipeInfo[SNAPSHOT_ID_KEY];\r\n  return typeof identifier === \"string\" ? identifier : null;\r\n}\r\n\r\n/**\r\n * 设置消息的快照标识符\r\n * @param {Object} message - 消息对象\r\n * @param {string} snapshotId - 快照标识符\r\n * @param {number|null} swipeId - swipe ID，null 表示使用当前 swipe\r\n * @returns {boolean} 是否设置成功\r\n */\r\nexport function setSnapshotId(message, snapshotId, swipeId = null) {\r\n  if (!message || typeof snapshotId !== \"string\") {\r\n    return false;\r\n  }\r\n\r\n  // 如果未指定 swipeId，使用消息当前的 swipe_id\r\n  const targetSwipeId = swipeId !== null ? swipeId : getCurrentSwipeId(message);\r\n\r\n  // 确保 swipes_info 数组存在\r\n  if (!Array.isArray(message.swipes_info)) {\r\n    message.swipes_info = [];\r\n  }\r\n\r\n  // 确保当前 swipe 的 info 对象存在\r\n  if (!message.swipes_info[targetSwipeId]) {\r\n    message.swipes_info[targetSwipeId] = {};\r\n  }\r\n\r\n  // 设置标识符\r\n  message.swipes_info[targetSwipeId][SNAPSHOT_ID_KEY] = snapshotId;\r\n  return true;\r\n}\r\n\r\n/**\r\n * 清除消息的快照标识符\r\n * @param {Object} message - 消息对象\r\n * @returns {boolean} 是否清除成功\r\n */\r\nexport function clearSnapshotId(message) {\r\n  if (!message) {\r\n    return false;\r\n  }\r\n\r\n  const swipeId = getCurrentSwipeId(message);\r\n\r\n  // 检查 swipes_info 数组\r\n  if (!Array.isArray(message.swipes_info) || !message.swipes_info[swipeId]) {\r\n    return false;\r\n  }\r\n\r\n  // 删除标识符\r\n  delete message.swipes_info[swipeId][SNAPSHOT_ID_KEY];\r\n  return true;\r\n}\r\n\r\n/**\r\n * 检查消息是否有快照标识符\r\n * @param {Object} message - 消息对象\r\n * @returns {boolean} 是否有标识符\r\n */\r\nexport function hasSnapshotId(message) {\r\n  return getSnapshotId(message) !== null;\r\n}\r\n\r\n/**\r\n * 从插件加载快照\r\n * @param {string} identifier - 快照标识符\r\n * @returns {Promise<Object|null>} 快照记录,失败返回 null\r\n */\r\nexport async function loadSnapshot(identifier) {\r\n  if (!identifier) {\r\n    console.error(\"[ST-VarSystemExtension] loadSnapshot: identifier 为空\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `/api/plugins/var-manager/var-manager/snapshots/${identifier}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n    );\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 404) {\r\n        console.warn(`[ST-VarSystemExtension] 快照不存在: ${identifier}`);\r\n        return null;\r\n      }\r\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    const record = await response.json();\r\n    return record;\r\n  } catch (error) {\r\n    console.error(`[ST-VarSystemExtension] 加载快照失败: ${identifier}`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 保存快照到插件\r\n * @param {Object} params - 快照参数\r\n * @param {string} params.chatFile - 聊天文件名\r\n * @param {number} params.messageId - 消息层号\r\n * @param {Object} params.payload - 快照数据(完整的变量对象)\r\n * @param {string} [params.identifier] - 可选的标识符(不提供则自动生成)\r\n * @returns {Promise<Object|null>} 保存结果,失败返回 null\r\n */\r\nexport async function saveSnapshot(params) {\r\n  const { chatFile, messageId, payload, identifier } = params;\r\n\r\n  if (!chatFile || messageId === undefined || !payload) {\r\n    console.error(\"[ST-VarSystemExtension] saveSnapshot: 缺少必要参数\", params);\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\r\n      \"/api/plugins/var-manager/var-manager/snapshots\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          ...getRequestHeaders(),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          chatFile,\r\n          messageId: String(messageId),\r\n          payload,\r\n          identifier,\r\n        }),\r\n      },\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(\"[ST-VarSystemExtension] 保存快照失败\", params, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 保存快照到插件（便捷包装函数）\r\n *\r\n * 此函数自动获取聊天文件名，并将快照标识符写入消息对象\r\n *\r\n * @param {number} messageId - 消息层号\r\n * @param {number|null} swipeId - swipe ID，null 表示使用当前 swipe\r\n * @param {Object} snapshot - 快照数据（完整的变量对象）\r\n * @returns {Promise<string|null>} 返回快照标识符，失败返回 null\r\n */\r\nexport async function saveSnapshotToPlugin(messageId, swipeId, snapshot) {\r\n  try {\r\n    // 1. 获取上下文和聊天文件名\r\n    const context = window.SillyTavern.getContext();\r\n    const chatFile = context.getCurrentChatId?.() || context.chatId;\r\n\r\n    if (!chatFile) {\r\n      console.warn(\r\n        \"[ST-VarSystemExtension] saveSnapshotToPlugin: 无法获取聊天文件名\",\r\n      );\r\n      return null;\r\n    }\r\n\r\n    const chat = context.chat;\r\n    if (!chat || messageId >= chat.length) {\r\n      console.error(\r\n        \"[ST-VarSystemExtension] saveSnapshotToPlugin: 消息 ID 无效\",\r\n        { messageId, chatLength: chat?.length },\r\n      );\r\n      return null;\r\n    }\r\n\r\n    // 2. 获取消息对象\r\n    const message = chat[messageId];\r\n    if (!message) {\r\n      console.error(\r\n        \"[ST-VarSystemExtension] saveSnapshotToPlugin: 消息不存在\",\r\n        messageId,\r\n      );\r\n      return null;\r\n    }\r\n\r\n    // 3. 生成新的快照标识符\r\n    const identifier = generateSnapshotId();\r\n\r\n    // 4. 保存到插件数据库\r\n    const result = await saveSnapshot({\r\n      chatFile,\r\n      messageId,\r\n      payload: snapshot,\r\n      identifier,\r\n    });\r\n\r\n    if (!result) {\r\n      // 插件不可用或保存失败\r\n      console.warn(\r\n        \"[ST-VarSystemExtension] saveSnapshotToPlugin: 插件保存失败（插件可能不可用）\",\r\n      );\r\n      return null;\r\n    }\r\n\r\n    // 5. 将标识符写入消息对象\r\n    // 如果 swipeId 为 null，setSnapshotId 会自动使用消息的当前 swipe_id\r\n    if (!setSnapshotId(message, identifier, swipeId)) {\r\n      console.error(\r\n        \"[ST-VarSystemExtension] saveSnapshotToPlugin: 写入快照标识符失败\",\r\n        { messageId, swipeId },\r\n      );\r\n      return null;\r\n    }\r\n\r\n    const actualSwipeId =\r\n      swipeId !== null ? swipeId : getCurrentSwipeId(message);\r\n    console.log(\r\n      `[ST-VarSystemExtension] 快照已保存: 消息 #${messageId}, swipe=${actualSwipeId}, ID=${identifier}`,\r\n    );\r\n    return identifier;\r\n  } catch (error) {\r\n    console.error(\"[ST-VarSystemExtension] saveSnapshotToPlugin 失败:\", error);\r\n    return null;\r\n  }\r\n}\r\n","/**\r\n * @file variableInjector.js\r\n * @description 变量注入模块，负责将快照数据注入到聊天变量作用域\r\n *\r\n * **关键设计**：\r\n * - 使用 JS-Slash-Runner (酒馆助手) 提供的 `TavernHelper.updateVariablesWith()` API\r\n * - 注入到 **chat 作用域**（`type: 'chat'`），确保变量是聊天级别而非全局\r\n * - 快照作为 **整体 JSON 对象** 注入到 `vs_stat_data` 变量中\r\n *\r\n * **变量结构**：\r\n * - `vs_stat_data`：完整快照对象（类似 MVU 的 stat_data 和 SAM 的 SAM_data）\r\n *\r\n * **在提示词中使用**：\r\n * ```\r\n * 角色状态：{{vs_stat_data}}\r\n * ```\r\n *\r\n * **与社区方案兼容**：\r\n * - MVU: 使用 `{{stat_data}}` 引用完整 JSON\r\n * - SAM: 使用 `{{SAM_data}}` 引用完整 JSON\r\n * - 本系统: 使用 `{{vs_stat_data}}` 引用完整 JSON\r\n *\r\n * @module events/variableInjector\r\n */\r\n\r\nconst MODULE_NAME = \"[ST-VarSystemExtension/variableInjector]\";\r\n\r\n/**\r\n * 检查 TavernHelper API 是否可用\r\n * @returns {boolean} true 如果 TavernHelper.updateVariablesWith 可用\r\n */\r\nfunction isTavernHelperAvailable() {\r\n  return (\r\n    typeof window !== \"undefined\" &&\r\n    window.TavernHelper &&\r\n    typeof window.TavernHelper.updateVariablesWith === \"function\"\r\n  );\r\n}\r\n\r\n/**\r\n * 将快照数据注入到聊天变量作用域\r\n *\r\n * @param {Object} snapshot - 快照对象，如 { hp: 100, mp: 50, location: \"森林\" }\r\n * @returns {Promise<void>}\r\n *\r\n * @example\r\n * await injectSnapshotVariables({ hp: 100, mp: 50, location: \"森林\" });\r\n * // 提示词中可使用: {{vs_stat_data}}\r\n */\r\nexport async function injectSnapshotVariables(snapshot) {\r\n  if (!snapshot || typeof snapshot !== \"object\") {\r\n    console.warn(MODULE_NAME, \"快照数据无效，跳过注入:\", snapshot);\r\n    return;\r\n  }\r\n\r\n  // 检查酒馆助手 API\r\n  if (!isTavernHelperAvailable()) {\r\n    console.error(\r\n      MODULE_NAME,\r\n      \"酒馆助手 (JS-Slash-Runner) 未安装或 API 不可用。\",\r\n      \"变量系统依赖酒馆助手提供的 updateVariablesWith API。\",\r\n      \"请安装扩展: https://github.com/ShinoKana/JS-Slash-Runner\",\r\n    );\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // 使用 TavernHelper API 注入到 chat 作用域\r\n    await window.TavernHelper.updateVariablesWith(\r\n      (variables) => {\r\n        // 将整个快照作为 vs_stat_data 变量注入\r\n        // 类似 MVU 的 stat_data 和 SAM 的 SAM_data\r\n        variables.vs_stat_data = snapshot;\r\n\r\n        return variables;\r\n      },\r\n      { type: \"chat\" }, // 关键：必须是 chat 作用域，而非 global\r\n    );\r\n\r\n    console.log(MODULE_NAME, \"快照已注入到 vs_stat_data 变量\");\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"注入快照变量时发生错误:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * 获取当前聊天中的快照变量\r\n *\r\n * @returns {Promise<Object|null>} 快照对象，如果不存在则返回 null\r\n */\r\nexport async function getCurrentSnapshotVariables() {\r\n  if (!isTavernHelperAvailable()) {\r\n    console.warn(MODULE_NAME, \"酒馆助手不可用，无法读取变量\");\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const variables = window.TavernHelper.getVariables({ type: \"chat\" });\r\n\r\n    // 直接返回 vs_stat_data\r\n    return variables.vs_stat_data || null;\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"读取快照变量时发生错误:\", error);\r\n    return null;\r\n  }\r\n}\r\n","/**\r\n * @file processor.js\r\n * @description 快照生成核心处理流程\r\n *\r\n * **处理流程**：\r\n * 1. 检查目标消息是否已有快照 → 有则直接注入，无则继续\r\n * 2. 向上查找最近的快照锚点（或角色模板）\r\n * 3. 收集锚点到目标消息之间的所有 AI 消息\r\n * 4. 从每条 AI 消息中解析函数调用\r\n * 5. 按位置顺序执行函数（passive before → active → passive after）\r\n * 6. 生成新快照并保存到插件数据库\r\n * 7. 注入快照变量到聊天作用域\r\n *\r\n * @module events/processor\r\n */\r\n\r\nimport { executeFunctionPipeline } from \"../functions/executor\";\r\nimport { functionRegistry } from \"../functions/registry\";\r\nimport {\r\n  getSnapshotId,\r\n  saveSnapshotToPlugin,\r\n} from \"../snapshots/snapshotIdentifier\";\r\nimport {\r\n  findSnapshotAnchor,\r\n  getAIMessageRange,\r\n} from \"../snapshots/snapshotResolver\";\r\nimport { injectSnapshotVariables } from \"./variableInjector\";\r\n\r\nconst MODULE_NAME = \"[ST-VarSystemExtension/processor]\";\r\n\r\n/**\r\n * 获取角色模板作为初始快照\r\n *\r\n * @returns {Object|null} 角色模板对象，如果不存在或未启用则返回 null\r\n */\r\nfunction getCharacterTemplate() {\r\n  try {\r\n    const context = window.SillyTavern.getContext();\r\n    const character = context.characters[context.characterId];\r\n\r\n    if (!character?.data?.extensions?.st_var_system) {\r\n      console.log(MODULE_NAME, \"角色未配置变量模板\");\r\n      return null;\r\n    }\r\n\r\n    const { enabled, templateBody } = character.data.extensions.st_var_system;\r\n\r\n    if (!enabled) {\r\n      console.log(MODULE_NAME, \"角色变量模板未启用\");\r\n      return null;\r\n    }\r\n\r\n    if (!templateBody || typeof templateBody !== \"object\") {\r\n      console.warn(MODULE_NAME, \"角色模板格式无效:\", templateBody);\r\n      return null;\r\n    }\r\n\r\n    console.log(\r\n      MODULE_NAME,\r\n      \"使用角色模板作为初始快照:\",\r\n      Object.keys(templateBody),\r\n    );\r\n    return structuredClone(templateBody); // 深拷贝，避免修改原始模板\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"读取角色模板时发生错误:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 从插件读取快照内容\r\n *\r\n * @param {string} snapshotId - 快照 UUID\r\n * @returns {Promise<Object|null>} 快照对象，失败则返回 null\r\n */\r\nasync function fetchSnapshotFromPlugin(snapshotId) {\r\n  try {\r\n    const response = await fetch(\r\n      `/api/plugins/var-manager/var-manager/snapshots/${snapshotId}`,\r\n    );\r\n\r\n    if (response.status === 404) {\r\n      console.warn(MODULE_NAME, `快照不存在: ${snapshotId}`);\r\n      return null;\r\n    }\r\n\r\n    if (!response.ok) {\r\n      console.error(\r\n        MODULE_NAME,\r\n        `读取快照失败 (${response.status}): ${snapshotId}`,\r\n      );\r\n      return null;\r\n    }\r\n\r\n    const data = await response.json();\r\n    // 插件返回: { identifier, chatFile, messageId, createdAt, payload }\r\n    return data.payload;\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"从插件读取快照时发生错误:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 检查消息是否已有快照\r\n *\r\n * @param {number} messageId - 消息 ID\r\n * @param {number} swipeId - swipe ID（默认为当前 swipe）\r\n * @returns {Promise<Object|null>} 如果存在快照则返回 { snapshotId, snapshot }，否则返回 null\r\n */\r\nasync function checkExistingSnapshot(messageId, swipeId = null) {\r\n  // 获取消息对象\r\n  const context = window.SillyTavern.getContext();\r\n  const chat = context.chat;\r\n\r\n  if (!chat || messageId >= chat.length) {\r\n    console.error(MODULE_NAME, \"checkExistingSnapshot: 消息 ID 无效\", {\r\n      messageId,\r\n      chatLength: chat?.length,\r\n    });\r\n    return null;\r\n  }\r\n\r\n  const message = chat[messageId];\r\n  if (!message) {\r\n    console.error(MODULE_NAME, \"checkExistingSnapshot: 消息不存在\", messageId);\r\n    return null;\r\n  }\r\n\r\n  // 获取快照标识符\r\n  const snapshotId = getSnapshotId(message);\r\n\r\n  if (!snapshotId) {\r\n    return null;\r\n  }\r\n\r\n  console.log(\r\n    MODULE_NAME,\r\n    `消息 #${messageId} swipe=${swipeId ?? \"current\"} 已有快照: ${snapshotId}`,\r\n  );\r\n\r\n  // 从插件读取完整快照内容\r\n  const snapshot = await fetchSnapshotFromPlugin(snapshotId);\r\n\r\n  if (!snapshot) {\r\n    console.warn(\r\n      MODULE_NAME,\r\n      `快照 ID 存在但无法从插件读取，将重新生成: ${snapshotId}`,\r\n    );\r\n    return null;\r\n  }\r\n\r\n  return { snapshotId, snapshot };\r\n}\r\n\r\n/**\r\n * 处理单条消息，生成快照\r\n *\r\n * **核心逻辑**：\r\n * 1. 检查是否已有快照 → 有则直接注入并返回\r\n * 2. 查找快照锚点（向上查找最近的快照，或使用角色模板）\r\n * 3. 收集锚点到目标消息之间的 AI 消息\r\n * 4. 解析并执行所有函数调用\r\n * 5. 生成新快照，保存到插件，注入到聊天变量\r\n *\r\n * @param {number} targetMessageId - 目标消息 ID\r\n * @param {number} [swipeId=null] - swipe ID，null 表示使用当前 swipe\r\n * @returns {Promise<Object|null>} 生成的快照对象，失败则返回 null\r\n */\r\nexport async function processMessage(targetMessageId, swipeId = null) {\r\n  console.log(\r\n    MODULE_NAME,\r\n    `开始处理消息 #${targetMessageId}, swipe=${swipeId ?? \"current\"}`,\r\n  );\r\n\r\n  // 获取聊天上下文\r\n  const context = window.SillyTavern.getContext();\r\n  const chat = context.chat;\r\n\r\n  if (!chat || chat.length === 0) {\r\n    console.warn(MODULE_NAME, \"当前无聊天记录\");\r\n    return null;\r\n  }\r\n\r\n  // 1. 检查是否已有快照\r\n  const existing = await checkExistingSnapshot(targetMessageId, swipeId);\r\n  if (existing?.snapshot) {\r\n    // 快照已存在且成功读取，直接注入\r\n    await injectSnapshotVariables(existing.snapshot);\r\n    console.log(MODULE_NAME, \"消息已有快照，直接注入\");\r\n    return existing.snapshot;\r\n  }\r\n\r\n  // 2. 查找快照锚点\r\n  const anchorResult = await findSnapshotAnchor(targetMessageId, chat);\r\n\r\n  let baseSnapshot;\r\n  let startMessageId;\r\n\r\n  if (anchorResult) {\r\n    // 从锚点快照继续\r\n    console.log(\r\n      MODULE_NAME,\r\n      `找到快照锚点: 消息 #${anchorResult.anchorMessageId}, ID: ${anchorResult.snapshotId}`,\r\n    );\r\n\r\n    // 从插件读取完整快照内容\r\n    baseSnapshot = await fetchSnapshotFromPlugin(anchorResult.snapshotId);\r\n\r\n    if (!baseSnapshot) {\r\n      console.warn(\r\n        MODULE_NAME,\r\n        `锚点快照读取失败，将从角色模板重新开始: ${anchorResult.snapshotId}`,\r\n      );\r\n      baseSnapshot = getCharacterTemplate() || {};\r\n      startMessageId = 0;\r\n    } else {\r\n      startMessageId = anchorResult.anchorMessageId + 1; // 从锚点下一条消息开始\r\n    }\r\n  } else {\r\n    // 从角色模板开始\r\n    console.log(MODULE_NAME, \"未找到快照锚点，使用角色模板\");\r\n    baseSnapshot = getCharacterTemplate();\r\n\r\n    if (!baseSnapshot) {\r\n      console.warn(MODULE_NAME, \"无角色模板且无快照锚点，使用空快照\");\r\n      baseSnapshot = {};\r\n    }\r\n\r\n    startMessageId = 0; // 从第一条消息开始\r\n  }\r\n\r\n  // 3. 收集需要处理的 AI 消息\r\n  const aiMessages = getAIMessageRange(startMessageId, targetMessageId, chat);\r\n\r\n  if (aiMessages.length === 0) {\r\n    console.log(MODULE_NAME, \"无需处理的 AI 消息，直接使用基础快照\");\r\n    await injectSnapshotVariables(baseSnapshot);\r\n    return baseSnapshot;\r\n  }\r\n\r\n  console.log(MODULE_NAME, `需要处理 ${aiMessages.length} 条 AI 消息`);\r\n\r\n  // 4-7. 逐层处理：解析函数调用 → 执行 → 生成快照 → 保存（每层都保存）\r\n  let currentSnapshot = structuredClone(baseSnapshot);\r\n\r\n  for (let i = 0; i < aiMessages.length; i++) {\r\n    const msg = aiMessages[i];\r\n    const isLastMessage = i === aiMessages.length - 1;\r\n\r\n    console.log(\r\n      MODULE_NAME,\r\n      `处理第 ${i + 1}/${aiMessages.length} 层: 消息 #${msg.messageId}`,\r\n    );\r\n\r\n    // 解析该层的函数调用\r\n    const content = msg.content || msg.mes || \"\";\r\n    const calls = functionRegistry.parseFunctionCalls(content);\r\n\r\n    if (calls.length > 0) {\r\n      console.log(\r\n        MODULE_NAME,\r\n        `消息 #${msg.messageId} 解析到 ${calls.length} 个函数调用`,\r\n      );\r\n\r\n      // 执行该层的函数调用，生成新快照\r\n      try {\r\n        currentSnapshot = await executeFunctionPipeline(calls, currentSnapshot);\r\n        console.log(MODULE_NAME, `消息 #${msg.messageId} 函数执行完成`);\r\n      } catch (error) {\r\n        console.error(\r\n          MODULE_NAME,\r\n          `消息 #${msg.messageId} 执行函数时发生错误:`,\r\n          error,\r\n        );\r\n        // 即使执行失败，也继续处理并保存当前状态\r\n      }\r\n    } else {\r\n      console.log(MODULE_NAME, `消息 #${msg.messageId} 无函数调用，快照不变`);\r\n    }\r\n\r\n    // 保存该层快照到插件\r\n    // 对于最后一层，使用传入的 swipeId；其他层使用消息当前的 swipe_id\r\n    const layerSwipeId = isLastMessage\r\n      ? swipeId\r\n      : (msg.message?.swipe_id ?? null);\r\n\r\n    const snapshotId = await saveSnapshotToPlugin(\r\n      msg.messageId,\r\n      layerSwipeId,\r\n      currentSnapshot,\r\n    );\r\n\r\n    if (snapshotId) {\r\n      console.log(\r\n        MODULE_NAME,\r\n        `消息 #${msg.messageId} 快照已保存，ID: ${snapshotId}`,\r\n      );\r\n    } else {\r\n      console.warn(\r\n        MODULE_NAME,\r\n        `消息 #${msg.messageId} 保存快照到插件失败（插件可能不可用）`,\r\n      );\r\n    }\r\n  }\r\n\r\n  // 8. 注入最终快照变量到聊天作用域\r\n  await injectSnapshotVariables(currentSnapshot);\r\n\r\n  console.log(MODULE_NAME, \"处理完成，已注入快照变量\");\r\n  return currentSnapshot;\r\n}\r\n\r\n/**\r\n * 重新处理从指定消息到最新消息的所有快照\r\n *\r\n * **使用场景**：\r\n * - 用户修改了角色模板\r\n * - 用户删除了某条消息（需要重新计算后续快照）\r\n * - 函数库更新后需要重新应用\r\n *\r\n * @param {number} fromMessageId - 起始消息 ID（包含）\r\n * @returns {Promise<void>}\r\n */\r\nexport async function reprocessFromMessage(fromMessageId) {\r\n  const context = window.SillyTavern.getContext();\r\n  const chat = context.chat;\r\n\r\n  if (!chat || chat.length === 0) {\r\n    console.warn(MODULE_NAME, \"当前无聊天记录，无法重新处理\");\r\n    return;\r\n  }\r\n\r\n  const lastMessageId = chat.length - 1;\r\n\r\n  console.log(\r\n    MODULE_NAME,\r\n    `重新处理消息 #${fromMessageId} 到 #${lastMessageId}`,\r\n  );\r\n\r\n  // 依次处理每条 AI 消息\r\n  for (let i = fromMessageId; i <= lastMessageId; i++) {\r\n    const message = chat[i];\r\n\r\n    // 只处理 AI 消息\r\n    if (message.is_user !== false && message.role !== \"assistant\") {\r\n      continue;\r\n    }\r\n\r\n    // TODO: 清除现有快照标识符（强制重新生成）\r\n    // 目前简化：直接覆盖\r\n\r\n    await processMessage(i);\r\n  }\r\n\r\n  console.log(MODULE_NAME, \"重新处理完成\");\r\n}\r\n","/**\r\n * 快照查找与解析模块\r\n * 负责查找快照锚点、获取消息范围等\r\n */\r\n\r\nimport { isAIMessage } from \"./messageUtils\";\r\nimport { getSnapshotId, loadSnapshot } from \"./snapshotIdentifier\";\r\n\r\n/**\r\n * 向上查找最近的快照锚点(有标识符的 AI 消息)\r\n * @param {number} startMessageId - 开始查找的消息层号\r\n * @param {Array} chat - 聊天记录数组\r\n * @returns {Promise<Object|null>} 返回 {anchorMessageId, snapshotId, snapshot} 或 null\r\n */\r\nexport async function findSnapshotAnchor(startMessageId, chat) {\r\n  if (\r\n    !Array.isArray(chat) ||\r\n    startMessageId < 0 ||\r\n    startMessageId >= chat.length\r\n  ) {\r\n    console.error(\"[ST-VarSystemExtension] findSnapshotAnchor: 参数无效\", {\r\n      startMessageId,\r\n      chatLength: chat?.length,\r\n    });\r\n    return null;\r\n  }\r\n\r\n  // 从 startMessageId 向上查找\r\n  for (let i = startMessageId; i >= 0; i--) {\r\n    const message = chat[i];\r\n\r\n    // 只检查 AI 消息\r\n    if (!isAIMessage(message)) {\r\n      continue;\r\n    }\r\n\r\n    // 检查是否有快照标识符\r\n    const snapshotId = getSnapshotId(message);\r\n    if (!snapshotId) {\r\n      continue;\r\n    }\r\n\r\n    // 尝试加载快照\r\n    console.log(\r\n      `[ST-VarSystemExtension] 找到快照锚点: 第 ${i} 层, ID: ${snapshotId}`,\r\n    );\r\n    const record = await loadSnapshot(snapshotId);\r\n\r\n    if (!record) {\r\n      // 标识符存在但快照不存在(数据库中丢失)\r\n      console.warn(\r\n        `[ST-VarSystemExtension] 快照标识符存在但数据丢失: ${snapshotId}, 将清除该标识符`,\r\n      );\r\n      // 清除标识符,继续向上查找\r\n      // 注意: 这里不调用 clearSnapshotId,因为我们稍后会重新生成\r\n      continue;\r\n    }\r\n\r\n    // 找到有效的锚点\r\n    return {\r\n      anchorMessageId: i,\r\n      snapshotId,\r\n      snapshot: record.payload, // 插件返回的 payload 已经是完整的 JSON\r\n    };\r\n  }\r\n\r\n  // 没有找到任何锚点,需要使用角色模板\r\n  console.log(\"[ST-VarSystemExtension] 未找到快照锚点,需要使用角色模板\");\r\n  return null;\r\n}\r\n\r\n/**\r\n * 获取指定范围内的所有 AI 消息\r\n * @param {number} startId - 起始消息层号(包含)\r\n * @param {number} endId - 结束消息层号(包含)\r\n * @param {Array} chat - 聊天记录数组\r\n * @returns {Array<Object>} AI 消息数组,每个元素包含 {messageId, message, content}\r\n */\r\nexport function getAIMessageRange(startId, endId, chat) {\r\n  if (!Array.isArray(chat)) {\r\n    console.error(\"[ST-VarSystemExtension] getAIMessageRange: chat 不是数组\");\r\n    return [];\r\n  }\r\n\r\n  if (startId < 0 || endId >= chat.length || startId > endId) {\r\n    console.error(\"[ST-VarSystemExtension] getAIMessageRange: 范围无效\", {\r\n      startId,\r\n      endId,\r\n      chatLength: chat.length,\r\n    });\r\n    return [];\r\n  }\r\n\r\n  const result = [];\r\n\r\n  for (let i = startId; i <= endId; i++) {\r\n    const message = chat[i];\r\n\r\n    // 只收集 AI 消息\r\n    if (!isAIMessage(message)) {\r\n      continue;\r\n    }\r\n\r\n    // 获取当前 swipe 的内容\r\n    const swipeId = message.swipe_id ?? 0;\r\n    const content = Array.isArray(message.swipes)\r\n      ? message.swipes[swipeId]\r\n      : message.mes || \"\";\r\n\r\n    result.push({\r\n      messageId: i,\r\n      message,\r\n      content,\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * 获取从锚点到目标层之间的所有 AI 消息\r\n * 如果没有锚点(返回 null),则从第 0 层开始\r\n * @param {Object|null} anchor - 锚点对象,可能为 null\r\n * @param {number} targetMessageId - 目标消息层号\r\n * @param {Array} chat - 聊天记录数组\r\n * @returns {Array<Object>} AI 消息数组\r\n */\r\nexport function getMessagesToProcess(anchor, targetMessageId, chat) {\r\n  if (\r\n    !Array.isArray(chat) ||\r\n    targetMessageId < 0 ||\r\n    targetMessageId >= chat.length\r\n  ) {\r\n    console.error(\"[ST-VarSystemExtension] getMessagesToProcess: 参数无效\", {\r\n      targetMessageId,\r\n      chatLength: chat?.length,\r\n    });\r\n    return [];\r\n  }\r\n\r\n  // 确定起始层号\r\n  let startId;\r\n  if (anchor === null) {\r\n    // 没有锚点,从第 0 层开始\r\n    startId = 0;\r\n    console.log(\"[ST-VarSystemExtension] 从第 0 层开始处理(无锚点)\");\r\n  } else {\r\n    // 从锚点的下一层开始(锚点本身已经有快照了)\r\n    startId = anchor.anchorMessageId + 1;\r\n    console.log(\r\n      `[ST-VarSystemExtension] 从第 ${startId} 层开始处理(锚点: ${anchor.anchorMessageId})`,\r\n    );\r\n  }\r\n\r\n  // 获取范围内的所有 AI 消息\r\n  return getAIMessageRange(startId, targetMessageId, chat);\r\n}\r\n\r\n/**\r\n * 检查最新层 AI 消息是否已有快照\r\n * 这是处理流程的第一步检查\r\n * @param {number} messageId - 消息层号\r\n * @param {Array} chat - 聊天记录数组\r\n * @returns {Promise<Object|null>} 返回 {snapshotId, snapshot} 或 null\r\n */\r\nexport async function checkLatestSnapshot(messageId, chat) {\r\n  if (!Array.isArray(chat) || messageId < 0 || messageId >= chat.length) {\r\n    return null;\r\n  }\r\n\r\n  const message = chat[messageId];\r\n\r\n  // 检查是否为 AI 消息\r\n  if (!isAIMessage(message)) {\r\n    console.log(\r\n      `[ST-VarSystemExtension] 第 ${messageId} 层不是 AI 消息,跳过检查`,\r\n    );\r\n    return null;\r\n  }\r\n\r\n  // 检查是否有快照标识符\r\n  const snapshotId = getSnapshotId(message);\r\n  if (!snapshotId) {\r\n    console.log(`[ST-VarSystemExtension] 第 ${messageId} 层没有快照标识符`);\r\n    return null;\r\n  }\r\n\r\n  // 尝试加载快照\r\n  console.log(\r\n    `[ST-VarSystemExtension] 第 ${messageId} 层已有快照: ${snapshotId}`,\r\n  );\r\n  const record = await loadSnapshot(snapshotId);\r\n\r\n  if (!record) {\r\n    console.warn(\r\n      `[ST-VarSystemExtension] 第 ${messageId} 层快照数据丢失: ${snapshotId}`,\r\n    );\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    snapshotId,\r\n    snapshot: record.payload,\r\n  };\r\n}\r\n","/**\r\n * @file listeners.js\r\n * @description 事件监听器模块，响应 SillyTavern 事件并触发快照处理流程\r\n *\r\n * **监听的事件**：\r\n * - MESSAGE_RECEIVED: AI 生成新消息 → 处理并生成快照\r\n * - MESSAGE_SWIPED: 用户切换 swipe → 重新处理到该 swipe\r\n * - CHAT_CHANGED: 切换聊天 → 清空变量，加载新角色模板\r\n * - MESSAGE_DELETED: 删除消息 → 重新处理后续消息\r\n * - CHAT_DELETED: 删除整个聊天 → 调用插件清理快照\r\n *\r\n * **事件来源验证**：\r\n * - 所有事件均来自 `references/iframe/event.d.ts` 中的 `tavern_events`\r\n * - 参数类型参考 `ListenerType` 接口定义\r\n *\r\n * @module events/listeners\r\n */\r\n\r\nimport { processMessage, reprocessFromMessage } from \"./processor\";\r\n\r\nconst MODULE_NAME = \"[ST-VarSystemExtension/listeners]\";\r\n\r\n// 从 SillyTavern 导入事件类型和相关 API\r\n// 使用绝对路径（从网站根目录开始）避免沙箱环境下的路径问题\r\nimport { saveChat, eventSource, event_types } from '@sillytavern/script';\r\n\r\n// CSRF Token 缓存\r\nlet cachedCsrfToken = null;\r\n\r\n/**\r\n * 获取 CSRF Token（用于 DELETE 请求）\r\n * @returns {Promise<string|null>}\r\n */\r\nasync function getCsrfToken() {\r\n  // 1. 尝试从全局变量读取\r\n  if (window.token || globalThis.token) {\r\n    return window.token || globalThis.token;\r\n  }\r\n\r\n  // 2. 使用缓存\r\n  if (cachedCsrfToken) {\r\n    return cachedCsrfToken;\r\n  }\r\n\r\n  // 3. 主动获取\r\n  try {\r\n    const response = await fetch(\"/csrf-token\");\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      cachedCsrfToken = data.token;\r\n      return cachedCsrfToken;\r\n    }\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"获取 CSRF token 失败:\", error);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * 检查变量系统是否启用\r\n * @returns {boolean} 当前角色是否启用变量系统\r\n */\r\nfunction isVariableSystemEnabled() {\r\n  try {\r\n    const context = window.SillyTavern.getContext();\r\n    const character = context.characters?.[context.characterId];\r\n\r\n    return character?.data?.extensions?.st_var_system?.enabled === true;\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"检查启用状态时发生错误:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 处理 MESSAGE_RECEIVED 事件\r\n *\r\n * **触发时机**：AI 生成新消息后\r\n * **参数**：message_id (number) - 新消息的 ID\r\n *\r\n * @param {number} messageId - 新消息 ID\r\n */\r\nasync function handleMessageReceived(messageId) {\r\n  console.log(MODULE_NAME, `MESSAGE_RECEIVED: 消息 #${messageId}`);\r\n\r\n  if (!isVariableSystemEnabled()) {\r\n    console.log(MODULE_NAME, \"变量系统未启用，跳过处理\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await processMessage(messageId);\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"MESSAGE_RECEIVED 处理失败:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * 处理 MESSAGE_SWIPED 事件\r\n *\r\n * **触发时机**：用户切换到某个 swipe\r\n * **参数**：message_id (number) - 被 swipe 的消息 ID\r\n *\r\n * **注意**：SillyTavern 切换 swipe 时只传递 message_id，\r\n * 需要从消息对象读取 swipe_id 来确定当前显示的是哪个 swipe\r\n *\r\n * @param {number} messageId - 被 swipe 的消息 ID\r\n */\r\nasync function handleMessageSwiped(messageId) {\r\n  console.log(MODULE_NAME, `MESSAGE_SWIPED: 消息 #${messageId}`);\r\n\r\n  if (!isVariableSystemEnabled()) {\r\n    console.log(MODULE_NAME, \"变量系统未启用，跳过处理\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const context = window.SillyTavern.getContext();\r\n    const message = context.chat[messageId];\r\n    const swipeId = message?.swipe_id ?? null;\r\n\r\n    console.log(MODULE_NAME, `当前 swipe ID: ${swipeId}`);\r\n\r\n    await processMessage(messageId, swipeId);\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"MESSAGE_SWIPED 处理失败:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * 处理 CHAT_CHANGED 事件\r\n *\r\n * **触发时机**：切换到新聊天\r\n * **参数**：chat_file_name (string) - 新聊天文件名\r\n *\r\n * **处理逻辑**：\r\n * 1. 检查新角色是否启用变量系统\r\n * 2. 处理最后一条 AI 消息（如果有）\r\n * 3. 注入新快照到聊天变量\r\n *\r\n * **注意**：不需要手动清空旧变量，酒馆的聊天变量是自动隔离的\r\n *\r\n * @param {string} chatFileName - 新聊天文件名\r\n */\r\nasync function handleChatChanged(chatFileName) {\r\n  console.log(MODULE_NAME, `CHAT_CHANGED: ${chatFileName}`);\r\n\r\n  try {\r\n    if (!isVariableSystemEnabled()) {\r\n      console.log(MODULE_NAME, \"新角色未启用变量系统\");\r\n      return;\r\n    }\r\n\r\n    // 如果当前聊天有消息，重新处理最后一条 AI 消息\r\n    const context = window.SillyTavern.getContext();\r\n    const chat = context.chat;\r\n\r\n    if (!chat || chat.length === 0) {\r\n      console.log(MODULE_NAME, \"新聊天无消息\");\r\n      return;\r\n    }\r\n\r\n    // 查找最后一条 AI 消息并处理\r\n    for (let i = chat.length - 1; i >= 0; i--) {\r\n      const message = chat[i];\r\n      if (message.is_user === false || message.role === \"assistant\") {\r\n        console.log(MODULE_NAME, `处理最后一条 AI 消息: #${i}`);\r\n        await processMessage(i);\r\n        break;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"CHAT_CHANGED 处理失败:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * 处理 MESSAGE_DELETED 事件\r\n *\r\n * **触发时机**：用户删除消息\r\n * **参数**：message_id (number) - 被删除消息的原 ID\r\n *\r\n * **关键设计**：\r\n * - **不删除快照**（快照仍在数据库中，因为是 UUID 索引）\r\n * - **重新处理后续消息**（从删除点开始重新计算）\r\n *\r\n * @param {number} deletedMessageId - 被删除消息的原 ID\r\n */\r\nasync function handleMessageDeleted(deletedMessageId) {\r\n  console.log(MODULE_NAME, `MESSAGE_DELETED: 消息 #${deletedMessageId}`);\r\n\r\n  if (!isVariableSystemEnabled()) {\r\n    console.log(MODULE_NAME, \"变量系统未启用，跳过处理\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const context = window.SillyTavern.getContext();\r\n    const chat = context.chat;\r\n\r\n    if (!chat || chat.length === 0) {\r\n      console.log(MODULE_NAME, \"聊天已清空，无需重新处理\");\r\n      return;\r\n    }\r\n\r\n    // 从被删除消息的位置开始重新处理\r\n    // 注意：消息删除后，后续消息的 ID 会前移，所以从 deletedMessageId 开始\r\n    console.log(MODULE_NAME, `从消息 #${deletedMessageId} 开始重新处理`);\r\n    await reprocessFromMessage(deletedMessageId);\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"MESSAGE_DELETED 处理失败:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * 处理 CHAT_DELETED 事件\r\n *\r\n * **触发时机**：用户删除整个聊天文件\r\n * **参数**：chat_file_name (string) - 被删除的聊天文件名\r\n *\r\n * **关键设计**：\r\n * - 调用插件 DELETE /snapshots/by-chat/:chatFile 批量删除快照\r\n * - 不需要手动清空聊天变量（酒馆会自动清理 chat_metadata）\r\n *\r\n * @param {string} chatFileName - 被删除的聊天文件名\r\n */\r\nasync function handleChatDeleted(chatFileName) {\r\n  console.log(MODULE_NAME, `CHAT_DELETED: ${chatFileName}`);\r\n\r\n  try {\r\n    // 调用插件删除该聊天的所有快照\r\n    if (!chatFileName) {\r\n      console.warn(MODULE_NAME, \"聊天文件名为空，无法删除快照\");\r\n      return;\r\n    }\r\n\r\n    const csrfToken = await getCsrfToken();\r\n    if (!csrfToken) {\r\n      console.warn(MODULE_NAME, \"无法获取 CSRF Token，跳过插件删除\");\r\n      return;\r\n    }\r\n\r\n    const url = `/api/plugins/var-manager/var-manager/snapshots/by-chat/${encodeURIComponent(chatFileName)}`;\r\n\r\n    const response = await fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"X-CSRF-Token\": csrfToken,\r\n      },\r\n    });\r\n\r\n    if (response.status === 404) {\r\n      console.log(MODULE_NAME, \"插件不可用或快照不存在，跳过数据库清理\");\r\n      return;\r\n    }\r\n\r\n    if (!response.ok) {\r\n      console.error(\r\n        MODULE_NAME,\r\n        `删除聊天快照失败 (${response.status}): ${chatFileName}`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    const result = await response.json();\r\n    console.log(\r\n      MODULE_NAME,\r\n      `已删除聊天 \"${chatFileName}\" 的 ${result.deletedCount ?? 0} 条快照`,\r\n    );\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"CHAT_DELETED 处理失败:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * 注册所有事件监听器\r\n *\r\n * **调用时机**：扩展初始化时调用一次\r\n */\r\nexport function registerEventListeners() {\r\n  console.log(MODULE_NAME, \"注册事件监听器\");\r\n\r\n  // 使用 eventSource.on 注册监听器（酒馆原生扩展 API）\r\n  eventSource.on(event_types.MESSAGE_RECEIVED, handleMessageReceived);\r\n  eventSource.on(event_types.MESSAGE_SWIPED, handleMessageSwiped);\r\n  eventSource.on(event_types.CHAT_CHANGED, handleChatChanged);\r\n  eventSource.on(event_types.MESSAGE_DELETED, handleMessageDeleted);\r\n  eventSource.on(event_types.CHAT_DELETED, handleChatDeleted);\r\n\r\n  console.log(MODULE_NAME, \"事件监听器已注册\");\r\n}\r\n\r\n/**\r\n * 手动卸载所有事件监听器\r\n *\r\n * **注意**：通常不需要调用，eventOn 会在扩展关闭时自动卸载\r\n * 仅用于特殊场景（如扩展重载）\r\n */\r\nexport function unregisterEventListeners() {\r\n  console.log(MODULE_NAME, \"卸载事件监听器\");\r\n\r\n  eventSource.removeListener(event_types.MESSAGE_RECEIVED, handleMessageReceived);\r\n  eventSource.removeListener(event_types.MESSAGE_SWIPED, handleMessageSwiped);\r\n  eventSource.removeListener(event_types.CHAT_CHANGED, handleChatChanged);\r\n  eventSource.removeListener(event_types.MESSAGE_DELETED, handleMessageDeleted);\r\n  eventSource.removeListener(event_types.CHAT_DELETED, handleChatDeleted);\r\n\r\n  console.log(MODULE_NAME, \"事件监听器已卸载\");\r\n}\r\n","/**\r\n * 函数库管理界面\r\n *\r\n * 功能：\r\n * - 查看/编辑全局和局域函数\r\n * - 新增/删除函数\r\n * - 导入/导出函数（JSON 格式）\r\n * - 生成函数调用提示词\r\n *\r\n * 设计参照：酒馆助手脚本库（简洁风格，无复杂编辑器）\r\n */\r\n\r\nimport {\r\n  extension_settings,\r\n  getContext,\r\n  writeExtensionField,\r\n} from \"@sillytavern/scripts/extensions\";\r\nimport { saveSettingsDebounced } from \"@sillytavern/script\";\r\nimport { callGenericPopup, POPUP_TYPE } from \"@sillytavern/scripts/popup\";\r\nimport { functionRegistry } from \"../functions/registry\";\r\n\r\nconst MODULE_NAME = \"[ST-VarSystemExtension/FunctionLibrary]\";\r\nconst EXTENSION_SETTINGS_KEY = \"st_var_system\";\r\n\r\n// 当前作用域（global 或 local）\r\nlet currentScope = \"global\";\r\n\r\n/**\r\n * 初始化函数库界面\r\n */\r\nexport async function initFunctionLibrary() {\r\n  console.log(MODULE_NAME, \"初始化函数库界面\");\r\n\r\n  // 先从存储加载函数（这会清空当前注册表）\r\n  await loadFunctionsFromStorage();\r\n\r\n  // 然后注册内置函数（添加到已加载的函数中）\r\n  const { initBuiltinFunctions } = await import('../functions/builtins.js');\r\n  initBuiltinFunctions(functionRegistry);\r\n  console.log(MODULE_NAME, \"内置函数已注册\");\r\n\r\n  // 绑定事件处理器\r\n  bindEventHandlers();\r\n\r\n  // 加载当前作用域的函数列表\r\n  await loadFunctionList();\r\n}\r\n\r\n/**\r\n * 绑定事件处理器\r\n */\r\nfunction bindEventHandlers() {\r\n  // 作用域切换\r\n  $('input[name=\"function-scope\"]').on(\"change\", async (e) => {\r\n    currentScope = e.target.value;\r\n    await loadFunctionList();\r\n  });\r\n\r\n  // 新增函数\r\n  $(\"#var-system-new-function-btn\").on(\"click\", async () => {\r\n    await openFunctionEditor();\r\n  });\r\n\r\n  // 导入函数\r\n  $(\"#var-system-import-functions-btn\").on(\"click\", async () => {\r\n    await importFunctions();\r\n  });\r\n\r\n  // 导出函数\r\n  $(\"#var-system-export-functions-btn\").on(\"click\", async () => {\r\n    await exportFunctions();\r\n  });\r\n\r\n  // 生成提示词\r\n  $(\"#var-system-generate-prompt-btn\").on(\"click\", async () => {\r\n    await generatePrompt();\r\n  });\r\n}\r\n\r\n/**\r\n * 从存储加载函数到注册表\r\n */\r\nasync function loadFunctionsFromStorage() {\r\n  try {\r\n    // 加载全局函数\r\n    const globalFunctions =\r\n      extension_settings[EXTENSION_SETTINGS_KEY]?.functions || [];\r\n    functionRegistry.loadGlobalFunctions(globalFunctions);\r\n\r\n    // 加载局域函数\r\n    const context = getContext();\r\n    if (context.characterId !== undefined) {\r\n      const character = context.characters[context.characterId];\r\n      const localFunctions =\r\n        character?.data?.extensions?.[EXTENSION_SETTINGS_KEY]?.functions || [];\r\n      functionRegistry.loadLocalFunctions(localFunctions);\r\n    }\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"加载函数失败:\", error);\r\n  }\r\n}\r\n\r\n/**\r\n * 加载函数列表\r\n */\r\nasync function loadFunctionList() {\r\n  const listContainer = $(\"#var-system-function-list\");\r\n  listContainer.empty();\r\n\r\n  // 获取当前作用域的函数\r\n  const functions =\r\n    currentScope === \"global\"\r\n      ? functionRegistry.exportGlobalFunctions()\r\n      : functionRegistry.exportLocalFunctions();\r\n\r\n  if (!functions || functions.length === 0) {\r\n    // 显示空状态\r\n    listContainer.html(`\r\n      <div class=\"var-system-empty-state\">\r\n        <i class=\"fa-solid fa-inbox fa-3x\"></i>\r\n        <p>暂无函数</p>\r\n        <p class=\"var-system-hint\">点击\"新增函数\"创建你的第一个函数</p>\r\n      </div>\r\n    `);\r\n    return;\r\n  }\r\n\r\n  // 渲染函数卡片\r\n  for (const func of functions) {\r\n    const card = createFunctionCard(func);\r\n    listContainer.append(card);\r\n  }\r\n\r\n  // 设置拖拽排序\r\n  setupDraggable();\r\n}\r\n\r\n/**\r\n * 设置拖拽排序\r\n */\r\nfunction setupDraggable() {\r\n  const listContainer = $(\"#var-system-function-list\");\r\n\r\n  // 销毁现有的 sortable 实例（如果存在）\r\n  if (listContainer.sortable(\"instance\")) {\r\n    listContainer.sortable(\"destroy\");\r\n  }\r\n\r\n  // 初始化拖拽排序\r\n  listContainer.sortable({\r\n    items: \".var-system-function-card\",\r\n    handle: \".drag-handle\",\r\n    cursor: \"move\",\r\n    tolerance: \"pointer\",\r\n    placeholder: \"var-system-sortable-placeholder\",\r\n    stop: async () => {\r\n      await handleDragStop();\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * 拖拽停止时的处理\r\n */\r\nasync function handleDragStop() {\r\n  // 获取新的顺序\r\n  const $cards = $(\"#var-system-function-list .var-system-function-card\");\r\n  const newOrder = [];\r\n\r\n  $cards.each(function (index) {\r\n    const functionId = $(this).attr(\"data-function-id\");\r\n    newOrder.push({ id: functionId, order: index });\r\n  });\r\n\r\n  // 从注册表获取当前函数列表\r\n  const functions =\r\n    currentScope === \"global\"\r\n      ? functionRegistry.exportGlobalFunctions()\r\n      : functionRegistry.exportLocalFunctions();\r\n\r\n  // 按新顺序重新排列\r\n  const reordered = [];\r\n  for (const item of newOrder) {\r\n    const func = functions.find((f) => f.id === item.id);\r\n    if (func) {\r\n      func.order = item.order;\r\n      reordered.push(func);\r\n    }\r\n  }\r\n\r\n  // 重新加载到注册表（覆盖原顺序）\r\n  if (currentScope === \"global\") {\r\n    functionRegistry.loadGlobalFunctions(reordered);\r\n  } else {\r\n    functionRegistry.loadLocalFunctions(reordered);\r\n  }\r\n\r\n  // 持久化到存储\r\n  await saveFunctions();\r\n\r\n  console.log(MODULE_NAME, \"函数顺序已更新\");\r\n}\r\n\r\n/**\r\n * 创建函数卡片\r\n * @param {Object} func - 函数定义\r\n * @returns {jQuery} 函数卡片元素\r\n */\r\nfunction createFunctionCard(func) {\r\n  const template = $(\"#var-system-function-card-template\").html();\r\n  const $card = $(template);\r\n\r\n  $card.attr(\"data-function-id\", func.id);\r\n\r\n  // 设置启用状态\r\n  $card.find(\".function-enabled-checkbox\").prop(\"checked\", func.enabled);\r\n  $card.find(\".function-enabled-checkbox\").on(\"change\", async (e) => {\r\n    func.enabled = e.target.checked;\r\n    await saveFunctions();\r\n  });\r\n\r\n  // 设置函数名称\r\n  $card.find(\".var-system-function-name\").text(func.name);\r\n\r\n  // 设置类型徽章\r\n  const $badge = $card.find(\".var-system-badge\");\r\n  if (func.type === \"active\") {\r\n    $badge\r\n      .removeClass(\"var-system-badge-passive\")\r\n      .addClass(\"var-system-badge-active\")\r\n      .text(\"主动\");\r\n  } else {\r\n    $badge\r\n      .removeClass(\"var-system-badge-active\")\r\n      .addClass(\"var-system-badge-passive\")\r\n      .text(\"被动\");\r\n  }\r\n\r\n  // 设置说明\r\n  $card\r\n    .find(\".var-system-function-description\")\r\n    .text(func.description || \"无说明\");\r\n\r\n  // 设置元信息（被动函数显示执行时机）\r\n  if (func.type === \"passive\") {\r\n    const timingText =\r\n      func.timing === \"before_active\" ? \"主动函数前执行\" : \"主动函数后执行\";\r\n    $card.find(\".var-system-function-order\").text(timingText);\r\n  } else {\r\n    $card.find(\".var-system-function-order\").remove();\r\n  }\r\n\r\n  // 编辑按钮\r\n  $card.find(\".function-edit-btn\").on(\"click\", async () => {\r\n    await openFunctionEditor(func);\r\n  });\r\n\r\n  // 删除按钮\r\n  $card.find(\".function-delete-btn\").on(\"click\", async () => {\r\n    await deleteFunction(func);\r\n  });\r\n\r\n  return $card;\r\n}\r\n\r\n/**\r\n * 打开函数编辑器\r\n * @param {Object|null} func - 要编辑的函数（null 表示新建）\r\n */\r\nasync function openFunctionEditor(func = null) {\r\n  const template = $(\"#var-system-function-editor-template\").html();\r\n  const $editor = $(template);\r\n\r\n  // 如果是编辑现有函数，填充数据\r\n  if (func) {\r\n    $editor.find(\"#function-name-input\").val(func.name);\r\n    $editor.find(\"#function-type-select\").val(func.type);\r\n    $editor.find(\"#function-enabled-checkbox\").prop(\"checked\", func.enabled);\r\n    $editor.find(\"#function-description-textarea\").val(func.description || \"\");\r\n    $editor.find(\"#function-pattern-input\").val(func.pattern || \"\");\r\n    $editor.find(\"#function-timing-select\").val(func.timing || \"before_active\");\r\n    $editor.find(\"#function-executor-textarea\").val(func.executor || \"\");\r\n  }\r\n\r\n  // 类型切换时显示/隐藏相应字段\r\n  const updateFieldsVisibility = () => {\r\n    const type = $editor.find(\"#function-type-select\").val();\r\n    if (type === \"active\") {\r\n      $editor.find(\".var-system-active-only\").show();\r\n      $editor.find(\".var-system-passive-only\").hide();\r\n    } else {\r\n      $editor.find(\".var-system-active-only\").hide();\r\n      $editor.find(\".var-system-passive-only\").show();\r\n    }\r\n  };\r\n\r\n  $editor.find(\"#function-type-select\").on(\"change\", updateFieldsVisibility);\r\n  updateFieldsVisibility();\r\n\r\n  // 显示弹窗\r\n  const result = await callGenericPopup(\r\n    $editor,\r\n    POPUP_TYPE.CONFIRM,\r\n    func ? \"编辑函数\" : \"新增函数\",\r\n    {\r\n      okButton: \"保存\",\r\n      cancelButton: \"取消\",\r\n    },\r\n  );\r\n\r\n  if (result !== POPUP_RESULT.AFFIRMATIVE) {\r\n    return;\r\n  }\r\n\r\n  // 收集表单数据\r\n  const functionData = {\r\n    id: func?.id || generateFunctionId(),\r\n    name: $editor.find(\"#function-name-input\").val().trim(),\r\n    type: $editor.find(\"#function-type-select\").val(),\r\n    enabled: $editor.find(\"#function-enabled-checkbox\").prop(\"checked\"),\r\n    description: $editor.find(\"#function-description-textarea\").val().trim(),\r\n    executor: $editor.find(\"#function-executor-textarea\").val().trim(),\r\n  };\r\n\r\n  if (functionData.type === \"active\") {\r\n    functionData.pattern = $editor.find(\"#function-pattern-input\").val().trim();\r\n  } else {\r\n    functionData.timing = $editor.find(\"#function-timing-select\").val();\r\n  }\r\n\r\n  // 验证必填字段\r\n  if (!functionData.name) {\r\n    toastr.error(\"请填写函数名称\");\r\n    return;\r\n  }\r\n\r\n  if (!functionData.executor) {\r\n    toastr.error(\"请填写函数实现代码\");\r\n    return;\r\n  }\r\n\r\n  if (functionData.type === \"active\" && !functionData.pattern) {\r\n    toastr.error(\"主动函数需要填写正则表达式\");\r\n    return;\r\n  }\r\n\r\n  // 保存函数\r\n  if (func) {\r\n    // 更新现有函数 - 直接修改对象，然后保存\r\n    Object.assign(func, functionData);\r\n  } else {\r\n    // 添加新函数\r\n    if (currentScope === \"global\") {\r\n      functionRegistry.upsertGlobalFunction(functionData);\r\n    } else {\r\n      functionRegistry.upsertLocalFunction(functionData);\r\n    }\r\n  }\r\n\r\n  await saveFunctions();\r\n  await loadFunctionList();\r\n\r\n  toastr.success(`函数\"${functionData.name}\"已${func ? \"更新\" : \"创建\"}`);\r\n}\r\n\r\n/**\r\n * 删除函数\r\n * @param {Object} func - 要删除的函数\r\n */\r\nasync function deleteFunction(func) {\r\n  const confirmation = await callGenericPopup(\r\n    `确定要删除函数\"${func.name}\"吗？`,\r\n    POPUP_TYPE.CONFIRM,\r\n    \"\",\r\n    { okButton: \"删除\", cancelButton: \"取消\" },\r\n  );\r\n\r\n  if (confirmation !== POPUP_RESULT.AFFIRMATIVE) {\r\n    return;\r\n  }\r\n\r\n  // 从注册表删除\r\n  functionRegistry.deleteFunction(func.id, currentScope);\r\n\r\n  await saveFunctions();\r\n  await loadFunctionList();\r\n\r\n  toastr.success(`函数\"${func.name}\"已删除`);\r\n}\r\n\r\n/**\r\n * 保存函数列表到存储\r\n */\r\nasync function saveFunctions() {\r\n  try {\r\n    if (currentScope === \"global\") {\r\n      // 保存到 extension_settings\r\n      if (!extension_settings[EXTENSION_SETTINGS_KEY]) {\r\n        extension_settings[EXTENSION_SETTINGS_KEY] = {};\r\n      }\r\n      extension_settings[EXTENSION_SETTINGS_KEY].functions =\r\n        functionRegistry.exportGlobalFunctions();\r\n      await saveSettingsDebounced();\r\n    } else {\r\n      // 保存到角色卡\r\n      const context = getContext();\r\n      if (context.characterId === undefined) {\r\n        console.warn(MODULE_NAME, \"当前无角色，无法保存局域函数\");\r\n        return;\r\n      }\r\n\r\n      const character = context.characters[context.characterId];\r\n      if (!character) {\r\n        console.warn(MODULE_NAME, \"角色数据不存在\");\r\n        return;\r\n      }\r\n\r\n      // 确保扩展数据结构存在\r\n      if (!character.data.extensions) {\r\n        character.data.extensions = {};\r\n      }\r\n      if (!character.data.extensions[EXTENSION_SETTINGS_KEY]) {\r\n        character.data.extensions[EXTENSION_SETTINGS_KEY] = {};\r\n      }\r\n\r\n      character.data.extensions[EXTENSION_SETTINGS_KEY].functions =\r\n        functionRegistry.exportLocalFunctions();\r\n\r\n      await writeExtensionField(\r\n        context.characterId,\r\n        EXTENSION_SETTINGS_KEY,\r\n        character.data.extensions[EXTENSION_SETTINGS_KEY],\r\n      );\r\n    }\r\n\r\n    console.log(MODULE_NAME, `${currentScope} 函数已保存`);\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"保存函数失败:\", error);\r\n    toastr.error(`保存失败：${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 导入函数\r\n */\r\nasync function importFunctions() {\r\n  const $input = $('<input type=\"file\" accept=\".json\">');\r\n\r\n  $input.on(\"change\", async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const text = await file.text();\r\n      const data = JSON.parse(text);\r\n\r\n      if (!data.version || !Array.isArray(data.functions)) {\r\n        toastr.error(\"无效的函数库文件格式\");\r\n        return;\r\n      }\r\n\r\n      // 导入函数（生成新的 ID 避免冲突）\r\n      let imported = 0;\r\n      for (const func of data.functions) {\r\n        const newFunc = {\r\n          ...func,\r\n          id: generateFunctionId(),\r\n          enabled: false, // 导入后默认禁用\r\n        };\r\n\r\n        if (currentScope === \"global\") {\r\n          functionRegistry.upsertGlobalFunction(newFunc);\r\n        } else {\r\n          functionRegistry.upsertLocalFunction(newFunc);\r\n        }\r\n\r\n        imported++;\r\n      }\r\n\r\n      await saveFunctions();\r\n      await loadFunctionList();\r\n\r\n      toastr.success(`成功导入 ${imported} 个函数`);\r\n    } catch (error) {\r\n      console.error(MODULE_NAME, \"导入函数失败:\", error);\r\n      toastr.error(`导入失败：${error.message}`);\r\n    }\r\n  });\r\n\r\n  $input.trigger(\"click\");\r\n}\r\n\r\n/**\r\n * 导出函数\r\n */\r\nasync function exportFunctions() {\r\n  const functions =\r\n    currentScope === \"global\"\r\n      ? functionRegistry.exportGlobalFunctions()\r\n      : functionRegistry.exportLocalFunctions();\r\n\r\n  if (!functions || functions.length === 0) {\r\n    toastr.warning(\"没有可导出的函数\");\r\n    return;\r\n  }\r\n\r\n  const exportData = {\r\n    version: \"1.0\",\r\n    functions: functions,\r\n  };\r\n\r\n  const json = JSON.stringify(exportData, null, 2);\r\n  const blob = new Blob([json], { type: \"application/json\" });\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  const $a = $(\"<a>\");\r\n  $a.attr(\"href\", url);\r\n  $a.attr(\r\n    \"download\",\r\n    `var-system-functions-${currentScope}-${Date.now()}.json`,\r\n  );\r\n  $a[0].click();\r\n\r\n  URL.revokeObjectURL(url);\r\n\r\n  toastr.success(\"函数库已导出\");\r\n}\r\n\r\n/**\r\n * 生成提示词\r\n */\r\nasync function generatePrompt() {\r\n  const functions = await functionRegistry.getEnabledFunctions(\"active\");\r\n\r\n  if (!functions || functions.length === 0) {\r\n    toastr.warning(\"没有启用的主动函数\");\r\n    return;\r\n  }\r\n\r\n  let prompt =\r\n    \"<variable_system_functions>\\n你可以使用以下函数来更新游戏状态：\\n\\n\";\r\n\r\n  for (const func of functions) {\r\n    prompt += `${func.name} // ${func.description || \"无说明\"}\\n`;\r\n    if (func.pattern) {\r\n      // 简化的示例（从正则推断）\r\n      const example = inferExampleFromPattern(func.pattern, func.name);\r\n      prompt += `示例：${example}\\n\\n`;\r\n    }\r\n  }\r\n\r\n  prompt += \"</variable_system_functions>\";\r\n\r\n  // 显示提示词弹窗\r\n  const template = $(\"#var-system-prompt-generator-template\").html();\r\n  const $dialog = $(template);\r\n\r\n  $dialog.find(\"#generated-prompt-content\").text(prompt);\r\n\r\n  $dialog.find(\"#copy-prompt-btn\").on(\"click\", () => {\r\n    navigator.clipboard.writeText(prompt);\r\n    toastr.success(\"已复制到剪贴板\");\r\n  });\r\n\r\n  await callGenericPopup($dialog, POPUP_TYPE.DISPLAY, \"函数调用提示词\", {\r\n    wide: true,\r\n  });\r\n}\r\n\r\n/**\r\n * 从正则推断示例调用\r\n * @param {string} _pattern - 正则表达式\r\n * @param {string} funcName - 函数名\r\n * @returns {string} 示例调用\r\n */\r\nfunction inferExampleFromPattern(_pattern, funcName) {\r\n  // 简化实现：直接使用函数名生成基本示例\r\n  return `@.${funcName}(\"path.to.var\", value);`;\r\n}\r\n\r\n/**\r\n * 生成函数 ID（UUID v4）\r\n * @returns {string} UUID\r\n */\r\nfunction generateFunctionId() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n// 导出用于弹窗的常量（如果需要）\r\nconst POPUP_RESULT = {\r\n  AFFIRMATIVE: 1,\r\n  NEGATIVE: 0,\r\n  CANCELLED: -1,\r\n};\r\n","/**\r\n * 楼层快照界面\r\n *\r\n * 功能：\r\n * - 查看/编辑消息楼层绑定的快照\r\n * - 支持几百上千层的下拉选择（只显示有标识符的楼层）\r\n * - 保存快照、保存为全局快照\r\n * - 导入/导出 JSON（含 MVU 元数据移除）\r\n *\r\n * 编辑器复用：VariableBlockEditor（与角色模板/全局快照相同）\r\n */\r\n\r\nimport { getContext } from \"@sillytavern/scripts/extensions\";\r\nimport { callGenericPopup, POPUP_TYPE } from \"@sillytavern/scripts/popup\";\r\nimport { getRequestHeaders } from \"@sillytavern/script\";\r\nimport { createVariableBlockEditor } from \"../editor/variableBlockEditor\";\r\n\r\nconst MODULE_NAME = \"[ST-VarSystemExtension/MessageSnapshots]\";\r\n\r\n// 编辑器实例\r\nlet editorController = null;\r\n\r\n// 当前状态\r\nconst snapshotState = {\r\n  currentFloor: null, // 当前选中的楼层号\r\n  currentSwipeId: null, // 当前 swipe ID\r\n  currentSnapshotId: null, // 当前快照 ID\r\n  draftBody: null, // 编辑器中的副本（未保存）\r\n  dirty: false, // 是否有未保存修改\r\n  hasErrors: false, // JSON 是否有错误\r\n};\r\n\r\n/**\r\n * 初始化楼层快照界面\r\n */\r\nexport async function initMessageSnapshots() {\r\n  console.log(MODULE_NAME, \"初始化楼层快照界面\");\r\n\r\n  // 绑定事件处理器\r\n  bindEventHandlers();\r\n\r\n  // 加载楼层列表\r\n  await loadFloorList();\r\n}\r\n\r\n/**\r\n * 绑定事件处理器\r\n */\r\nfunction bindEventHandlers() {\r\n  // 楼层选择\r\n  $(\"#var-system-floor-select\").on(\"change\", async (e) => {\r\n    const floorNumber = parseInt(e.target.value, 10);\r\n    if (!Number.isNaN(floorNumber)) {\r\n      await loadFloorSnapshot(floorNumber);\r\n    }\r\n  });\r\n\r\n  // 跳转按钮\r\n  $(\"#var-system-jump-btn\").on(\"click\", async () => {\r\n    const floorNumber = parseInt($(\"#var-system-jump-input\").val(), 10);\r\n    if (Number.isNaN(floorNumber)) {\r\n      toastr.error(\"请输入有效的层号\");\r\n      return;\r\n    }\r\n\r\n    // 检查该层是否有快照\r\n    const hasSnapshot = await checkFloorHasSnapshot(floorNumber);\r\n    if (!hasSnapshot) {\r\n      toastr.error(`第 ${floorNumber} 层没有绑定快照`);\r\n      return;\r\n    }\r\n\r\n    // 更新下拉选择并加载\r\n    $(\"#var-system-floor-select\").val(floorNumber).trigger(\"change\");\r\n  });\r\n\r\n  // 刷新按钮\r\n  $(\"#var-system-refresh-snapshot-btn\").on(\"click\", async () => {\r\n    if (snapshotState.currentFloor !== null) {\r\n      await loadFloorSnapshot(snapshotState.currentFloor);\r\n      toastr.info(\"已刷新快照\");\r\n    }\r\n  });\r\n\r\n  // 保存快照\r\n  $(\"#var-system-save-snapshot-btn\").on(\"click\", async () => {\r\n    await saveSnapshot();\r\n  });\r\n\r\n  // 保存为全局快照\r\n  $(\"#var-system-save-as-global-btn\").on(\"click\", async () => {\r\n    await saveAsGlobalSnapshot();\r\n  });\r\n\r\n  // 导出 JSON\r\n  $(\"#var-system-export-snapshot-btn\").on(\"click\", async () => {\r\n    await exportSnapshot();\r\n  });\r\n\r\n  // 导入 JSON\r\n  $(\"#var-system-import-snapshot-btn\").on(\"click\", async () => {\r\n    await importSnapshot();\r\n  });\r\n\r\n  // 分离 Schema\r\n  $(\"#var-system-strip-schema-btn\").on(\"click\", async () => {\r\n    await stripSchemaFromMessageSnapshot();\r\n  });\r\n}\r\n\r\n/**\r\n * 加载楼层列表（只显示有快照的楼层）\r\n */\r\nasync function loadFloorList() {\r\n  const context = getContext();\r\n  const chat = context.chat;\r\n\r\n  if (!chat || chat.length === 0) {\r\n    $(\"#var-system-floor-select\").html(\r\n      '<option value=\"\">当前无聊天记录</option>',\r\n    );\r\n    return;\r\n  }\r\n\r\n  const $select = $(\"#var-system-floor-select\");\r\n  $select.empty();\r\n\r\n  let hasSnapshots = false;\r\n\r\n  // 遍历所有消息，只添加有快照标识符的楼层\r\n  for (let i = 0; i < chat.length; i++) {\r\n    const message = chat[i];\r\n\r\n    // 只处理 AI 消息\r\n    if (message.is_user) continue;\r\n\r\n    // 获取当前 swipe 的快照标识符\r\n    const swipeId = message.swipe_id || 0;\r\n    const snapshotId =\r\n      message.swipes_info?.[swipeId]?.st_var_system_snapshot_id;\r\n\r\n    if (snapshotId) {\r\n      hasSnapshots = true;\r\n      const $option = $(\"<option>\");\r\n      $option.val(i);\r\n      $option.text(`第 ${i} 层 - AI 消息 (Swipe ${swipeId})`);\r\n      $select.append($option);\r\n    }\r\n  }\r\n\r\n  if (!hasSnapshots) {\r\n    $select.html('<option value=\"\">暂无快照楼层</option>');\r\n  }\r\n}\r\n\r\n/**\r\n * 检查指定楼层是否有快照\r\n * @param {number} floorNumber - 楼层号\r\n * @returns {Promise<boolean>}\r\n */\r\nasync function checkFloorHasSnapshot(floorNumber) {\r\n  const context = getContext();\r\n  const chat = context.chat;\r\n\r\n  if (!chat || floorNumber >= chat.length) {\r\n    return false;\r\n  }\r\n\r\n  const message = chat[floorNumber];\r\n  if (message.is_user) {\r\n    return false;\r\n  }\r\n\r\n  const swipeId = message.swipe_id || 0;\r\n  const snapshotId = message.swipes_info?.[swipeId]?.st_var_system_snapshot_id;\r\n\r\n  return !!snapshotId;\r\n}\r\n\r\n/**\r\n * 加载指定楼层的快照\r\n * @param {number} floorNumber - 楼层号\r\n */\r\nasync function loadFloorSnapshot(floorNumber) {\r\n  const context = getContext();\r\n  const chat = context.chat;\r\n\r\n  if (!chat || floorNumber >= chat.length) {\r\n    toastr.error(\"无效的楼层号\");\r\n    return;\r\n  }\r\n\r\n  const message = chat[floorNumber];\r\n  const swipeId = message.swipe_id || 0;\r\n  const snapshotId = message.swipes_info?.[swipeId]?.st_var_system_snapshot_id;\r\n\r\n  if (!snapshotId) {\r\n    toastr.error(`第 ${floorNumber} 层没有绑定快照`);\r\n    return;\r\n  }\r\n\r\n  // 从插件加载快照\r\n  const snapshot = await fetchSnapshotFromPlugin(snapshotId);\r\n  if (!snapshot) {\r\n    toastr.error(\"加载快照失败\");\r\n    return;\r\n  }\r\n\r\n  // 更新状态\r\n  snapshotState.currentFloor = floorNumber;\r\n  snapshotState.currentSwipeId = swipeId;\r\n  snapshotState.currentSnapshotId = snapshotId;\r\n  snapshotState.draftBody = snapshot;\r\n  snapshotState.dirty = false;\r\n  snapshotState.hasErrors = false;\r\n\r\n  // 显示楼层信息\r\n  $(\"#var-system-current-floor-info\").show();\r\n  $(\"#current-floor-number\").text(floorNumber);\r\n  $(\"#current-swipe-id\").text(swipeId);\r\n  $(\"#current-snapshot-id\").text(snapshotId);\r\n\r\n  // 显示消息时间\r\n  const messageTime = message.send_date\r\n    ? new Date(message.send_date).toLocaleString(\"zh-CN\")\r\n    : \"未知\";\r\n  $(\"#current-message-time\").text(messageTime);\r\n\r\n  // 初始化编辑器\r\n  await initializeEditor(snapshot);\r\n\r\n  // 显示操作按钮\r\n  $(\"#var-system-snapshot-actions\").show();\r\n  $(\"#var-system-save-snapshot-btn\").prop(\"disabled\", true);\r\n}\r\n\r\n/**\r\n * 从插件获取快照\r\n * @param {string} snapshotId - 快照 ID\r\n * @returns {Promise<Object|null>}\r\n */\r\nasync function fetchSnapshotFromPlugin(snapshotId) {\r\n  try {\r\n    const response = await fetch(\r\n      `/api/plugins/var-manager/var-manager/snapshots/${snapshotId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          ...getRequestHeaders(),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n    );\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 404) {\r\n        console.warn(MODULE_NAME, `快照不存在: ${snapshotId}`);\r\n      } else {\r\n        console.error(\r\n          MODULE_NAME,\r\n          `读取快照失败 (${response.status}): ${snapshotId}`,\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.snapshot;\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"从插件读取快照时发生错误:\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 初始化编辑器\r\n * @param {Object} snapshot - 快照对象\r\n */\r\nasync function initializeEditor(snapshot) {\r\n  const container = document.getElementById(\r\n    \"var-system-snapshot-editor-container\",\r\n  );\r\n\r\n  // 移除空状态\r\n  $(container).find(\".var-system-empty-state\").remove();\r\n\r\n  // 如果编辑器已存在，销毁它\r\n  if (editorController) {\r\n    editorController.destroy();\r\n    editorController = null;\r\n  }\r\n\r\n  // 创建新编辑器（【修复】传入 options 对象并包含 onChange 回调）\r\n  editorController = createVariableBlockEditor({\r\n    container,\r\n    onChange: (content, _previousContent, metadata) => {\r\n      // 【调试】记录编辑器变化\r\n      console.log('[MessageSnapshots] Editor change:', {\r\n        hasContent: !!content,\r\n        hasJson: content?.json !== undefined,\r\n        jsonType: typeof content?.json,\r\n        hasContentErrors: !!metadata?.contentErrors?.length,\r\n        contentErrors: metadata?.contentErrors,\r\n      });\r\n\r\n      // 【修复】只有在 metadata 明确指示有解析错误时才报告错误\r\n      const hasErrors = Boolean(metadata?.contentErrors?.length);\r\n\r\n      snapshotState.hasErrors = hasErrors;\r\n      snapshotState.dirty = true;\r\n\r\n      // 【修复】只要 json 不是 undefined，就更新 draftBody\r\n      if (content?.json !== undefined) {\r\n        snapshotState.draftBody = content.json;\r\n      }\r\n\r\n      // 更新保存按钮状态\r\n      $(\"#var-system-save-snapshot-btn\").prop(\"disabled\", hasErrors);\r\n    },\r\n  });\r\n\r\n  await editorController.ensureReady();\r\n  editorController.set({ json: snapshot });\r\n}\r\n\r\n/**\r\n * 保存快照\r\n */\r\nasync function saveSnapshot() {\r\n  if (snapshotState.hasErrors) {\r\n    toastr.error(\"快照数据有错误，无法保存\");\r\n    return;\r\n  }\r\n\r\n  if (!snapshotState.dirty) {\r\n    toastr.info(\"快照未修改\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const snapshot = editorController.get();\r\n\r\n    // 调用插件更新快照（【修复】添加 CSRF headers）\r\n    const response = await fetch(\r\n      `/api/plugins/var-manager/var-manager/snapshots/${snapshotState.currentSnapshotId}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          ...getRequestHeaders(),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ snapshot }),\r\n      },\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`更新快照失败 (${response.status})`);\r\n    }\r\n\r\n    snapshotState.dirty = false;\r\n    $(\"#var-system-save-snapshot-btn\").prop(\"disabled\", true);\r\n\r\n    toastr.success(\"快照已保存\");\r\n\r\n    // 重新执行处理流程（更新聊天变量）\r\n    // TODO: 调用 reprocessFromMessage(snapshotState.currentFloor)\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"保存快照失败:\", error);\r\n    toastr.error(`保存失败：${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 保存为全局快照\r\n */\r\nasync function saveAsGlobalSnapshot() {\r\n  const snapshot = editorController.get();\r\n\r\n  // 弹窗输入标签\r\n  const tags = await callGenericPopup(\r\n    \"请输入标签（用逗号分隔）：\",\r\n    POPUP_TYPE.INPUT,\r\n    \"\",\r\n    { rows: 1 },\r\n  );\r\n\r\n  if (!tags) {\r\n    return;\r\n  }\r\n\r\n  const tagArray = tags\r\n    .split(\",\")\r\n    .map((t) => t.trim())\r\n    .filter((t) => t);\r\n\r\n  try {\r\n    // 调用全局快照 API（【修复】添加 CSRF headers）\r\n    const response = await fetch(\r\n      \"/api/plugins/var-manager/var-manager/global-snapshots\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          ...getRequestHeaders(),\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          snapshot,\r\n          tags: tagArray,\r\n        }),\r\n      },\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`保存失败 (${response.status})`);\r\n    }\r\n\r\n    toastr.success(\"已保存为全局快照\");\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"保存全局快照失败:\", error);\r\n    toastr.error(`保存失败：${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 导出快照\r\n */\r\nasync function exportSnapshot() {\r\n  const snapshot = editorController.get();\r\n\r\n  const json = JSON.stringify(snapshot, null, 2);\r\n  const blob = new Blob([json], { type: \"application/json\" });\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  const $a = $(\"<a>\");\r\n  $a.attr(\"href\", url);\r\n  $a.attr(\r\n    \"download\",\r\n    `snapshot-floor-${snapshotState.currentFloor}-${Date.now()}.json`,\r\n  );\r\n  $a[0].click();\r\n\r\n  URL.revokeObjectURL(url);\r\n\r\n  toastr.success(\"快照已导出\");\r\n}\r\n\r\n/**\r\n * 导入快照\r\n */\r\nasync function importSnapshot() {\r\n  // 创建文件输入元素\r\n  const $input = $(\"<input>\");\r\n  $input.attr(\"type\", \"file\");\r\n  $input.attr(\"accept\", \".json\");\r\n\r\n  return new Promise((resolve) => {\r\n    $input.on(\"change\", async (e) => {\r\n      const file = e.target.files?.[0];\r\n      if (!file) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const text = await file.text();\r\n        const snapshot = JSON.parse(text);\r\n\r\n        // 更新编辑器\r\n        editorController.set(snapshot);\r\n        snapshotState.draftBody = snapshot;\r\n        snapshotState.dirty = true;\r\n        $(\"#var-system-save-snapshot-btn\").prop(\"disabled\", false);\r\n\r\n        toastr.success(\"快照已导入（未保存）\");\r\n        resolve();\r\n      } catch (error) {\r\n        console.error(MODULE_NAME, \"导入快照失败:\", error);\r\n        toastr.error(`导入失败：${error.message}`);\r\n        resolve();\r\n      }\r\n    });\r\n\r\n    $input.click();\r\n  });\r\n}\r\n\r\n/**\r\n * 从当前编辑器内容中分离 MVU Schema\r\n */\r\nasync function stripSchemaFromMessageSnapshot() {\r\n  if (!editorController) {\r\n    toastr.error(\"编辑器尚未初始化\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const snapshot = editorController.get();\r\n\r\n    // 应用 schema 剥离\r\n    const stripped = stripMvuMetadata(snapshot);\r\n\r\n    // 更新编辑器\r\n    editorController.set(stripped);\r\n    snapshotState.draftBody = stripped;\r\n    snapshotState.dirty = true;\r\n    $(\"#var-system-save-snapshot-btn\").prop(\"disabled\", false);\r\n\r\n    toastr.success(\"已移除 MVU Schema 字段\");\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"分离 Schema 失败:\", error);\r\n    toastr.error(`分离 Schema 失败：${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 移除 MVU 元数据\r\n * @param {any} obj - 待处理的对象\r\n * @returns {any} 清理后的对象\r\n */\r\nfunction stripMvuMetadata(obj) {\r\n  if (Array.isArray(obj)) {\r\n    return obj\r\n      .filter((item) => item !== \"$__META_EXTENSIBLE__$\")\r\n      .map((item) => stripMvuMetadata(item));\r\n  } else if (_.isObject(obj) && !_.isDate(obj)) {\r\n    const result = {};\r\n    for (const key in obj) {\r\n      // 移除所有以 $ 开头的字段\r\n      if (!key.startsWith('$')) {\r\n        result[key] = stripMvuMetadata(obj[key]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  return obj;\r\n}\r\n","/**\r\n * @file reprocessButton.js\r\n * @description \"重新处理变量\"按钮 - 添加到消息扩展菜单\r\n * 功能：清除最后一层 AI 消息的快照标识符，重新运行处理流程\r\n */\r\n\r\nimport { getContext } from '@sillytavern/scripts/extensions';\r\nimport { saveChat } from '@sillytavern/script';\r\nimport { reprocessFromMessage } from \"../events/processor\";\r\n\r\nconst MODULE_NAME = \"[ST-VarSystemExtension/reprocessButton]\";\r\n\r\n// 重试计数器\r\nlet retryCount = 0;\r\nconst MAX_RETRIES = 10;\r\nconst RETRY_DELAY = 1000;\r\n\r\n/**\r\n * 初始化\"重新处理变量\"按钮\r\n */\r\nexport function initReprocessButton() {\r\n  console.log(MODULE_NAME, `初始化重新处理变量按钮 (尝试 ${retryCount + 1}/${MAX_RETRIES})`);\r\n\r\n  // 添加按钮到扩展消息按钮区域\r\n  const buttonHtml = `\r\n    <div\r\n      id=\"var-system-reprocess-btn\"\r\n      class=\"mes_button\"\r\n      title=\"重新处理变量系统快照\"\r\n      style=\"display: none;\"\r\n    >\r\n      <i class=\"fa-solid fa-rotate\"></i>\r\n      <span>重新处理变量</span>\r\n    </div>\r\n  `;\r\n\r\n  // 【改进】确保 extraMesButtons 容器存在，支持多次重试\r\n  if ($(\".extraMesButtons\").length === 0) {\r\n    retryCount++;\r\n    if (retryCount < MAX_RETRIES) {\r\n      console.warn(\r\n        MODULE_NAME,\r\n        `extraMesButtons 容器不存在，将在 ${RETRY_DELAY}ms 后重试 (${retryCount}/${MAX_RETRIES})`,\r\n      );\r\n      setTimeout(initReprocessButton, RETRY_DELAY);\r\n    } else {\r\n      console.error(\r\n        MODULE_NAME,\r\n        `extraMesButtons 容器在 ${MAX_RETRIES} 次重试后仍不存在，放弃初始化`,\r\n      );\r\n    }\r\n    return;\r\n  }\r\n\r\n  // 重置重试计数\r\n  retryCount = 0;\r\n\r\n  // 添加按钮（如果还没添加）\r\n  if ($(\"#var-system-reprocess-btn\").length === 0) {\r\n    $(\".extraMesButtons\").append(buttonHtml);\r\n    console.log(MODULE_NAME, \"重新处理变量按钮已添加到 DOM\");\r\n  } else {\r\n    console.log(MODULE_NAME, \"重新处理变量按钮已存在，跳过添加\");\r\n  }\r\n\r\n  // 绑定点击事件\r\n  $(document).off(\"click\", \"#var-system-reprocess-btn\");\r\n  $(document).on(\"click\", \"#var-system-reprocess-btn\", handleReprocessClick);\r\n\r\n  // 监听角色/聊天变化，动态显示/隐藏按钮\r\n  updateButtonVisibility();\r\n}\r\n\r\n/**\r\n * 处理\"重新处理变量\"按钮点击\r\n */\r\nasync function handleReprocessClick() {\r\n  console.log(MODULE_NAME, \"点击重新处理变量按钮\");\r\n\r\n  try {\r\n    const context = getContext();\r\n    const chat = context.chat;\r\n\r\n    if (!chat || chat.length === 0) {\r\n      toastr.warning(\"当前聊天为空\", \"变量系统\");\r\n      return;\r\n    }\r\n\r\n    // 检查变量系统是否启用\r\n    const character = context.characters[context.characterId];\r\n    const enabled =\r\n      character?.data?.extensions?.st_var_system?.enabled ?? false;\r\n\r\n    if (!enabled) {\r\n      toastr.warning(\"当前角色未启用变量系统\", \"变量系统\");\r\n      return;\r\n    }\r\n\r\n    // 找到最后一层 AI 消息\r\n    let lastAiMessageIndex = -1;\r\n    for (let i = chat.length - 1; i >= 0; i--) {\r\n      if (!chat[i].is_user) {\r\n        lastAiMessageIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (lastAiMessageIndex === -1) {\r\n      toastr.warning(\"没有找到 AI 消息\", \"变量系统\");\r\n      return;\r\n    }\r\n\r\n    const message = chat[lastAiMessageIndex];\r\n    const currentSwipeId = message.swipe_id || 0;\r\n\r\n    // 清除标识符（如果存在）\r\n    const snapshotId =\r\n      message.swipes_info?.[currentSwipeId]?.st_var_system_snapshot_id;\r\n\r\n    if (snapshotId) {\r\n      console.log(\r\n        MODULE_NAME,\r\n        `清除第 ${lastAiMessageIndex} 层 (swipe ${currentSwipeId}) 的快照标识符:`,\r\n        snapshotId,\r\n      );\r\n      delete message.swipes_info[currentSwipeId].st_var_system_snapshot_id;\r\n\r\n      // 保存聊天记录\r\n      await saveChat();\r\n    } else {\r\n      console.log(\r\n        MODULE_NAME,\r\n        `第 ${lastAiMessageIndex} 层 (swipe ${currentSwipeId}) 没有快照标识符，直接重新处理`,\r\n      );\r\n    }\r\n\r\n    // 重新处理该消息\r\n    toastr.info(\"开始重新处理变量...\", \"变量系统\");\r\n\r\n    await reprocessFromMessage(lastAiMessageIndex);\r\n\r\n    toastr.success(\"变量重新处理完成\", \"变量系统\");\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"重新处理变量失败:\", error);\r\n    toastr.error(`重新处理变量失败：${error.message}`, \"变量系统\");\r\n  }\r\n}\r\n\r\n/**\r\n * 更新按钮显示状态\r\n * 只在启用变量系统的角色聊天中显示\r\n */\r\nexport function updateButtonVisibility() {\r\n  try {\r\n    const context = getContext();\r\n    const character = context.characters?.[context.characterId];\r\n    const enabled =\r\n      character?.data?.extensions?.st_var_system?.enabled ?? false;\r\n    const hasChat = context.chat && context.chat.length > 0;\r\n\r\n    if (enabled && hasChat) {\r\n      $(\"#var-system-reprocess-btn\").show();\r\n    } else {\r\n      $(\"#var-system-reprocess-btn\").hide();\r\n    }\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"更新按钮显示状态失败:\", error);\r\n    $(\"#var-system-reprocess-btn\").hide();\r\n  }\r\n}\r\n","/**\r\n * 设置标签页管理模块\r\n * 负责设置界面的初始化和数据清理功能\r\n */\r\n\r\nconst MODULE_NAME = \"[ST-VarSystemExtension/settings]\";\r\n\r\n/**\r\n * 初始化设置标签页\r\n */\r\nexport async function initSettings() {\r\n  console.log(MODULE_NAME, \"初始化设置标签页\");\r\n\r\n  // 绑定清理按钮事件\r\n  $(\"#var-system-cleanup-snapshots-btn\").on(\"click\", handleCleanupSnapshots);\r\n}\r\n\r\n/**\r\n * 处理清理未使用快照的操作\r\n */\r\nasync function handleCleanupSnapshots() {\r\n  console.log(MODULE_NAME, \"开始清理未使用的快照\");\r\n\r\n  // 显示确认对话框\r\n  const confirmation = await callGenericPopup(\r\n    \"此操作会删除数据库中不对应任何现存聊天记录的快照。\\n\\n\" +\r\n      \"已删除的快照无法恢复，确定要继续吗？\",\r\n    POPUP_TYPE.CONFIRM,\r\n    \"\",\r\n    { okButton: \"确定\", cancelButton: \"取消\" },\r\n  );\r\n\r\n  if (confirmation !== POPUP_RESULT.AFFIRMATIVE) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // 禁用按钮，显示进度\r\n    $(\"#var-system-cleanup-snapshots-btn\").prop(\"disabled\", true);\r\n    $(\"#var-system-cleanup-progress\").show();\r\n    $(\"#var-system-cleanup-result\").hide();\r\n\r\n    updateCleanupProgress(0, \"正在扫描聊天记录文件...\");\r\n\r\n    // 1. 获取所有聊天记录文件名\r\n    const activeChatFiles = await getAllChatFiles();\r\n    console.log(MODULE_NAME, `找到 ${activeChatFiles.length} 个聊天记录文件`);\r\n\r\n    updateCleanupProgress(\r\n      50,\r\n      `找到 ${activeChatFiles.length} 个聊天记录文件，正在清理...`,\r\n    );\r\n\r\n    // 2. 调用插件 API 清理孤立快照\r\n    const result = await cleanupOrphanedSnapshots(activeChatFiles);\r\n\r\n    updateCleanupProgress(100, \"清理完成\");\r\n\r\n    // 3. 显示清理结果\r\n    setTimeout(() => {\r\n      $(\"#var-system-cleanup-progress\").hide();\r\n      showCleanupResult(result);\r\n    }, 500);\r\n\r\n    console.log(MODULE_NAME, \"清理完成\", result);\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"清理失败:\", error);\r\n    $(\"#var-system-cleanup-progress\").hide();\r\n    toastr.error(`清理失败：${error.message}`, \"变量系统\");\r\n  } finally {\r\n    $(\"#var-system-cleanup-snapshots-btn\").prop(\"disabled\", false);\r\n  }\r\n}\r\n\r\n/**\r\n * 更新清理进度\r\n * @param {number} percentage - 进度百分比 (0-100)\r\n * @param {string} text - 进度文本\r\n */\r\nfunction updateCleanupProgress(percentage, text) {\r\n  $(\"#var-system-cleanup-progress-fill\").css(\"width\", `${percentage}%`);\r\n  $(\"#var-system-cleanup-progress-text\").text(text);\r\n}\r\n\r\n/**\r\n * 显示清理结果\r\n * @param {Object} result - 清理结果\r\n * @param {number} result.deletedCount - 删除的快照数量\r\n * @param {number} result.totalScanned - 扫描的总快照数\r\n * @param {string[]} result.deletedChatFiles - 被清理的聊天文件列表\r\n */\r\nfunction showCleanupResult(result) {\r\n  const { deletedCount, totalScanned, deletedChatFiles } = result;\r\n\r\n  $(\"#var-system-cleanup-result\").show();\r\n\r\n  // 设置摘要\r\n  if (deletedCount === 0) {\r\n    $(\"#var-system-cleanup-result-summary\").html(\r\n      `<strong>未发现需要清理的快照</strong>`,\r\n    );\r\n    $(\"#var-system-cleanup-result-details\").text(\r\n      `扫描了 ${totalScanned} 个快照，全部关联到现存的聊天记录。`,\r\n    );\r\n  } else {\r\n    $(\"#var-system-cleanup-result-summary\").html(\r\n      `<strong>成功清理 ${deletedCount} 个孤立快照</strong>`,\r\n    );\r\n\r\n    const detailsText =\r\n      `扫描了 ${totalScanned} 个快照，清理了 ${deletedChatFiles.length} 个已删除聊天记录的快照。\\n` +\r\n      (deletedChatFiles.length > 0\r\n        ? `\\n已清理的聊天文件：\\n${deletedChatFiles.slice(0, 5).join(\"\\n\")}` +\r\n          (deletedChatFiles.length > 5\r\n            ? `\\n... 及其他 ${deletedChatFiles.length - 5} 个文件`\r\n            : \"\")\r\n        : \"\");\r\n\r\n    $(\"#var-system-cleanup-result-details\").text(detailsText);\r\n  }\r\n\r\n  toastr.success(`清理完成，删除了 ${deletedCount} 个孤立快照`, \"变量系统\");\r\n}\r\n\r\n/**\r\n * 获取所有聊天记录文件名\r\n * @returns {Promise<string[]>} 聊天记录文件名数组\r\n */\r\nasync function getAllChatFiles() {\r\n  try {\r\n    // 调用 SillyTavern API 获取所有聊天记录\r\n    const response = await fetch(\"/api/characters/chats\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`获取聊天记录失败: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(MODULE_NAME, \"聊天记录数据:\", data);\r\n\r\n    // 提取所有聊天文件名\r\n    // data 格式可能是: { \"Character1\": [\"chat1.jsonl\", \"chat2.jsonl\"], ... }\r\n    const chatFiles = [];\r\n    for (const characterName in data) {\r\n      const chats = data[characterName];\r\n      if (Array.isArray(chats)) {\r\n        for (const chatFileName of chats) {\r\n          // 移除 .jsonl 后缀，只保留文件名\r\n          const chatFile = chatFileName.replace(/\\.jsonl$/, \"\");\r\n          chatFiles.push(chatFile);\r\n        }\r\n      }\r\n    }\r\n\r\n    return chatFiles;\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"获取聊天记录文件失败:\", error);\r\n    throw new Error(\"无法获取聊天记录列表\");\r\n  }\r\n}\r\n\r\n/**\r\n * 调用插件 API 清理孤立快照\r\n * @param {string[]} activeChatFiles - 活跃的聊天文件名列表\r\n * @returns {Promise<Object>} 清理结果\r\n */\r\nasync function cleanupOrphanedSnapshots(activeChatFiles) {\r\n  try {\r\n    const response = await fetch(\r\n      \"/api/plugins/var-manager/var-manager/snapshots/cleanup\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"X-CSRF-Token\": await getCsrfToken(),\r\n        },\r\n        body: JSON.stringify({ activeChatFiles }),\r\n      },\r\n    );\r\n\r\n    if (response.status === 404) {\r\n      throw new Error(\"插件未安装或未启用\");\r\n    }\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(`插件 API 错误: ${response.status} - ${errorText}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error) {\r\n    console.error(MODULE_NAME, \"清理孤立快照失败:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * 获取 CSRF Token\r\n * @returns {Promise<string>} CSRF Token\r\n */\r\nasync function getCsrfToken() {\r\n  // 尝试从 window.token 获取\r\n  if (window.token) {\r\n    return window.token;\r\n  }\r\n\r\n  // 如果不存在，调用 API 获取\r\n  try {\r\n    const response = await fetch(\"/csrf-token\");\r\n    const data = await response.json();\r\n    window.token = data.token;\r\n    return data.token;\r\n  } catch (error) {\r\n    console.warn(MODULE_NAME, \"获取 CSRF Token 失败，使用空字符串\", error);\r\n    return \"\";\r\n  }\r\n}\r\n","import \"@/global.css\";\r\nimport {\r\n  renderExtensionTemplateAsync,\r\n  writeExtensionField,\r\n} from \"@sillytavern/scripts/extensions\";\r\nimport { event_types, eventSource, getRequestHeaders } from \"@sillytavern/script\";\r\nimport { callGenericPopup, POPUP_TYPE } from \"@sillytavern/scripts/popup\";\r\nimport { createVariableBlockEditor } from \"@/editor/variableBlockEditor\";\r\nimport {\r\n  registerEventListeners,\r\n  unregisterEventListeners,\r\n} from \"@/events/index\";\r\nimport { initFunctionLibrary } from \"@/ui/functionLibrary\";\r\nimport { initMessageSnapshots } from \"@/ui/messageSnapshots\";\r\nimport {\r\n  initReprocessButton,\r\n  updateButtonVisibility,\r\n} from \"@/ui/reprocessButton\";\r\nimport { initSettings } from \"@/ui/settings\";\r\n\r\nconst EXTENSION_NAMESPACE = \"st-var-system\";\r\nconst EXTENSION_LOG_PREFIX = \"[ST-VarSystemExtension]\";\r\nconst TEMPLATE_EXTENSION_KEY = \"st_var_system\";\r\nconst TEMPLATE_EDITOR_CONTAINER_ID = \"var_system_template_editor\";\r\nconst TEMPLATE_STATUS_ID = \"var_system_template_status\";\r\nconst TEMPLATE_SAVE_ID = \"var_system_template_save\";\r\nconst TEMPLATE_SAVE_AS_GLOBAL_ID = \"var_system_template_save_as_global\";\r\nconst TEMPLATE_DISCARD_ID = \"var_system_template_discard\";\r\nconst TEMPLATE_RELOAD_ID = \"var_system_template_reload\";\r\nconst TEMPLATE_CLEAR_ID = \"var_system_template_clear\";\r\nconst TEMPLATE_ENABLED_TOGGLE_ID = \"var_system_template_enabled\";\r\n\r\n// 简化后的模板状态：只保留最小必要字段\r\nconst templateState = {\r\n  editorController: null,\r\n  currentCharacterId: null,\r\n  templateBody: null, // 角色卡中保存的模板 JSON\r\n  draftBody: null, // 编辑器中的副本\r\n  enabled: false, // 是否启用变量系统\r\n  dirty: false, // 是否有未保存修改\r\n  hasErrors: false, // JSON 编辑器是否有错误\r\n  loading: false, // 是否正在加载\r\n};\r\n\r\nconst JSON_EDITOR_VERSION = \"3.10.0\";\r\nconst JSON_EDITOR_STYLE_URL = `https://cdn.jsdelivr.net/npm/vanilla-jsoneditor@${JSON_EDITOR_VERSION}/themes/jse-theme-dark.css`;\r\nconst JSON_EDITOR_SCRIPT_URL = `https://cdn.jsdelivr.net/npm/vanilla-jsoneditor@${JSON_EDITOR_VERSION}/standalone.js`;\r\nlet templateButtons = null;\r\nlet pendingTemplateRefresh = null;\r\n\r\nconst STATUS_COLORS = {\r\n  success: \"#6ee7b7\",\r\n  error: \"#fca5a5\",\r\n  warn: \"#fbbf24\",\r\n  info: \"var(--SmartThemeBodyColor, #aaa)\",\r\n};\r\n\r\nfunction bindTemplateSection(rootElement) {\r\n  if (!rootElement || templateButtons) {\r\n    return;\r\n  }\r\n\r\n  templateButtons = {\r\n    save: rootElement.querySelector(`#${TEMPLATE_SAVE_ID}`),\r\n    saveAsGlobal: rootElement.querySelector(`#${TEMPLATE_SAVE_AS_GLOBAL_ID}`),\r\n    discard: rootElement.querySelector(`#${TEMPLATE_DISCARD_ID}`),\r\n    reload: rootElement.querySelector(`#${TEMPLATE_RELOAD_ID}`),\r\n    status: rootElement.querySelector(`#${TEMPLATE_STATUS_ID}`),\r\n    clear: rootElement.querySelector(`#${TEMPLATE_CLEAR_ID}`),\r\n    enableToggle: rootElement.querySelector(`#${TEMPLATE_ENABLED_TOGGLE_ID}`),\r\n  };\r\n\r\n  templateButtons.save?.addEventListener(\"click\", () => {\r\n    void saveCurrentTemplate();\r\n  });\r\n\r\n  templateButtons.saveAsGlobal?.addEventListener(\"click\", () => {\r\n    void saveTemplateAsGlobalSnapshot();\r\n  });\r\n\r\n  templateButtons.discard?.addEventListener(\"click\", () => {\r\n    void discardTemplateChanges();\r\n  });\r\n\r\n  templateButtons.reload?.addEventListener(\"click\", () => {\r\n    void refreshTemplateForActiveCharacter(true);\r\n  });\r\n\r\n  templateButtons.clear?.addEventListener(\"click\", () => {\r\n    void clearTemplateForActiveCharacter();\r\n  });\r\n\r\n  templateButtons.enableToggle?.addEventListener(\"change\", (event) => {\r\n    const isChecked = Boolean(event.target?.checked);\r\n    void setEnabledForActiveCharacter(isChecked);\r\n  });\r\n\r\n  // 导入/导出/分离 Schema 按钮\r\n  const exportBtn = rootElement.querySelector('#var_system_template_export');\r\n  const importBtn = rootElement.querySelector('#var_system_template_import');\r\n  const stripSchemaBtn = rootElement.querySelector('#var_system_template_strip_schema');\r\n\r\n  exportBtn?.addEventListener('click', () => {\r\n    void exportTemplate();\r\n  });\r\n\r\n  importBtn?.addEventListener('click', () => {\r\n    void importTemplate();\r\n  });\r\n\r\n  stripSchemaBtn?.addEventListener('click', () => {\r\n    void stripSchemaFromTemplate();\r\n  });\r\n\r\n  updateTemplateStatus(\"尚未加载模板\", \"info\");\r\n  updateTemplateControls();\r\n}\r\n\r\nfunction updateTemplateStatus(message, level = \"info\") {\r\n  const element =\r\n    templateButtons?.status || document.getElementById(TEMPLATE_STATUS_ID);\r\n  if (!element) {\r\n    return;\r\n  }\r\n\r\n  element.textContent = message ?? \"\";\r\n  element.style.color = STATUS_COLORS[level] ?? STATUS_COLORS.info;\r\n}\r\n\r\nfunction updateTemplateControls() {\r\n  if (!templateButtons) {\r\n    return;\r\n  }\r\n\r\n  const hasTemplate = templateState.templateBody !== null;\r\n  const disableAll = templateState.loading || !templateState.draftBody;\r\n\r\n  if (templateButtons.save) {\r\n    templateButtons.save.disabled =\r\n      disableAll || templateState.hasErrors || !templateState.dirty;\r\n  }\r\n\r\n  if (templateButtons.discard) {\r\n    templateButtons.discard.disabled =\r\n      disableAll || !hasTemplate || !templateState.dirty;\r\n  }\r\n\r\n  if (templateButtons.reload) {\r\n    templateButtons.reload.disabled = templateState.loading;\r\n  }\r\n\r\n  if (templateButtons.clear) {\r\n    templateButtons.clear.disabled = templateState.loading || !hasTemplate;\r\n  }\r\n\r\n  updateEnableToggleUI();\r\n}\r\n\r\nfunction updateEnableToggleUI() {\r\n  if (!templateButtons?.enableToggle) {\r\n    return;\r\n  }\r\n\r\n  const shouldDisable =\r\n    templateState.loading || !templateState.currentCharacterId;\r\n  templateButtons.enableToggle.disabled = shouldDisable;\r\n  templateButtons.enableToggle.checked = Boolean(templateState.enabled);\r\n}\r\n\r\nfunction scheduleTemplateRefresh(force = false) {\r\n  if (pendingTemplateRefresh !== null) {\r\n    clearTimeout(pendingTemplateRefresh);\r\n  }\r\n\r\n  pendingTemplateRefresh = setTimeout(() => {\r\n    pendingTemplateRefresh = null;\r\n    void refreshTemplateForActiveCharacter(force);\r\n  }, 0);\r\n}\r\n\r\nfunction cloneJSON(value) {\r\n  if (value == null) {\r\n    return value;\r\n  }\r\n\r\n  if (typeof structuredClone === \"function\") {\r\n    return structuredClone(value);\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(value));\r\n}\r\n\r\nfunction buildDefaultTemplate(_character) {\r\n  // 直接返回空对象，不需要 metadata 和 variables 包装\r\n  return {};\r\n}\r\n\r\nasync function ensureEditorInstance({ readOnly = false } = {}) {\r\n  const container = document.getElementById(TEMPLATE_EDITOR_CONTAINER_ID);\r\n\r\n  if (!container) {\r\n    return null;\r\n  }\r\n\r\n  if (!templateState.editorController) {\r\n    templateState.editorController = createVariableBlockEditor({\r\n      container,\r\n      initialValue: templateState.draftBody ?? {},\r\n      styleUrl: JSON_EDITOR_STYLE_URL,\r\n      scriptUrl: JSON_EDITOR_SCRIPT_URL,\r\n      readOnly,\r\n      onChange: handleEditorChange,\r\n      onFallback: () => {\r\n        updateTemplateStatus(\r\n          \"JSON 编辑器资源加载失败，已降级为纯文本模式。\",\r\n          \"warn\",\r\n        );\r\n        updateTemplateControls();\r\n      },\r\n    });\r\n  } else {\r\n    templateState.editorController.setContainer(container);\r\n  }\r\n\r\n  try {\r\n    await templateState.editorController.ensureReady();\r\n  } catch (error) {\r\n    console.error(EXTENSION_LOG_PREFIX, \"初始化编辑器失败\", error);\r\n    return null;\r\n  }\r\n\r\n  return templateState.editorController;\r\n}\r\n\r\nfunction handleEditorChange(content, _previousContent, metadata) {\r\n  // 【调试】记录编辑器变化的详细信息\r\n  console.log('[ST-VarSystemExtension] handleEditorChange:', {\r\n    hasContent: !!content,\r\n    hasJson: content?.json !== undefined,\r\n    jsonType: typeof content?.json,\r\n    hasContentErrors: !!metadata?.contentErrors?.length,\r\n    contentErrors: metadata?.contentErrors,\r\n  });\r\n\r\n  // 【修复】只有在 metadata 明确指示有解析错误时才报告错误\r\n  // 移除 content?.json === undefined 的检查，因为合法的 JSON 值可能是 null、{}、[] 等\r\n  const hasErrors = Boolean(metadata?.contentErrors?.length);\r\n\r\n  templateState.hasErrors = hasErrors;\r\n  templateState.dirty = true;\r\n\r\n  // 【修复】只要 json 不是 undefined，就更新 draftBody（包括 null、{}、[] 等合法值）\r\n  if (content?.json !== undefined) {\r\n    templateState.draftBody = cloneJSON(content.json);\r\n  }\r\n\r\n  updateTemplateControls();\r\n  updateTemplateStatus(\r\n    hasErrors ? \"JSON 无法解析，请检查错误。\" : \"模板已修改，尚未保存。\",\r\n    hasErrors ? \"error\" : \"warn\",\r\n  );\r\n}\r\n\r\nasync function discardTemplateChanges() {\r\n  if (!templateState.templateBody) {\r\n    updateTemplateStatus(\"没有可恢复的模板版本。\", \"warn\");\r\n    return;\r\n  }\r\n\r\n  templateState.draftBody = cloneJSON(templateState.templateBody);\r\n  templateState.dirty = false;\r\n  templateState.hasErrors = false;\r\n\r\n  const controller = await ensureEditorInstance();\r\n  if (controller) {\r\n    controller.setValue(templateState.draftBody ?? {}, { silent: true });\r\n  }\r\n\r\n  updateTemplateControls();\r\n  updateTemplateStatus(\"已恢复为最后保存的模板。\", \"info\");\r\n}\r\n\r\nasync function refreshTemplateForActiveCharacter(force = false) {\r\n  const context = window.SillyTavern.getContext();\r\n  const activeCharacterId = context.characterId;\r\n\r\n  if (activeCharacterId == null) {\r\n    templateState.currentCharacterId = null;\r\n    templateState.templateBody = null;\r\n    templateState.draftBody = null;\r\n    templateState.enabled = false;\r\n    templateState.dirty = false;\r\n    templateState.hasErrors = false;\r\n    templateState.loading = false;\r\n\r\n    if (templateState.editorController) {\r\n      templateState.editorController.setValue({}, { silent: true });\r\n    }\r\n\r\n    updateTemplateStatus(\"请选择角色后再编辑模板。\", \"warn\");\r\n    updateTemplateControls();\r\n    return;\r\n  }\r\n\r\n  if (!force && templateState.currentCharacterId === activeCharacterId) {\r\n    return;\r\n  }\r\n\r\n  templateState.loading = true;\r\n  updateTemplateControls();\r\n  updateTemplateStatus(\"模板加载中……\", \"info\");\r\n\r\n  try {\r\n    const controller = await ensureEditorInstance();\r\n\r\n    const character = context.characters?.[activeCharacterId];\r\n    const extensionData =\r\n      character?.data?.extensions?.[TEMPLATE_EXTENSION_KEY] ?? null;\r\n\r\n    const hasTemplate = Boolean(extensionData?.templateBody);\r\n    const loadedBody = hasTemplate\r\n      ? extensionData.templateBody\r\n      : buildDefaultTemplate(character);\r\n\r\n    templateState.currentCharacterId = activeCharacterId;\r\n    templateState.templateBody = hasTemplate ? cloneJSON(loadedBody) : null;\r\n    templateState.draftBody = cloneJSON(loadedBody);\r\n    templateState.enabled = Boolean(extensionData?.enabled);\r\n    templateState.dirty = !hasTemplate;\r\n    templateState.hasErrors = false;\r\n\r\n    if (controller) {\r\n      controller.setValue(templateState.draftBody ?? {}, { silent: true });\r\n    }\r\n\r\n    const statusMessage = hasTemplate\r\n      ? \"模板已加载。\"\r\n      : \"已为该角色准备默认模板，请完善后保存。\";\r\n\r\n    updateTemplateStatus(statusMessage, hasTemplate ? \"info\" : \"warn\");\r\n  } catch (error) {\r\n    console.error(EXTENSION_LOG_PREFIX, \"加载模板失败\", error);\r\n    updateTemplateStatus(`加载模板失败：${error?.message ?? error}`, \"error\");\r\n  } finally {\r\n    templateState.loading = false;\r\n    updateTemplateControls();\r\n  }\r\n}\r\n\r\nasync function setEnabledForActiveCharacter(nextEnabled) {\r\n  const context = window.SillyTavern.getContext();\r\n  const characterId = context.characterId;\r\n\r\n  if (characterId == null) {\r\n    updateTemplateStatus(\"未选择角色，无法修改启用状态。\", \"error\");\r\n    updateEnableToggleUI();\r\n    return;\r\n  }\r\n\r\n  if (templateState.loading) {\r\n    updateEnableToggleUI();\r\n    return;\r\n  }\r\n\r\n  const previousValue = templateState.enabled;\r\n  templateState.enabled = Boolean(nextEnabled);\r\n  templateState.loading = true;\r\n  updateTemplateControls();\r\n  updateTemplateStatus(\r\n    templateState.enabled ? \"正在启用变量系统……\" : \"正在停用变量系统……\",\r\n    \"info\",\r\n  );\r\n\r\n  try {\r\n    const payload = {\r\n      enabled: templateState.enabled,\r\n    };\r\n\r\n    if (templateState.templateBody) {\r\n      payload.templateBody = cloneJSON(templateState.templateBody);\r\n    }\r\n\r\n    await writeExtensionField(characterId, TEMPLATE_EXTENSION_KEY, payload);\r\n\r\n    updateTemplateStatus(\r\n      templateState.enabled\r\n        ? \"变量系统已为该角色启用。\"\r\n        : \"变量系统已为该角色停用。\",\r\n      \"success\",\r\n    );\r\n  } catch (error) {\r\n    console.error(EXTENSION_LOG_PREFIX, \"更新启用状态失败\", error);\r\n    templateState.enabled = previousValue;\r\n    updateTemplateStatus(\r\n      `更新启用状态失败：${error?.message ?? error}`,\r\n      \"error\",\r\n    );\r\n  } finally {\r\n    templateState.loading = false;\r\n    updateEnableToggleUI();\r\n    updateTemplateControls();\r\n  }\r\n}\r\n\r\nasync function clearTemplateForActiveCharacter() {\r\n  const context = window.SillyTavern.getContext();\r\n  const characterId = context.characterId;\r\n\r\n  if (characterId == null) {\r\n    updateTemplateStatus(\"未选择角色，无法清空模板。\", \"error\");\r\n    return;\r\n  }\r\n\r\n  if (!templateState.templateBody) {\r\n    updateTemplateStatus(\"当前没有保存的模板，无需清空。\", \"info\");\r\n    return;\r\n  }\r\n\r\n  const confirmationMessage =\r\n    \"确定要清空模板吗？这会从角色卡中移除模板字段，但不会改变启用状态。\";\r\n  const confirmed =\r\n    window.confirm?.(confirmationMessage) ?? confirm(confirmationMessage);\r\n\r\n  if (!confirmed) {\r\n    updateTemplateStatus(\"已取消清空模板。\", \"info\");\r\n    return;\r\n  }\r\n\r\n  templateState.loading = true;\r\n  updateTemplateControls();\r\n  updateTemplateStatus(\"正在清空模板……\", \"info\");\r\n\r\n  try {\r\n    const payload = {\r\n      enabled: templateState.enabled,\r\n    };\r\n\r\n    await writeExtensionField(characterId, TEMPLATE_EXTENSION_KEY, payload);\r\n\r\n    const character = context.characters?.[characterId];\r\n    const controller = await ensureEditorInstance();\r\n    const defaultTemplate = buildDefaultTemplate(character);\r\n\r\n    templateState.templateBody = null;\r\n    templateState.draftBody = cloneJSON(defaultTemplate);\r\n    templateState.dirty = true;\r\n    templateState.hasErrors = false;\r\n\r\n    if (controller) {\r\n      controller.setValue(defaultTemplate, { silent: false });\r\n    }\r\n\r\n    updateTemplateStatus(\r\n      \"模板字段已清空，编辑器已恢复默认骨架，请视需要重新保存。\",\r\n      \"warn\",\r\n    );\r\n  } catch (error) {\r\n    console.error(EXTENSION_LOG_PREFIX, \"清空模板失败\", error);\r\n    updateTemplateStatus(`清空模板失败：${error?.message ?? error}`, \"error\");\r\n  } finally {\r\n    templateState.loading = false;\r\n    updateTemplateControls();\r\n  }\r\n}\r\n\r\nasync function saveCurrentTemplate() {\r\n  if (templateState.hasErrors) {\r\n    updateTemplateStatus(\"存在未解决的 JSON 错误，无法保存。\", \"error\");\r\n    return;\r\n  }\r\n\r\n  const controller = await ensureEditorInstance();\r\n  if (!controller) {\r\n    updateTemplateStatus(\"编辑器尚未准备就绪。\", \"error\");\r\n    return;\r\n  }\r\n\r\n  const content = controller.get();\r\n  const json = content?.json;\r\n\r\n  if (json === undefined) {\r\n    updateTemplateStatus(\"请修复模板中的错误后再保存。\", \"error\");\r\n    return;\r\n  }\r\n\r\n  const context = window.SillyTavern.getContext();\r\n  const characterId = context.characterId;\r\n\r\n  if (characterId == null) {\r\n    updateTemplateStatus(\"未选择角色，无法保存模板。\", \"error\");\r\n    return;\r\n  }\r\n\r\n  templateState.loading = true;\r\n  updateTemplateControls();\r\n  updateTemplateStatus(\"模板保存中……\", \"info\");\r\n\r\n  try {\r\n    const payload = {\r\n      templateBody: json,\r\n      enabled: templateState.enabled,\r\n    };\r\n\r\n    await writeExtensionField(characterId, TEMPLATE_EXTENSION_KEY, payload);\r\n\r\n    templateState.templateBody = cloneJSON(json);\r\n    templateState.draftBody = cloneJSON(json);\r\n    templateState.dirty = false;\r\n    templateState.hasErrors = false;\r\n\r\n    updateTemplateStatus(\"模板已保存。\", \"success\");\r\n  } catch (error) {\r\n    console.error(EXTENSION_LOG_PREFIX, \"保存模板失败\", error);\r\n    updateTemplateStatus(`保存模板失败：${error?.message ?? error}`, \"error\");\r\n  } finally {\r\n    templateState.loading = false;\r\n    updateTemplateControls();\r\n  }\r\n}\r\n\r\n/**\r\n * 将当前角色模板保存为全局快照\r\n */\r\nasync function saveTemplateAsGlobalSnapshot() {\r\n  const context = window.SillyTavern.getContext();\r\n  if (!context.characterId) {\r\n    await callGenericPopup(\"请先选择一个角色\", POPUP_TYPE.TEXT, \"\", {\r\n      okButton: \"确定\",\r\n    });\r\n    return;\r\n  }\r\n\r\n  // 检查是否有有效的模板内容\r\n  const controller = await ensureEditorInstance();\r\n  if (!controller) {\r\n    updateTemplateStatus(\"编辑器尚未准备就绪。\", \"error\");\r\n    return;\r\n  }\r\n\r\n  const content = controller.get();\r\n  const json = content?.json;\r\n\r\n  if (json === undefined || !json) {\r\n    await callGenericPopup(\r\n      \"当前模板为空或有错误，无法保存为全局快照\",\r\n      POPUP_TYPE.TEXT,\r\n      \"\",\r\n      { okButton: \"确定\" },\r\n    );\r\n    return;\r\n  }\r\n\r\n  // 获取角色名称作为默认快照名称\r\n  const character = context.characters?.[context.characterId];\r\n  const defaultName = character?.name ? `${character.name}的模板` : \"角色模板\";\r\n\r\n  // 请求用户输入快照名称\r\n  const snapshotName = await callGenericPopup(\r\n    \"请输入全局快照的名称：\",\r\n    POPUP_TYPE.INPUT,\r\n    defaultName,\r\n    { okButton: \"保存\", cancelButton: \"取消\" },\r\n  );\r\n\r\n  if (!snapshotName) {\r\n    return; // 用户取消\r\n  }\r\n\r\n  try {\r\n    updateTemplateStatus(\"正在保存为全局快照...\", \"info\");\r\n\r\n    // 调用插件 API 保存\r\n    const payload = {\r\n      name: snapshotName,\r\n      description: `从角色\"${character?.name || \"未知\"}\"的模板创建`,\r\n      tags: [\"角色模板\", character?.name].filter(Boolean),\r\n      snapshotBody: json,\r\n    };\r\n\r\n    await callPluginAPI(\"/global-snapshots\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    updateTemplateStatus(`已保存为全局快照：\"${snapshotName}\"`, \"success\");\r\n\r\n    console.log(\r\n      `${EXTENSION_LOG_PREFIX} 角色模板已保存为全局快照:`,\r\n      snapshotName,\r\n    );\r\n\r\n    // 提示用户并询问是否切换到全局快照标签页\r\n    const switchTab = await callGenericPopup(\r\n      `全局快照\"${snapshotName}\"已创建成功！\\n\\n是否切换到全局快照标签页查看？`,\r\n      POPUP_TYPE.CONFIRM,\r\n      \"\",\r\n      { okButton: \"查看\", cancelButton: \"留在这里\" },\r\n    );\r\n\r\n    if (switchTab) {\r\n      // 切换到全局快照标签页\r\n      document.getElementById(\"var_system_tab_global\")?.click();\r\n      // 刷新快照列表\r\n      await loadGlobalSnapshots();\r\n    }\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 保存为全局快照失败:`, error);\r\n\r\n    let errorMsg = \"保存失败\";\r\n    if (error.message.includes(\"插件未安装\")) {\r\n      errorMsg =\r\n        \"插件未安装或未启用。\\n\\n全局快照功能需要安装 ST-VarSystemPlugin 插件。\";\r\n    } else {\r\n      errorMsg = `保存失败: ${error.message}`;\r\n    }\r\n\r\n    updateTemplateStatus(errorMsg, \"error\");\r\n\r\n    await callGenericPopup(errorMsg, POPUP_TYPE.TEXT, \"\", {\r\n      okButton: \"关闭\",\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 导出角色模板为 JSON 文件\r\n */\r\nasync function exportTemplate() {\r\n  const controller = await ensureEditorInstance();\r\n  if (!controller) {\r\n    toastr.error('编辑器尚未准备就绪');\r\n    return;\r\n  }\r\n\r\n  const content = controller.get();\r\n  const json = content?.json;\r\n\r\n  if (json === undefined) {\r\n    toastr.error('请修复模板中的错误后再导出');\r\n    return;\r\n  }\r\n\r\n  const context = window.SillyTavern.getContext();\r\n  const character = context.characters?.[context.characterId];\r\n  const characterName = character?.name || 'unknown';\r\n  const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, 19);\r\n  const filename = `template_${characterName}_${timestamp}.json`;\r\n\r\n  exportJSONToFile(json, filename);\r\n  toastr.success(`已导出：${filename}`);\r\n}\r\n\r\n/**\r\n * 从 JSON 文件导入角色模板\r\n */\r\nasync function importTemplate() {\r\n  const data = await importJSONFromFile();\r\n  if (!data) {\r\n    return; // 用户取消或导入失败\r\n  }\r\n\r\n  const controller = await ensureEditorInstance();\r\n  if (!controller) {\r\n    toastr.error('编辑器尚未准备就绪');\r\n    return;\r\n  }\r\n\r\n  // 标准化导入的数据（处理旧格式，但不剥离 schema）\r\n  const normalized = normalizeSnapshotBody(data, false);\r\n\r\n  // 更新编辑器\r\n  controller.set({ json: normalized });\r\n\r\n  // 标记为已修改\r\n  templateState.dirty = true;\r\n  templateState.draftBody = cloneJSON(normalized);\r\n  updateTemplateControls();\r\n\r\n  toastr.success('JSON 已导入到编辑器');\r\n}\r\n\r\n/**\r\n * 从当前编辑器内容中分离 MVU Schema\r\n */\r\nasync function stripSchemaFromTemplate() {\r\n  const controller = await ensureEditorInstance();\r\n  if (!controller) {\r\n    toastr.error('编辑器尚未准备就绪');\r\n    return;\r\n  }\r\n\r\n  const content = controller.get();\r\n  const json = content?.json;\r\n\r\n  if (json === undefined) {\r\n    toastr.error('请修复模板中的错误后再分离 Schema');\r\n    return;\r\n  }\r\n\r\n  // 应用 schema 剥离\r\n  const stripped = stripMvuSchema(json);\r\n\r\n  // 更新编辑器\r\n  controller.set({ json: stripped });\r\n\r\n  // 标记为已修改\r\n  templateState.dirty = true;\r\n  templateState.draftBody = cloneJSON(stripped);\r\n  updateTemplateControls();\r\n\r\n  toastr.success('已移除 MVU Schema 字段');\r\n}\r\n\r\nfunction onContextChanged() {\r\n  scheduleTemplateRefresh(true);\r\n}\r\n\r\nfunction animateDrawer(element, shouldOpen) {\r\n  const editor = window.EDITOR;\r\n  if (editor?.slideToggle) {\r\n    const options = {\r\n      ...(editor.getSlideToggleOptions?.() ?? {}),\r\n      onAnimationEnd: (el) => {\r\n        el.closest(\".drawer-content\")?.classList.remove(\"resizing\");\r\n      },\r\n    };\r\n    element.classList.add(\"resizing\");\r\n    editor.slideToggle(element, options);\r\n    return;\r\n  }\r\n\r\n  const $el = $(element);\r\n  if (shouldOpen) {\r\n    $el.stop(true, true).slideDown(200);\r\n  } else {\r\n    $el.stop(true, true).slideUp(200);\r\n  }\r\n}\r\n\r\nfunction closeDrawer($icon, $content) {\r\n  if (!$icon.hasClass(\"openIcon\")) {\r\n    return;\r\n  }\r\n\r\n  $icon.toggleClass(\"openIcon closedIcon\");\r\n  $content.toggleClass(\"openDrawer closedDrawer\");\r\n  animateDrawer($content.get(0), false);\r\n}\r\n\r\nfunction openDrawer($icon, $content) {\r\n  if ($icon.hasClass(\"openIcon\")) {\r\n    return;\r\n  }\r\n\r\n  // 关闭其他已经打开的抽屉，保持与主题样式一致\r\n  $(\".drawer-icon.openIcon\")\r\n    .not($icon)\r\n    .each((_, icon) => {\r\n      const $otherIcon = $(icon);\r\n      const $otherContent = $otherIcon\r\n        .closest(\".drawer\")\r\n        .find(\".drawer-content\")\r\n        .first();\r\n      closeDrawer($otherIcon, $otherContent);\r\n    });\r\n\r\n  $icon.toggleClass(\"closedIcon openIcon\");\r\n  $content.toggleClass(\"closedDrawer openDrawer\");\r\n  animateDrawer($content.get(0), true);\r\n}\r\n\r\n// ============================================================================\r\n// 标签页切换功能\r\n// ============================================================================\r\n\r\nlet currentTab = \"character\";\r\n\r\nfunction switchTab(tabName) {\r\n  if (currentTab === tabName) return;\r\n\r\n  currentTab = tabName;\r\n\r\n  // 更新标签按钮样式\r\n  document.querySelectorAll(\".var-system-tab\").forEach((btn) => {\r\n    const isActive = btn.dataset.tab === tabName;\r\n    if (isActive) {\r\n      btn.classList.add(\"active\");\r\n      btn.style.borderBottomColor = \"var(--SmartThemeQuoteColor, #4a9eff)\";\r\n      btn.style.color = \"var(--SmartThemeQuoteColor, #4a9eff)\";\r\n    } else {\r\n      btn.classList.remove(\"active\");\r\n      btn.style.borderBottomColor = \"transparent\";\r\n      btn.style.color = \"var(--SmartThemeBodyColor, inherit)\";\r\n    }\r\n  });\r\n\r\n  // 切换内容区域（只选择顶层容器，避免影响动态加载的内容）\r\n  document\r\n    .querySelectorAll(\".var-system-tab-content[data-tab]\")\r\n    .forEach((content) => {\r\n      if (content.dataset.tab === tabName) {\r\n        content.style.display = \"flex\";\r\n      } else {\r\n        content.style.display = \"none\";\r\n      }\r\n    });\r\n\r\n  console.log(`${EXTENSION_LOG_PREFIX} 切换到标签页: ${tabName}`);\r\n\r\n  // 标签页切换后的初始化逻辑\r\n  if (tabName === \"global\") {\r\n    // 全局快照：自动加载快照列表\r\n    void loadGlobalSnapshots();\r\n  } else if (tabName === \"functions\") {\r\n    // 函数库：可以在这里触发刷新等操作\r\n    console.log(`${EXTENSION_LOG_PREFIX} 函数库标签页已激活`);\r\n  } else if (tabName === \"messages\") {\r\n    // 楼层快照：可以在这里触发刷新等操作\r\n    console.log(`${EXTENSION_LOG_PREFIX} 楼层快照标签页已激活`);\r\n  }\r\n}\r\n\r\nfunction bindTabSwitching(rootElement) {\r\n  const tabButtons = rootElement.querySelectorAll(\".var-system-tab\");\r\n  tabButtons.forEach((btn) => {\r\n    btn.addEventListener(\"click\", () => {\r\n      switchTab(btn.dataset.tab);\r\n    });\r\n  });\r\n}\r\n\r\n// ============================================================================\r\n// 全局快照功能\r\n// ============================================================================\r\n\r\nconst PLUGIN_BASE_URL = \"/api/plugins/var-manager/var-manager\";\r\n\r\nconst snapshotsState = {\r\n  snapshots: [],\r\n  filteredSnapshots: [],\r\n  searchQuery: \"\",\r\n  selectedTag: \"\",\r\n  loading: false,\r\n  // 编辑器状态\r\n  viewMode: \"list\", // \"list\" | \"editor\"\r\n  editorController: null,\r\n  editingSnapshotId: null, // null 表示新建，否则是编辑现有快照\r\n  draftSnapshot: null, // 编辑中的快照数据\r\n};\r\n\r\nlet snapshotButtons = null;\r\nlet snapshotEditorButtons = null;\r\n\r\n/**\r\n * 调用插件 API\r\n */\r\n// CSRF token 缓存\r\nlet cachedCsrfToken = null;\r\n\r\n/**\r\n * 获取 CSRF token（带缓存）\r\n */\r\nasync function getCsrfToken() {\r\n  // 1. 尝试从全局变量读取（如果 SillyTavern 已初始化）\r\n  if (window.token || globalThis.token) {\r\n    return window.token || globalThis.token;\r\n  }\r\n\r\n  // 2. 使用缓存的 token\r\n  if (cachedCsrfToken) {\r\n    return cachedCsrfToken;\r\n  }\r\n\r\n  // 3. 主动获取 token\r\n  try {\r\n    const response = await fetch(\"/csrf-token\");\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      cachedCsrfToken = data.token;\r\n      return cachedCsrfToken;\r\n    }\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 获取 CSRF token 失败:`, error);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * 递归移除 MVU Schema 字段\r\n * - 移除对象中所有以 $ 开头的字段（如 $meta, $arrayMeta）\r\n * - 过滤数组中的 $__META_EXTENSIBLE__$ 标记\r\n * @param {any} obj - 待处理的对象\r\n * @returns {any} 清理后的对象\r\n */\r\nfunction stripMvuSchema(obj) {\r\n  if (Array.isArray(obj)) {\r\n    return obj\r\n      .filter((item) => item !== \"$__META_EXTENSIBLE__$\")\r\n      .map((item) => stripMvuSchema(item));\r\n  } else if (typeof obj === 'object' && obj !== null && !(obj instanceof Date)) {\r\n    const result = {};\r\n    for (const key in obj) {\r\n      // 跳过所有以 $ 开头的字段\r\n      if (!key.startsWith('$')) {\r\n        result[key] = stripMvuSchema(obj[key]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * 导出 JSON 到文件\r\n * @param {any} data - 要导出的数据\r\n * @param {string} filename - 文件名\r\n */\r\nfunction exportJSONToFile(data, filename) {\r\n  const json = JSON.stringify(data, null, 2);\r\n  const blob = new Blob([json], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement('a');\r\n  a.href = url;\r\n  a.download = filename;\r\n  a.click();\r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\n/**\r\n * 从文件导入 JSON\r\n * @returns {Promise<any|null>} 解析后的 JSON 对象，取消则返回 null\r\n */\r\nasync function importJSONFromFile() {\r\n  return new Promise((resolve) => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = '.json';\r\n    input.onchange = async (e) => {\r\n      const file = e.target.files?.[0];\r\n      if (!file) {\r\n        resolve(null);\r\n        return;\r\n      }\r\n      try {\r\n        const text = await file.text();\r\n        const data = JSON.parse(text);\r\n        resolve(data);\r\n      } catch (error) {\r\n        toastr.error(`导入失败：${error.message}`);\r\n        resolve(null);\r\n      }\r\n    };\r\n    input.click();\r\n  });\r\n}\r\n\r\n/**\r\n * 规范化快照数据（兼容旧格式）\r\n * 旧格式：{ metadata: {...}, variables: {...} }\r\n * 新格式：{ ... }（直接是变量对象）\r\n * @param {Object} snapshotBody - 原始快照数据\r\n * @param {boolean} stripSchema - 是否剥离 schema（MVU 兼容模式）\r\n * @returns {Object} 规范化后的快照数据\r\n */\r\nfunction normalizeSnapshotBody(snapshotBody, stripSchema = false) {\r\n  if (!snapshotBody || typeof snapshotBody !== \"object\") {\r\n    return {};\r\n  }\r\n\r\n  // 检测旧格式：同时包含 metadata 和 variables 字段\r\n  const hasMetadata = \"metadata\" in snapshotBody;\r\n  const hasVariables = \"variables\" in snapshotBody;\r\n\r\n  if (hasMetadata && hasVariables) {\r\n    console.log(\r\n      `${EXTENSION_LOG_PREFIX} 检测到旧格式快照，自动提取 variables 字段`,\r\n    );\r\n    const result = snapshotBody.variables || {};\r\n\r\n    // MVU 兼容：剥离 schema\r\n    if (stripSchema && typeof result === 'object') {\r\n      return stripMvuSchema(result);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // MVU 兼容：剥离 schema（对于新格式也可能包含 schema）\r\n  if (stripSchema && typeof snapshotBody === 'object') {\r\n    return stripMvuSchema(snapshotBody);\r\n  }\r\n\r\n  // 新格式或其他情况，直接返回\r\n  return snapshotBody;\r\n}\r\n\r\nasync function callPluginAPI(endpoint, options = {}) {\r\n  const url = `${PLUGIN_BASE_URL}${endpoint}`;\r\n\r\n  // 【修复】使用 SillyTavern 标准的 getRequestHeaders() 获取所有必要的 headers（包括 CSRF token）\r\n  const standardHeaders = getRequestHeaders();\r\n\r\n  const finalHeaders = {\r\n    ...standardHeaders,\r\n    \"Content-Type\": \"application/json\",\r\n    ...options.headers,\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: finalHeaders,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 404) {\r\n        throw new Error(\"插件未安装或未启用\");\r\n      }\r\n      throw new Error(\r\n        `API 请求失败: ${response.status} ${response.statusText}`,\r\n      );\r\n    }\r\n\r\n    if (response.status === 204) {\r\n      return null;\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} API 调用失败:`, endpoint, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * 加载全局快照列表\r\n */\r\n/**\r\n * 切换全局快照视图模式\r\n */\r\nfunction switchSnapshotView(mode) {\r\n  if (snapshotsState.viewMode === mode) return;\r\n\r\n  snapshotsState.viewMode = mode;\r\n\r\n  const listView = document.getElementById(\"var_system_snapshots_list_view\");\r\n  const editorView = document.getElementById(\"var_system_snapshot_editor_view\");\r\n\r\n  if (mode === \"list\") {\r\n    listView.style.display = \"flex\";\r\n    editorView.style.display = \"none\";\r\n  } else {\r\n    listView.style.display = \"none\";\r\n    editorView.style.display = \"flex\";\r\n  }\r\n\r\n  console.log(`${EXTENSION_LOG_PREFIX} 快照视图切换到: ${mode}`);\r\n}\r\n\r\n/**\r\n * 初始化快照编辑器\r\n */\r\nasync function ensureSnapshotEditorInstance() {\r\n  if (snapshotsState.editorController) {\r\n    return;\r\n  }\r\n\r\n  const container = document.getElementById(\"var_system_snapshot_body_editor\");\r\n  if (!container) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 找不到快照编辑器容器`);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    snapshotsState.editorController = createVariableBlockEditor({\r\n      container,\r\n      initialValue: {},\r\n      styleUrl: JSON_EDITOR_STYLE_URL,\r\n      scriptUrl: JSON_EDITOR_SCRIPT_URL,\r\n      readOnly: false,\r\n      onChange: () => {\r\n        // onChange callback - 内容变化时更新状态\r\n        updateSnapshotEditorStatus(\"已修改，未保存\", \"warn\");\r\n      },\r\n      onFallback: () => {\r\n        console.warn(\r\n          `${EXTENSION_LOG_PREFIX} 快照编辑器 JSON 资源加载失败，已降级为纯文本模式`,\r\n        );\r\n        updateSnapshotEditorStatus(\"编辑器已降级为纯文本模式\", \"warn\");\r\n      },\r\n    });\r\n\r\n    // 关键：必须调用 ensureReady() 来实际初始化编辑器 UI\r\n    await snapshotsState.editorController.ensureReady();\r\n\r\n    console.log(`${EXTENSION_LOG_PREFIX} 快照编辑器已初始化`);\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 快照编辑器初始化失败:`, error);\r\n  }\r\n}\r\n\r\n/**\r\n * 更新快照编辑器状态显示\r\n */\r\nfunction updateSnapshotEditorStatus(message, type = \"info\") {\r\n  const statusElement = document.getElementById(\r\n    \"var_system_snapshot_editor_status\",\r\n  );\r\n  if (!statusElement) return;\r\n\r\n  statusElement.textContent = message;\r\n  statusElement.style.color = STATUS_COLORS[type] || STATUS_COLORS.info;\r\n}\r\n\r\nasync function loadGlobalSnapshots() {\r\n  if (snapshotsState.loading) {\r\n    console.log(`${EXTENSION_LOG_PREFIX} 快照正在加载中，跳过重复请求`);\r\n    return;\r\n  }\r\n\r\n  snapshotsState.loading = true;\r\n  updateSnapshotsListUI(\"加载中...\");\r\n\r\n  try {\r\n    console.log(`${EXTENSION_LOG_PREFIX} 开始加载全局快照...`);\r\n    const data = await callPluginAPI(\"/global-snapshots\");\r\n    snapshotsState.snapshots = data.snapshots || [];\r\n\r\n    console.log(\r\n      `${EXTENSION_LOG_PREFIX} 已加载 ${snapshotsState.snapshots.length} 个全局快照`,\r\n      snapshotsState.snapshots,\r\n    );\r\n\r\n    applySnapshotFilters();\r\n    renderSnapshotsList();\r\n    updateTagFilterOptions(); // 更新标签下拉菜单\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 加载全局快照失败:`, error);\r\n\r\n    // 清空快照列表\r\n    snapshotsState.snapshots = [];\r\n    snapshotsState.filteredSnapshots = [];\r\n\r\n    // 根据错误类型显示不同的提示\r\n    let errorMessage = \"加载失败\";\r\n    if (error.message.includes(\"插件未安装\")) {\r\n      errorMessage =\r\n        \"插件未安装或未启用<br><br>全局快照功能需要安装 ST-VarSystemPlugin 插件\";\r\n    } else if (error.message.includes(\"Failed to fetch\")) {\r\n      errorMessage =\r\n        \"无法连接到插件 API<br><br>请确保 SillyTavern 服务器正在运行\";\r\n    } else {\r\n      errorMessage = `加载失败: ${error.message}`;\r\n    }\r\n\r\n    updateSnapshotsListUI(errorMessage);\r\n    renderSnapshotsList(); // 确保显示空列表\r\n  } finally {\r\n    snapshotsState.loading = false;\r\n    console.log(`${EXTENSION_LOG_PREFIX} 加载全局快照完成，loading = false`);\r\n  }\r\n}\r\n\r\n/**\r\n * 更新标签过滤下拉菜单选项\r\n */\r\nfunction updateTagFilterOptions() {\r\n  const tagFilter = document.getElementById(\"var_system_snapshot_tag_filter\");\r\n  if (!tagFilter) return;\r\n\r\n  // 收集所有唯一标签\r\n  const allTags = new Set();\r\n  snapshotsState.snapshots.forEach((snapshot) => {\r\n    if (snapshot.tags && Array.isArray(snapshot.tags)) {\r\n      snapshot.tags.forEach((tag) => {\r\n        if (tag?.trim()) {\r\n          allTags.add(tag.trim());\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  // 排序标签\r\n  const sortedTags = Array.from(allTags).sort();\r\n\r\n  // 保存当前选中的标签\r\n  const currentValue = tagFilter.value;\r\n\r\n  // 清空并重建选项\r\n  tagFilter.innerHTML =\r\n    '<option value=\"\" data-i18n=\"All tags\">所有标签</option>';\r\n\r\n  sortedTags.forEach((tag) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = tag;\r\n    option.textContent = tag;\r\n    tagFilter.appendChild(option);\r\n  });\r\n\r\n  // 恢复之前的选择（如果该标签还存在）\r\n  if (currentValue && sortedTags.includes(currentValue)) {\r\n    tagFilter.value = currentValue;\r\n  }\r\n}\r\n\r\n/**\r\n * 应用搜索和过滤\r\n */\r\nfunction applySnapshotFilters() {\r\n  let filtered = [...snapshotsState.snapshots];\r\n\r\n  // 搜索过滤\r\n  if (snapshotsState.searchQuery) {\r\n    const query = snapshotsState.searchQuery.toLowerCase();\r\n    filtered = filtered.filter(\r\n      (s) =>\r\n        s.name.toLowerCase().includes(query) ||\r\n        s.description?.toLowerCase().includes(query),\r\n    );\r\n  }\r\n\r\n  // 标签过滤\r\n  if (snapshotsState.selectedTag) {\r\n    filtered = filtered.filter((s) =>\r\n      s.tags?.includes(snapshotsState.selectedTag),\r\n    );\r\n  }\r\n\r\n  snapshotsState.filteredSnapshots = filtered;\r\n}\r\n\r\n/**\r\n * 渲染快照列表\r\n */\r\nfunction renderSnapshotsList() {\r\n  const listContainer = document.getElementById(\"var_system_snapshots_list\");\r\n  const emptyState = document.getElementById(\"var_system_snapshots_empty\");\r\n\r\n  if (!listContainer) return;\r\n\r\n  // 清空现有内容（保留空状态元素）\r\n  listContainer.querySelectorAll(\".snapshot-card\").forEach((card) => {\r\n    card.remove();\r\n  });\r\n\r\n  if (snapshotsState.filteredSnapshots.length === 0) {\r\n    // 恢复空状态的原始 HTML 内容\r\n    emptyState.innerHTML = `\r\n      <i class=\"fa-solid fa-inbox fa-3x\" style=\"margin-bottom: 10px; opacity: 0.5\"></i>\r\n      <p data-i18n=\"No snapshots yet\">暂无全局快照</p>\r\n      <p style=\"font-size: 12px\" data-i18n=\"Click New to create one\">点击\"新建快照\"创建第一个快照</p>\r\n    `;\r\n    emptyState.style.display = \"block\";\r\n    return;\r\n  }\r\n\r\n  emptyState.style.display = \"none\";\r\n\r\n  snapshotsState.filteredSnapshots.forEach((snapshot) => {\r\n    const card = createSnapshotCard(snapshot);\r\n    listContainer.insertBefore(card, emptyState);\r\n  });\r\n}\r\n\r\n/**\r\n * 创建快照卡片\r\n */\r\nfunction createSnapshotCard(snapshot) {\r\n  const card = document.createElement(\"div\");\r\n  card.className = \"snapshot-card\";\r\n  card.dataset.snapshotId = snapshot.snapshotId;\r\n  card.style.cssText = `\r\n    border: 1px solid var(--SmartThemeBorderColor, #333);\r\n    border-radius: 6px;\r\n    padding: 14px;\r\n    background: var(--SmartThemeBlurTintColor, rgba(0,0,0,0.2));\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    transition: border-color 0.2s, box-shadow 0.2s;\r\n  `;\r\n\r\n  // 添加悬停效果\r\n  card.addEventListener(\"mouseenter\", () => {\r\n    card.style.borderColor = \"var(--SmartThemeQuoteColor, #4a9eff)\";\r\n    card.style.boxShadow = \"0 2px 8px rgba(74, 158, 255, 0.2)\";\r\n  });\r\n  card.addEventListener(\"mouseleave\", () => {\r\n    card.style.borderColor = \"var(--SmartThemeBorderColor, #333)\";\r\n    card.style.boxShadow = \"none\";\r\n  });\r\n\r\n  // 标题\r\n  const title = document.createElement(\"h4\");\r\n  title.textContent = snapshot.name;\r\n  title.style.cssText = \"margin: 0; font-size: 16px; font-weight: 600;\";\r\n  card.appendChild(title);\r\n\r\n  // 描述\r\n  if (snapshot.description) {\r\n    const desc = document.createElement(\"p\");\r\n    desc.textContent = snapshot.description;\r\n    desc.style.cssText =\r\n      \"margin: 0; font-size: 13px; color: var(--SmartThemeBodyColor, #aaa); line-height: 1.4;\";\r\n    card.appendChild(desc);\r\n  }\r\n\r\n  // 标签\r\n  if (snapshot.tags && snapshot.tags.length > 0) {\r\n    const tagsContainer = document.createElement(\"div\");\r\n    tagsContainer.style.cssText = \"display: flex; gap: 6px; flex-wrap: wrap;\";\r\n    snapshot.tags.forEach((tag) => {\r\n      const tagSpan = document.createElement(\"span\");\r\n      tagSpan.textContent = tag;\r\n      tagSpan.style.cssText = `\r\n        padding: 3px 10px;\r\n        font-size: 11px;\r\n        border-radius: 12px;\r\n        background: var(--SmartThemeQuoteColor, #4a9eff);\r\n        color: white;\r\n        font-weight: 500;\r\n        letter-spacing: 0.3px;\r\n      `;\r\n      tagsContainer.appendChild(tagSpan);\r\n    });\r\n    card.appendChild(tagsContainer);\r\n  }\r\n\r\n  // 元信息\r\n  const meta = document.createElement(\"div\");\r\n  meta.style.cssText =\r\n    \"font-size: 11px; color: var(--SmartThemeBodyColor, #888);\";\r\n  const createdDate = new Date(snapshot.createdAt).toLocaleString(\"zh-CN\");\r\n  meta.textContent = `创建于 ${createdDate}`;\r\n  card.appendChild(meta);\r\n\r\n  // 操作按钮\r\n  const actions = document.createElement(\"div\");\r\n  actions.style.cssText =\r\n    \"display: flex; gap: 6px; flex-wrap: wrap; margin-top: 4px;\";\r\n\r\n  const buttons = [\r\n    {\r\n      text: \"查看/编辑\",\r\n      icon: \"fa-pen-to-square\",\r\n      action: () => editSnapshot(snapshot.snapshotId),\r\n    },\r\n    {\r\n      text: \"应用到角色\",\r\n      icon: \"fa-download\",\r\n      action: () => loadSnapshotToCharacter(snapshot.snapshotId),\r\n    },\r\n    {\r\n      text: \"删除\",\r\n      icon: \"fa-trash\",\r\n      action: () => deleteSnapshot(snapshot.snapshotId),\r\n      danger: true,\r\n    },\r\n  ];\r\n\r\n  buttons.forEach((btnDef) => {\r\n    const btn = document.createElement(\"button\");\r\n    btn.className = \"menu_button interactable\";\r\n    // 添加 white-space: nowrap 防止文字换行，调整内边距\r\n    const dangerStyle = btnDef.danger ? \"color: #ff6b6b;\" : \"\";\r\n    btn.style.cssText = `padding: 4px 10px; font-size: 12px; white-space: nowrap; ${dangerStyle}`;\r\n    btn.innerHTML = `<i class=\"fa-solid ${btnDef.icon} fa-fw\"></i> <span>${btnDef.text}</span>`;\r\n    btn.addEventListener(\"click\", btnDef.action);\r\n    actions.appendChild(btn);\r\n  });\r\n\r\n  card.appendChild(actions);\r\n\r\n  return card;\r\n}\r\n\r\n/**\r\n * 更新快照列表 UI（加载中/错误状态）\r\n */\r\nfunction updateSnapshotsListUI(message) {\r\n  const emptyState = document.getElementById(\"var_system_snapshots_empty\");\r\n  if (emptyState) {\r\n    emptyState.innerHTML = `<p style=\"text-align: center; padding: 20px;\">${message}</p>`;\r\n    emptyState.style.display = \"block\";\r\n  }\r\n}\r\n\r\n/**\r\n * 将快照应用到当前角色\r\n */\r\nasync function loadSnapshotToCharacter(snapshotId) {\r\n  const context = window.SillyTavern.getContext();\r\n  if (!context.characterId) {\r\n    await callGenericPopup(\"请先选择一个角色\", POPUP_TYPE.TEXT, \"\", {\r\n      okButton: \"确定\",\r\n    });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const snapshot = await callPluginAPI(`/global-snapshots/${snapshotId}`);\r\n\r\n    // 确认是否要覆盖当前模板\r\n    const confirmed = await callGenericPopup(\r\n      `将快照 \"${snapshot.name}\" 应用到当前角色会覆盖现有模板内容。\\n\\n是否继续？`,\r\n      POPUP_TYPE.CONFIRM,\r\n      \"\",\r\n      { okButton: \"应用\", cancelButton: \"取消\" },\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    // 规范化快照数据（兼容旧格式）\r\n    const normalizedBody = normalizeSnapshotBody(snapshot.snapshotBody);\r\n\r\n    // 将快照内容写入角色模板\r\n    templateState.draftBody = normalizedBody;\r\n    templateState.dirty = true;\r\n\r\n    // 更新编辑器显示\r\n    if (templateState.editorController) {\r\n      templateState.editorController.set({ json: templateState.draftBody });\r\n    }\r\n\r\n    updateTemplateStatus(\r\n      `已加载快照 \"${snapshot.name}\"，请保存以应用`,\r\n      \"success\",\r\n    );\r\n    updateTemplateControls();\r\n\r\n    // 切换回角色模板标签页\r\n    switchTab(\"character\");\r\n\r\n    console.log(\r\n      `${EXTENSION_LOG_PREFIX} 已将快照 ${snapshotId} 加载到角色模板`,\r\n    );\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 加载快照失败:`, error);\r\n    await callGenericPopup(\r\n      `加载快照失败: ${error.message}`,\r\n      POPUP_TYPE.TEXT,\r\n      \"\",\r\n      { okButton: \"关闭\" },\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 编辑快照\r\n */\r\nasync function editSnapshot(snapshotId) {\r\n  console.log(`${EXTENSION_LOG_PREFIX} 编辑快照:`, snapshotId);\r\n\r\n  try {\r\n    // 从插件加载完整快照数据\r\n    const snapshot = await callPluginAPI(`/global-snapshots/${snapshotId}`);\r\n\r\n    // 设置编辑状态\r\n    snapshotsState.editingSnapshotId = snapshotId;\r\n    snapshotsState.draftSnapshot = { ...snapshot };\r\n\r\n    // 先切换到编辑视图（这样容器才可见）\r\n    switchSnapshotView(\"editor\");\r\n\r\n    // 更新标题\r\n    const title = document.getElementById(\"var_system_snapshot_editor_title\");\r\n    if (title) {\r\n      title.textContent = `编辑快照: ${snapshot.name}`;\r\n    }\r\n\r\n    // 填充表单\r\n    document.getElementById(\"var_system_snapshot_name\").value =\r\n      snapshot.name || \"\";\r\n    document.getElementById(\"var_system_snapshot_description\").value =\r\n      snapshot.description || \"\";\r\n    document.getElementById(\"var_system_snapshot_tags\").value = snapshot.tags\r\n      ? snapshot.tags.join(\", \")\r\n      : \"\";\r\n\r\n    // 在视图切换后初始化编辑器\r\n    await ensureSnapshotEditorInstance();\r\n\r\n    // 规范化快照数据（兼容旧格式）\r\n    const normalizedBody = normalizeSnapshotBody(snapshot.snapshotBody);\r\n\r\n    // 设置编辑器内容\r\n    if (snapshotsState.editorController) {\r\n      snapshotsState.editorController.set({ json: normalizedBody });\r\n    } else {\r\n      console.error(`${EXTENSION_LOG_PREFIX} 编辑器未能初始化`);\r\n    }\r\n\r\n    updateSnapshotEditorStatus(\"编辑快照，修改后点击保存\", \"info\");\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 加载快照失败:`, error);\r\n    await callGenericPopup(\r\n      `加载快照失败: ${error.message}`,\r\n      POPUP_TYPE.TEXT,\r\n      \"\",\r\n      { okButton: \"关闭\" },\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 保存当前编辑的快照\r\n */\r\nasync function saveCurrentSnapshot() {\r\n  try {\r\n    // 获取表单数据\r\n    const name = document\r\n      .getElementById(\"var_system_snapshot_name\")\r\n      .value.trim();\r\n    const description = document\r\n      .getElementById(\"var_system_snapshot_description\")\r\n      .value.trim();\r\n    const tagsInput = document\r\n      .getElementById(\"var_system_snapshot_tags\")\r\n      .value.trim();\r\n\r\n    // 验证必填字段\r\n    if (!name) {\r\n      await callGenericPopup(\"请输入快照名称\", POPUP_TYPE.TEXT, \"\", {\r\n        okButton: \"确定\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // 获取编辑器内容\r\n    let snapshotBody = null;\r\n    if (snapshotsState.editorController) {\r\n      try {\r\n        const content = snapshotsState.editorController.get();\r\n        snapshotBody = content.json;\r\n      } catch (error) {\r\n        console.error(`${EXTENSION_LOG_PREFIX} 获取编辑器内容失败:`, error);\r\n        await callGenericPopup(\r\n          \"编辑器内容有误，请检查 JSON 格式\",\r\n          POPUP_TYPE.TEXT,\r\n          \"\",\r\n          { okButton: \"确定\" },\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    // 解析标签\r\n    const tags = tagsInput\r\n      ? tagsInput\r\n          .split(\",\")\r\n          .map((t) => t.trim())\r\n          .filter((t) => t)\r\n      : [];\r\n\r\n    // 构建保存数据\r\n    const payload = {\r\n      snapshotId: snapshotsState.editingSnapshotId || undefined,\r\n      name,\r\n      description,\r\n      tags,\r\n      snapshotBody,\r\n    };\r\n\r\n    updateSnapshotEditorStatus(\"保存中...\", \"info\");\r\n\r\n    // 调用插件 API 保存\r\n    await callPluginAPI(\"/global-snapshots\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    console.log(\r\n      `${EXTENSION_LOG_PREFIX} 快照已保存:`,\r\n      snapshotsState.editingSnapshotId || \"new\",\r\n    );\r\n\r\n    // 返回列表视图并刷新\r\n    switchSnapshotView(\"list\");\r\n    await loadGlobalSnapshots();\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 保存快照失败:`, error);\r\n    updateSnapshotEditorStatus(`保存失败: ${error.message}`, \"error\");\r\n    await callGenericPopup(`保存失败: ${error.message}`, POPUP_TYPE.TEXT, \"\", {\r\n      okButton: \"关闭\",\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 取消编辑并返回列表\r\n */\r\nasync function cancelSnapshotEditor() {\r\n  // 检查是否有未保存的修改\r\n  const nameChanged =\r\n    document.getElementById(\"var_system_snapshot_name\").value.trim() !==\r\n    (snapshotsState.draftSnapshot?.name || \"\");\r\n  const descChanged =\r\n    document.getElementById(\"var_system_snapshot_description\").value.trim() !==\r\n    (snapshotsState.draftSnapshot?.description || \"\");\r\n\r\n  if (nameChanged || descChanged) {\r\n    const confirmed = await callGenericPopup(\r\n      \"有未保存的修改，确定要放弃吗？\",\r\n      POPUP_TYPE.CONFIRM,\r\n      \"\",\r\n      { okButton: \"放弃\", cancelButton: \"继续编辑\" },\r\n    );\r\n\r\n    if (!confirmed) return;\r\n  }\r\n\r\n  // 清理状态\r\n  snapshotsState.editingSnapshotId = null;\r\n  snapshotsState.draftSnapshot = null;\r\n\r\n  // 返回列表视图\r\n  switchSnapshotView(\"list\");\r\n\r\n  // 确保列表正确显示\r\n  renderSnapshotsList();\r\n}\r\n\r\n/**\r\n * 导出全局快照为 JSON 文件\r\n */\r\nasync function exportGlobalSnapshot() {\r\n  if (!snapshotsState.editorController) {\r\n    toastr.error('编辑器尚未准备就绪');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const content = snapshotsState.editorController.get();\r\n    const json = content?.json;\r\n\r\n    if (json === undefined) {\r\n      toastr.error('请修复 JSON 错误后再导出');\r\n      return;\r\n    }\r\n\r\n    const name = document.getElementById(\"var_system_snapshot_name\")?.value.trim() || 'snapshot';\r\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-').slice(0, 19);\r\n    const filename = `global_snapshot_${name}_${timestamp}.json`;\r\n\r\n    exportJSONToFile(json, filename);\r\n    toastr.success(`已导出：${filename}`);\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 导出快照失败:`, error);\r\n    toastr.error(`导出失败：${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 从 JSON 文件导入全局快照\r\n */\r\nasync function importGlobalSnapshot() {\r\n  const data = await importJSONFromFile();\r\n  if (!data) {\r\n    return; // 用户取消或导入失败\r\n  }\r\n\r\n  if (!snapshotsState.editorController) {\r\n    toastr.error('编辑器尚未准备就绪');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // 标准化导入的数据（处理旧格式，但不剥离 schema）\r\n    const normalized = normalizeSnapshotBody(data, false);\r\n\r\n    // 更新编辑器\r\n    snapshotsState.editorController.set({ json: normalized });\r\n\r\n    toastr.success('JSON 已导入到编辑器');\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 导入快照失败:`, error);\r\n    toastr.error(`导入失败：${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 从当前编辑器内容中分离 MVU Schema\r\n */\r\nasync function stripSchemaFromGlobalSnapshot() {\r\n  if (!snapshotsState.editorController) {\r\n    toastr.error('编辑器尚未准备就绪');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const content = snapshotsState.editorController.get();\r\n    const json = content?.json;\r\n\r\n    if (json === undefined) {\r\n      toastr.error('请修复 JSON 错误后再分离 Schema');\r\n      return;\r\n    }\r\n\r\n    // 应用 schema 剥离\r\n    const stripped = stripMvuSchema(json);\r\n\r\n    // 更新编辑器\r\n    snapshotsState.editorController.set({ json: stripped });\r\n\r\n    toastr.success('已移除 MVU Schema 字段');\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 分离 Schema 失败:`, error);\r\n    toastr.error(`分离 Schema 失败：${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * 删除快照\r\n */\r\nasync function deleteSnapshot(snapshotId) {\r\n  const snapshot = snapshotsState.snapshots.find(\r\n    (s) => s.snapshotId === snapshotId,\r\n  );\r\n  if (!snapshot) return;\r\n\r\n  const confirmed = await callGenericPopup(\r\n    `确定要删除快照 \"${snapshot.name}\" 吗？\\n\\n此操作不可撤销。`,\r\n    POPUP_TYPE.CONFIRM,\r\n    \"\",\r\n    { okButton: \"删除\", cancelButton: \"取消\" },\r\n  );\r\n\r\n  if (!confirmed) return;\r\n\r\n  try {\r\n    await callPluginAPI(`/global-snapshots/${snapshotId}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    console.log(`${EXTENSION_LOG_PREFIX} 已删除快照:`, snapshotId);\r\n\r\n    // 从列表中移除\r\n    snapshotsState.snapshots = snapshotsState.snapshots.filter(\r\n      (s) => s.snapshotId !== snapshotId,\r\n    );\r\n\r\n    applySnapshotFilters();\r\n    renderSnapshotsList();\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 删除快照失败:`, error);\r\n    await callGenericPopup(`删除失败: ${error.message}`, POPUP_TYPE.TEXT, \"\", {\r\n      okButton: \"关闭\",\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 新建快照\r\n */\r\nasync function createNewSnapshot() {\r\n  console.log(`${EXTENSION_LOG_PREFIX} 新建快照`);\r\n\r\n  // 重置编辑状态\r\n  snapshotsState.editingSnapshotId = null;\r\n  snapshotsState.draftSnapshot = {\r\n    name: \"\",\r\n    description: \"\",\r\n    tags: [],\r\n    snapshotBody: {}, // 直接空对象，不需要包装\r\n  };\r\n\r\n  // 先切换到编辑视图（这样容器才可见）\r\n  switchSnapshotView(\"editor\");\r\n\r\n  // 更新标题\r\n  const title = document.getElementById(\"var_system_snapshot_editor_title\");\r\n  if (title) {\r\n    title.textContent = \"新建快照\";\r\n  }\r\n\r\n  // 填充表单\r\n  document.getElementById(\"var_system_snapshot_name\").value = \"\";\r\n  document.getElementById(\"var_system_snapshot_description\").value = \"\";\r\n  document.getElementById(\"var_system_snapshot_tags\").value = \"\";\r\n\r\n  // 在视图切换后初始化编辑器\r\n  await ensureSnapshotEditorInstance();\r\n\r\n  // 设置编辑器内容\r\n  if (snapshotsState.editorController) {\r\n    snapshotsState.editorController.set({\r\n      json: snapshotsState.draftSnapshot.snapshotBody,\r\n    });\r\n  } else {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 编辑器未能初始化`);\r\n  }\r\n\r\n  updateSnapshotEditorStatus(\"新建快照，填写信息后点击保存\", \"info\");\r\n}\r\n\r\n/**\r\n * 绑定全局快照区域的事件\r\n */\r\nfunction bindSnapshotsSection(rootElement) {\r\n  if (!rootElement || snapshotButtons) {\r\n    return;\r\n  }\r\n\r\n  // 列表视图按钮\r\n  snapshotButtons = {\r\n    search: rootElement.querySelector(\"#var_system_snapshot_search\"),\r\n    tagFilter: rootElement.querySelector(\"#var_system_snapshot_tag_filter\"),\r\n    newBtn: rootElement.querySelector(\"#var_system_snapshot_new\"),\r\n    refreshBtn: rootElement.querySelector(\"#var_system_snapshot_refresh\"),\r\n  };\r\n\r\n  // 编辑器视图按钮\r\n  snapshotEditorButtons = {\r\n    back: rootElement.querySelector(\"#var_system_snapshot_editor_back\"),\r\n    save: rootElement.querySelector(\"#var_system_snapshot_editor_save\"),\r\n    cancel: rootElement.querySelector(\"#var_system_snapshot_editor_cancel\"),\r\n    export: rootElement.querySelector(\"#var_system_snapshot_editor_export\"),\r\n    import: rootElement.querySelector(\"#var_system_snapshot_editor_import\"),\r\n    stripSchema: rootElement.querySelector(\"#var_system_snapshot_editor_strip_schema\"),\r\n  };\r\n\r\n  // 搜索\r\n  snapshotButtons.search?.addEventListener(\"input\", (e) => {\r\n    snapshotsState.searchQuery = e.target.value;\r\n    applySnapshotFilters();\r\n    renderSnapshotsList();\r\n  });\r\n\r\n  // 标签过滤\r\n  snapshotButtons.tagFilter?.addEventListener(\"change\", (e) => {\r\n    snapshotsState.selectedTag = e.target.value;\r\n    applySnapshotFilters();\r\n    renderSnapshotsList();\r\n  });\r\n\r\n  // 新建快照\r\n  snapshotButtons.newBtn?.addEventListener(\"click\", () => {\r\n    void createNewSnapshot();\r\n  });\r\n\r\n  // 刷新列表\r\n  snapshotButtons.refreshBtn?.addEventListener(\"click\", () => {\r\n    void loadGlobalSnapshots();\r\n  });\r\n\r\n  // 编辑器：返回列表\r\n  snapshotEditorButtons.back?.addEventListener(\"click\", () => {\r\n    void cancelSnapshotEditor();\r\n  });\r\n\r\n  // 编辑器：保存\r\n  snapshotEditorButtons.save?.addEventListener(\"click\", () => {\r\n    void saveCurrentSnapshot();\r\n  });\r\n\r\n  // 编辑器：取消\r\n  snapshotEditorButtons.cancel?.addEventListener(\"click\", () => {\r\n    void cancelSnapshotEditor();\r\n  });\r\n\r\n  // 编辑器：导出 JSON\r\n  snapshotEditorButtons.export?.addEventListener(\"click\", () => {\r\n    void exportGlobalSnapshot();\r\n  });\r\n\r\n  // 编辑器：导入 JSON\r\n  snapshotEditorButtons.import?.addEventListener(\"click\", () => {\r\n    void importGlobalSnapshot();\r\n  });\r\n\r\n  // 编辑器：分离 Schema\r\n  snapshotEditorButtons.stripSchema?.addEventListener(\"click\", () => {\r\n    void stripSchemaFromGlobalSnapshot();\r\n  });\r\n}\r\n\r\n/**\r\n * 绑定函数库区域的事件（Phase 4）\r\n */\r\nasync function bindFunctionsSection(rootElement) {\r\n  if (!rootElement) {\r\n    return;\r\n  }\r\n\r\n  const functionsContainer = rootElement.querySelector(\r\n    \"#var_system_functions_section\",\r\n  );\r\n  if (!functionsContainer) {\r\n    console.warn(`${EXTENSION_LOG_PREFIX} 找不到函数库容器`);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // 加载函数库 UI 模板\r\n    const functionLibraryHtml = await fetch(\r\n      \"/scripts/extensions/third-party/ST-VarSystemExtension/src/ui/functionLibrary.html\",\r\n    ).then((res) => res.text());\r\n\r\n    functionsContainer.innerHTML = functionLibraryHtml;\r\n\r\n    // 加载 CSS 样式\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"stylesheet\";\r\n    link.href =\r\n      \"/scripts/extensions/third-party/ST-VarSystemExtension/src/ui/phase4.css\";\r\n    document.head.appendChild(link);\r\n\r\n    // 初始化函数库\r\n    await initFunctionLibrary();\r\n    console.log(`${EXTENSION_LOG_PREFIX} 函数库标签页已加载`);\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 加载函数库失败:`, error);\r\n  }\r\n}\r\n\r\n/**\r\n * 绑定楼层快照区域的事件（Phase 4）\r\n */\r\nasync function bindMessagesSection(rootElement) {\r\n  if (!rootElement) {\r\n    return;\r\n  }\r\n\r\n  const messagesContainer = rootElement.querySelector(\r\n    \"#var_system_messages_section\",\r\n  );\r\n  if (!messagesContainer) {\r\n    console.warn(`${EXTENSION_LOG_PREFIX} 找不到楼层快照容器`);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // 加载楼层快照 UI 模板\r\n    const messageSnapshotsHtml = await fetch(\r\n      \"/scripts/extensions/third-party/ST-VarSystemExtension/src/ui/messageSnapshots.html\",\r\n    ).then((res) => res.text());\r\n\r\n    messagesContainer.innerHTML = messageSnapshotsHtml;\r\n\r\n    // 初始化楼层快照\r\n    await initMessageSnapshots();\r\n    console.log(`${EXTENSION_LOG_PREFIX} 楼层快照标签页已加载`);\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 加载楼层快照失败:`, error);\r\n  }\r\n}\r\n\r\n/**\r\n * 绑定设置区域的事件（Phase 4）\r\n */\r\nasync function bindSettingsSection(rootElement) {\r\n  if (!rootElement) {\r\n    return;\r\n  }\r\n\r\n  const settingsContainer = rootElement.querySelector(\r\n    \"#var_system_settings_section\",\r\n  );\r\n  if (!settingsContainer) {\r\n    console.warn(`${EXTENSION_LOG_PREFIX} 找不到设置容器`);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // 加载设置 UI 模板\r\n    const settingsHtml = await fetch(\r\n      \"/scripts/extensions/third-party/ST-VarSystemExtension/src/ui/settings.html\",\r\n    ).then((res) => res.text());\r\n\r\n    settingsContainer.innerHTML = settingsHtml;\r\n\r\n    // 初始化设置\r\n    await initSettings();\r\n    console.log(`${EXTENSION_LOG_PREFIX} 设置标签页已加载`);\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 加载设置失败:`, error);\r\n  }\r\n}\r\n\r\nasync function injectAppHeaderEntry() {\r\n  let $drawer = $(\"#var_system_drawer\");\r\n  let needsInjection = false;\r\n\r\n  if ($drawer.length === 0) {\r\n    // HTML不存在，需要加载并注入\r\n    needsInjection = true;\r\n\r\n    let templateHtml = null;\r\n    try {\r\n      templateHtml = await renderExtensionTemplateAsync(\r\n        \"third-party/ST-VarSystemExtension/assets/templates\",\r\n        \"appHeaderVarSystemDrawer\",\r\n      );\r\n    } catch (error) {\r\n      console.warn(\r\n        `${EXTENSION_LOG_PREFIX} 模板 appHeaderVarSystemDrawer 加载失败`,\r\n        error,\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!templateHtml) {\r\n      console.warn(\r\n        `${EXTENSION_LOG_PREFIX} 模板 appHeaderVarSystemDrawer 返回空内容`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    $drawer = $(templateHtml);\r\n    const $anchor = $(\"#extensions-settings-button\");\r\n    if ($anchor.length === 0) {\r\n      console.warn(\r\n        `${EXTENSION_LOG_PREFIX} 找不到扩展设置按钮，无法插入入口`,\r\n      );\r\n      return;\r\n    }\r\n\r\n    $anchor.after($drawer);\r\n\r\n    const $icon = $drawer.find(\"#var_system_drawer_icon\");\r\n    const $content = $drawer.find(\"#var_system_drawer_content\");\r\n\r\n    $content.hide();\r\n\r\n    $drawer.find(\".drawer-toggle\").on(\"click\", () => {\r\n      if ($icon.hasClass(\"openIcon\")) {\r\n        closeDrawer($icon, $content);\r\n      } else {\r\n        openDrawer($icon, $content);\r\n      }\r\n    });\r\n  }\r\n\r\n  // 无论HTML是否已存在，都执行初始化\r\n  const rootElement = $drawer.get(0);\r\n  if (!rootElement) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 无法获取drawer元素`);\r\n    return;\r\n  }\r\n\r\n  bindTemplateSection(rootElement);\r\n  bindTabSwitching(rootElement);\r\n  bindSnapshotsSection(rootElement);\r\n  await bindFunctionsSection(rootElement);\r\n  await bindMessagesSection(rootElement);\r\n  await bindSettingsSection(rootElement);\r\n\r\n  scheduleTemplateRefresh(true);\r\n\r\n  console.log(\r\n    `${EXTENSION_LOG_PREFIX} 自定义入口已${needsInjection ? \"注入\" : \"重新初始化\"}`,\r\n  );\r\n}\r\n\r\nasync function initExtension() {\r\n  console.log(`${EXTENSION_LOG_PREFIX} (${EXTENSION_NAMESPACE}) 初始化`);\r\n  await injectAppHeaderEntry();\r\n  eventSource.on(event_types.CHAT_CHANGED, onContextChanged);\r\n  eventSource.on(event_types.CHARACTER_EDITOR_OPENED, onContextChanged);\r\n\r\n  // 注册变量系统事件监听器（Phase 3）\r\n  registerEventListeners();\r\n  console.log(`${EXTENSION_LOG_PREFIX} 事件监听器已注册`);\r\n\r\n  // 初始化\"重新处理变量\"按钮\r\n  initReprocessButton();\r\n  console.log(`${EXTENSION_LOG_PREFIX} 重新处理变量按钮已初始化`);\r\n\r\n  // 监听聊天和角色变化，更新按钮显示状态\r\n  eventSource.on(event_types.CHAT_CHANGED, updateButtonVisibility);\r\n  eventSource.on(event_types.MESSAGE_RECEIVED, updateButtonVisibility);\r\n  eventSource.on(event_types.CHARACTER_EDITOR_OPENED, updateButtonVisibility);\r\n}\r\n\r\nasync function shutdownExtension() {\r\n  console.log(`${EXTENSION_LOG_PREFIX} 卸载`);\r\n  eventSource.removeListener(event_types.CHAT_CHANGED, onContextChanged);\r\n  eventSource.removeListener(\r\n    event_types.CHARACTER_EDITOR_OPENED,\r\n    onContextChanged,\r\n  );\r\n  eventSource.removeListener(event_types.CHAT_CHANGED, updateButtonVisibility);\r\n  eventSource.removeListener(\r\n    event_types.MESSAGE_RECEIVED,\r\n    updateButtonVisibility,\r\n  );\r\n  eventSource.removeListener(\r\n    event_types.CHARACTER_EDITOR_OPENED,\r\n    updateButtonVisibility,\r\n  );\r\n\r\n  // 卸载变量系统事件监听器（Phase 3）\r\n  unregisterEventListeners();\r\n  console.log(`${EXTENSION_LOG_PREFIX} 事件监听器已卸载`);\r\n}\r\n\r\n// 允许外部在需要时显式调用\r\nwindow.STVarSystemExtension = {\r\n  init: initExtension,\r\n  exit: shutdownExtension,\r\n};\r\n\r\n// 自动初始化\r\n$(async () => {\r\n  try {\r\n    await initExtension();\r\n  } catch (error) {\r\n    console.error(`${EXTENSION_LOG_PREFIX} 初始化失败`, error);\r\n  }\r\n});\r\n"],"file":"index.js"}